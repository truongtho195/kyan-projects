<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    mc:Ignorable="d"
                    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Luna">
	<LinearGradientBrush x:Key="bgHeaderColor" EndPoint="0.5,1"
		StartPoint="0.5,0">
		<GradientStop Color="#FF5593EE"
			Offset="0.021" />
		<GradientStop Color="#FF68A4EB"
			Offset="0.988" />
		<GradientStop Color="#FF67A3EB" Offset="0.972"/>
	</LinearGradientBrush>
	<Style x:Key="StaticExtension2"
		TargetType="{x:Type ScrollViewer}">
		<Setter Property="Focusable"
			Value="false" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollViewer}">
					<Grid Background="{TemplateBinding Background}"
						SnapsToDevicePixels="true">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto"/>
							<RowDefinition/>
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="ValidationStates">
								<VisualState x:Name="Valid"/>
								<VisualState x:Name="InvalidFocused"/>
								<VisualState x:Name="InvalidUnfocused"/>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
							CanContentScroll="{TemplateBinding CanContentScroll}"
							ContentTemplate="{TemplateBinding ContentTemplate}"
							Content="{TemplateBinding Content}"
							KeyboardNavigation.DirectionalNavigation="Local"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" d:LayoutOverrides="Width" Grid.Row="1" Grid.RowSpan="2" Grid.ColumnSpan="2" />
						<ScrollBar x:Name="PART_HorizontalScrollBar"
							Cursor="Arrow"
							Maximum="{TemplateBinding ScrollableWidth}"
							Minimum="0.0"
							Orientation="Horizontal"
							Grid.Row="2"
							Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
							Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
							ViewportSize="{TemplateBinding ViewportWidth}" Style="{DynamicResource HorizontalScrollBarStyle}" Background="#58939393" Height="12" MinHeight="0" />
						<ScrollBar x:Name="PART_VerticalScrollBar"
							Cursor="Arrow"
							Grid.Column="1"
							Maximum="{TemplateBinding ScrollableHeight}"
							Minimum="0.0"
							Orientation="Vertical"
							Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
							Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
							ViewportSize="{TemplateBinding ViewportHeight}" Style="{DynamicResource VerticalScrollBarStyle}" Background="{DynamicResource bgScrollBard}" Width="12" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" MinWidth="0" Grid.Row="1" />
						<DockPanel
							Grid.Column="0"
							Grid.Row="2" LastChildFill="False">
							<Rectangle DockPanel.Dock="Left"
								Fill="Transparent"
								Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
								Width="1" />
							<Rectangle DockPanel.Dock="Top"
								Fill="Transparent"
								Height="1"
								Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />
						</DockPanel>
						<ScrollViewer
							Focusable="false"
							HorizontalScrollBarVisibility="Hidden"
							VerticalScrollBarVisibility="Hidden" d:LayoutOverrides="Height" Grid.ColumnSpan="2">
							<GridViewHeaderRowPresenter AllowsColumnReorder="{Binding TemplatedParent.View.AllowsColumnReorder, RelativeSource={RelativeSource TemplatedParent}}"
								ColumnHeaderContainerStyle="{Binding TemplatedParent.View.ColumnHeaderContainerStyle, RelativeSource={RelativeSource TemplatedParent}}"
								ColumnHeaderToolTip="{Binding TemplatedParent.View.ColumnHeaderToolTip, RelativeSource={RelativeSource TemplatedParent}}"
								ColumnHeaderStringFormat="{Binding TemplatedParent.View.ColumnHeaderStringFormat, RelativeSource={RelativeSource TemplatedParent}}"
								ColumnHeaderContextMenu="{Binding TemplatedParent.View.ColumnHeaderContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
								ColumnHeaderTemplate="{Binding TemplatedParent.View.ColumnHeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}"
								Columns="{Binding TemplatedParent.View.Columns, RelativeSource={RelativeSource TemplatedParent}}"
								ColumnHeaderTemplateSelector="{Binding TemplatedParent.View.ColumnHeaderTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</ScrollViewer>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

    <!-- Resource dictionary entries should be defined here. -->
    <SolidColorBrush x:Key="brBackgroundColor"
                     Color="#FFCDE8FD" />

    <!--#region Validation Template Error-->
    <ControlTemplate x:Key="validationTemplate">
        <ControlTemplate.Resources>
            <Storyboard x:Key="myStoryboard"
                        RepeatBehavior="1x">
                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                               Storyboard.TargetName="dockPanel">
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.2"
                                            Value="{x:Static Visibility.Hidden}" />
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.4"
                                            Value="{x:Static Visibility.Visible}" />
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.6"
                                            Value="{x:Static Visibility.Hidden}" />
                    <DiscreteObjectKeyFrame KeyTime="0:0:0.8"
                                            Value="{x:Static Visibility.Visible}" />
                    <DiscreteObjectKeyFrame KeyTime="0:0:1"
                                            Value="{x:Static Visibility.Hidden}" />
                    <DiscreteObjectKeyFrame KeyTime="0:0:1.2"
                                            Value="{x:Static Visibility.Visible}" />
                </ObjectAnimationUsingKeyFrames>
            </Storyboard>
        </ControlTemplate.Resources>
        <DockPanel x:Name="dockPanel"
                   LastChildFill="False">
            <AdornedElementPlaceholder x:Name="errorAdorner" />
            <Grid Margin="-20,0,0,0">
                <Ellipse Fill="Red"
                         StrokeThickness="2"
                         Width="14"
                         Height="14" />
                
                <TextBlock TextWrapping="Wrap"
                           Text="!"
                           ToolTip="{Binding AdornedElement.(Validation.Errors).CurrentItem.ErrorContent, ElementName=errorAdorner}"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center"
                           Foreground="#FFEBE3E3"
                           FontSize="13.333"
                           FontWeight="Bold" />
            </Grid>
        </DockPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="IsVisible"
                     Value="False">
                <Trigger.ExitActions>
                    <BeginStoryboard Storyboard="{StaticResource myStoryboard}" />
                </Trigger.ExitActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#Endregion Validation Template Error-->

    <!--#region Validation Style-->
    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Validation.ErrorTemplate"
                Value="{DynamicResource validationTemplate}" />
        <Style.Triggers>
            <Trigger Property="IsVisible"
                     Value="false">
                <Setter Property="Validation.ErrorTemplate"
                        Value="{x:Null}" />
            </Trigger>

            <Trigger Property="IsVisible"
                     Value="true">
                <Setter Property="Validation.ErrorTemplate"
                        Value="{DynamicResource validationTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    
    <!--#Endregion  Validation Style-->

    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="3"
                               SnapsToDevicePixels="true"
                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                               StrokeThickness="1"
                               StrokeDashArray="1 2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="ButtonNormalBackgroundFill"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="#FFFFFFFF"
                      Offset="0" />
        <GradientStop Color="#FFF0F0EA"
                      Offset="0.9" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ButtonBorder"
                     Color="#FF003C74" />
    <Style TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource ButtonFocusVisual}" />
        <Setter Property="Background"
                Value="{StaticResource ButtonNormalBackgroundFill}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource ButtonBorder}" />
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Cursor="Hand"
                            Background="White">
                        <ContentPresenter x:Name="contentPresenter"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="0" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="#FFDEDEDE" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused"
                                 Value="true" />
                        <Trigger Property="ToggleButton.IsChecked"
                                 Value="true" />
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True">
                            <Setter Property="Background"
                                    TargetName="border"
                                    Value="#FF72B1EB" />
                            <Setter Property="Foreground"
                                    Value="White" />

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!--#region "  Combo Box MetroStyle" -->
    <Style x:Key="ComboBoxFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="4,4,21,4"
                               SnapsToDevicePixels="true"
                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                               StrokeThickness="1"
                               StrokeDashArray="1 2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ComboBoxTransparentButtonStyle"
           TargetType="{x:Type ToggleButton}">
        <Setter Property="MinWidth"
                Value="0" />
        <Setter Property="MinHeight"
                Value="0" />
        <Setter Property="Width"
                Value="Auto" />
        <Setter Property="Height"
                Value="Auto" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Focusable"
                Value="false" />
        <Setter Property="ClickMode"
                Value="Press" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid Background="{TemplateBinding Background}"
                          SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition SharedSizeGroup="ComboBoxButton"
                                              Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Microsoft_Windows_Themes:ScrollChrome x:Name="Chrome"
                                                               Grid.Column="1"
                                                               HasOuterBorder="false"
                                                               Padding="1,0,0,0"
                                                               RenderMouseOver="{TemplateBinding IsMouseOver}"
                                                               RenderPressed="{TemplateBinding IsChecked}"
                                                               Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="DownArrow"
                                                               ThemeColor="NormalColor"
                                                               Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                                               d:IsHidden="True"
                                                               Visibility="Collapsed" />
                        <Border BorderBrush="#FF606060"
                                BorderThickness="0.7,0,0,0"
                                Grid.Column="1"
                                Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                            <Path Data="M10,9.9588919 L10,10 9.9588918,10 z M0,0.17677682 L9.823224,10 0,10 z M0,0 L0.10050513,0 0,0.10050514 z"
                                  Fill="#FF5C5C5C"
                                  Height="8"
                                  RenderTransformOrigin="0.499999998412411,0.499999999167412"
                                  Stretch="Fill"
                                  Width="8"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Margin="0,-3,0,0">
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform />
                                        <SkewTransform />
                                        <RotateTransform Angle="-45" />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ComboBoxEditableTextBox"
           TargetType="{x:Type TextBox}">
        <Setter Property="OverridesDefaultStyle"
                Value="true" />
        <Setter Property="AllowDrop"
                Value="true" />
        <Setter Property="MinWidth"
                Value="0" />
        <Setter Property="MinHeight"
                Value="0" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="ScrollViewer.PanningMode"
                Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <ScrollViewer x:Name="PART_ContentHost"
                                  Background="Transparent"
                                  Focusable="false"
                                  HorizontalScrollBarVisibility="Hidden"
                                  VerticalScrollBarVisibility="Hidden" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="ComboBoxEditableTemplate"
                     TargetType="{x:Type ComboBox}">
        <Grid SnapsToDevicePixels="true">
            <Border x:Name="Bd"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Background="{TemplateBinding Background}"
                    Padding="1">
                <Grid Grid.IsSharedSizeScope="true">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition SharedSizeGroup="ComboBoxButton"
                                          Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <TextBox x:Name="PART_EditableTextBox"
                             Grid.Column="1"
                             HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                             IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                             Margin="{TemplateBinding Padding}"
                             Style="{DynamicResource ComboBoxEditableTextBox}"
                             VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                    <ToggleButton Background="{x:Null}"
                                  Grid.ColumnSpan="3"
                                  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                  Style="{StaticResource ComboBoxTransparentButtonStyle}" />
                </Grid>
            </Border>
            <Popup x:Name="PART_Popup"
                   AllowsTransparency="true"
                   Focusable="false"
                   IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                   Placement="Bottom">
                <Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw"
                                                                 Color="Transparent"
                                                                 MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                                 MinWidth="{TemplateBinding ActualWidth}">
                    <Border x:Name="DropDownBorder"
                            BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                            BorderThickness="1"
                            Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                        <ScrollViewer x:Name="DropDownScrollViewer">
                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                <Canvas HorizontalAlignment="Left"
                                        Height="0"
                                        VerticalAlignment="Top"
                                        Width="0">
                                    <Rectangle x:Name="OpaqueRect"
                                               Fill="{Binding Background, ElementName=DropDownBorder}"
                                               Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                                               Width="{Binding ActualWidth, ElementName=DropDownBorder}" />
                                </Canvas>
                                <ItemsPresenter x:Name="ItemsPresenter"
                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </ScrollViewer>
                    </Border>
                </Microsoft_Windows_Themes:SystemDropShadowChrome>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasItems"
                     Value="false">
                <Setter Property="MinHeight"
                        TargetName="DropDownBorder"
                        Value="95" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Foreground"
                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                <Setter Property="Background"
                        TargetName="Bd"
                        Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
            </Trigger>
            <Trigger Property="IsGrouping"
                     Value="true">
                <Setter Property="ScrollViewer.CanContentScroll"
                        Value="false" />
            </Trigger>
            <Trigger Property="HasDropShadow"
                     SourceName="PART_Popup"
                     Value="true">
                <Setter Property="Margin"
                        TargetName="Shdw"
                        Value="0,0,5,5" />
                <Setter Property="Color"
                        TargetName="Shdw"
                        Value="#71000000" />
            </Trigger>
            <Trigger Property="ScrollViewer.CanContentScroll"
                     SourceName="DropDownScrollViewer"
                     Value="false">
                <Setter Property="Canvas.Top"
                        TargetName="OpaqueRect"
                        Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                <Setter Property="Canvas.Left"
                        TargetName="OpaqueRect"
                        Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource ComboBoxFocusVisual}" />
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <Setter Property="Background"
                Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="BorderBrush"
                Value="{DynamicResource ListBorder}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Padding"
                Value="1" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="true" />
        <Setter Property="ScrollViewer.PanningMode"
                Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="False" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid SnapsToDevicePixels="true">
                        <Border x:Name="Bd"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Padding="1">
                            <Grid Grid.IsSharedSizeScope="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition SharedSizeGroup="ComboBoxButton"
                                                      Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Border x:Name="SelectedItemBorder"
                                        Grid.ColumnSpan="2"
                                        Margin="{TemplateBinding Padding}" />
                                <ContentPresenter ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                  Content="{TemplateBinding SelectionBoxItem}"
                                                  Grid.Column="1"
                                                  ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  Margin="{TemplateBinding Padding}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                <ToggleButton Grid.ColumnSpan="3"
                                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                              Style="{StaticResource ComboBoxTransparentButtonStyle}" />
                            </Grid>
                        </Border>
                        <Popup x:Name="PART_Popup"
                               AllowsTransparency="true"
                               Focusable="false"
                               IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                               Placement="Bottom"
                               Margin="0,-2,0,0">
                            <Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw"
                                                                             Color="Transparent"
                                                                             MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                                             MinWidth="{TemplateBinding ActualWidth}">
                                <Border x:Name="DropDownBorder"
                                        BorderBrush="{DynamicResource ListBorder}"
                                        BorderThickness="1,0,1,1"
                                        Background="White">
                                    <ScrollViewer x:Name="DropDownScrollViewer">
                                        <Grid RenderOptions.ClearTypeHint="Enabled">
                                            <Canvas HorizontalAlignment="Left"
                                                    Height="0"
                                                    VerticalAlignment="Top"
                                                    Width="0">
                                                <Rectangle x:Name="OpaqueRect"
                                                           Fill="{Binding Background, ElementName=DropDownBorder}"
                                                           Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                                                           Width="{Binding ActualWidth, ElementName=DropDownBorder}" />
                                            </Canvas>
                                            <ItemsPresenter x:Name="ItemsPresenter"
                                                            KeyboardNavigation.DirectionalNavigation="Contained"
                                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                        </Grid>
                                    </ScrollViewer>
                                </Border>
                            </Microsoft_Windows_Themes:SystemDropShadowChrome>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelectionBoxHighlighted"
                                           Value="true" />
                                <Condition Property="IsDropDownOpen"
                                           Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                        </MultiTrigger>
                        <Trigger Property="IsSelectionBoxHighlighted"
                                 Value="true">
                            <Setter Property="Background"
                                    TargetName="SelectedItemBorder"
                                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                        </Trigger>
                        <Trigger Property="HasDropShadow"
                                 SourceName="PART_Popup"
                                 Value="true">
                            <Setter Property="Margin"
                                    TargetName="Shdw"
                                    Value="0,0,5,5" />
                            <Setter Property="Color"
                                    TargetName="Shdw"
                                    Value="#71000000" />
                        </Trigger>
                        <Trigger Property="HasItems"
                                 Value="false">
                            <Setter Property="MinHeight"
                                    TargetName="DropDownBorder"
                                    Value="95" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsGrouping"
                                 Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll"
                                    Value="false" />
                        </Trigger>
                        <Trigger Property="ScrollViewer.CanContentScroll"
                                 SourceName="DropDownScrollViewer"
                                 Value="false">
                            <Setter Property="Canvas.Top"
                                    TargetName="OpaqueRect"
                                    Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                            <Setter Property="Canvas.Left"
                                    TargetName="OpaqueRect"
                                    Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEditable"
                     Value="true">
                <Setter Property="IsTabStop"
                        Value="false" />
                <Setter Property="Padding"
                        Value="0,1" />
                <Setter Property="Template"
                        Value="{StaticResource ComboBoxEditableTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--#Region "EmptyButton Style"-->
    <LinearGradientBrush x:Key="ButtonNormalBackground"
                         EndPoint="0,1"
                         StartPoint="0,0">
        <GradientStop Color="#F3F3F3"
                      Offset="0" />
        <GradientStop Color="#EBEBEB"
                      Offset="0.5" />
        <GradientStop Color="#DDDDDD"
                      Offset="0.5" />
        <GradientStop Color="#CDCDCD"
                      Offset="1" />
    </LinearGradientBrush>
    <SolidColorBrush x:Key="ButtonNormalBorder"
                     Color="#FF707070" />
    <Style x:Key="EmptyButton"
           TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle"
                Value="{StaticResource ButtonFocusVisual}" />
        <Setter Property="Background"
                Value="{StaticResource ButtonNormalBackground}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource ButtonNormalBorder}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Margin="{TemplateBinding Padding}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            RenderTransformOrigin="0.5,0.5"
                            Cursor="Hand" BorderBrush="#00000000" BorderThickness="0.5">
                        <Border.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform />
                                <SkewTransform />
                                <RotateTransform />
                                <TranslateTransform />
                            </TransformGroup>
                        </Border.RenderTransform>
                        <ContentPresenter x:Name="contentPresenter"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          Height="Auto"
                                          Width="Auto"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RenderTransformOrigin="0.5,0.5">
                            <ContentPresenter.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="1" />
                                    <SkewTransform />
                                    <RotateTransform />
                                    <TranslateTransform />
                                </TransformGroup>
                            </ContentPresenter.RenderTransform>
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="True">
                        	<Setter Property="BorderBrush" TargetName="border" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused"
                                 Value="true" />
                        <Trigger Property="ToggleButton.IsChecked"
                                 Value="true">
                            <Setter Property="RenderTransform"
                                    TargetName="contentPresenter">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1"
                                                        ScaleY="1" />
                                        <SkewTransform />
                                        <RotateTransform />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform"
                                    TargetName="border">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="0.9"
                                                        ScaleY="0.9" />
                                        <SkewTransform />
                                        <RotateTransform />
                                        <TranslateTransform />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="True" />
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Foreground"
                                    Value="#ADADAD" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <LinearGradientBrush x:Key="brBottomColor"
                         EndPoint="0.5,1"
                         StartPoint="0.5,0">
        <GradientStop Color="#FF5593EE" />
        <GradientStop Color="#FF68A4EB"
                      Offset="0.988" />
    </LinearGradientBrush>
    <RadialGradientBrush x:Key="FlashCardBG"
                         RadiusY="0.582"
                         RadiusX="0.582"
                         GradientOrigin="0.814,0.205">
        <RadialGradientBrush.RelativeTransform>
            <TransformGroup>
                <ScaleTransform CenterY="0.5"
                                CenterX="0.5"
                                ScaleY="1"
                                ScaleX="1" />
                <SkewTransform AngleY="0"
                               AngleX="0"
                               CenterY="0.5"
                               CenterX="0.5" />
                <RotateTransform Angle="-95.19"
                                 CenterY="0.5"
                                 CenterX="0.5" />
                <TranslateTransform />
            </TransformGroup>
        </RadialGradientBrush.RelativeTransform>
        <GradientStop Color="#FF1E71BE"
                      Offset="0" />
        <GradientStop Color="#FF152895"
                      Offset="1" />
    </RadialGradientBrush>
    <LinearGradientBrush x:Key="FullScreenBg1"
                         EndPoint="0.5,1"
                         MappingMode="RelativeToBoundingBox"
                         StartPoint="0.5,0">
        <GradientStop Color="Black"
                      Offset="0.045" />
        <GradientStop Color="#E5000000"
                      Offset="0.103" />
        <GradientStop Color="#E5000000"
                      Offset="1" />
    </LinearGradientBrush>
    <RadialGradientBrush x:Key="ColorLineNumNomard">
        <GradientStop Color="#FF434141"
                      Offset="1" />
        <GradientStop Color="#FF9B9797" />
    </RadialGradientBrush>
    <RadialGradientBrush x:Key="ColorLineNumSelected">
        <GradientStop Color="#FF0B0E9B"
                      Offset="0.996" />
        <GradientStop Color="#FF4C6CED" />
    </RadialGradientBrush>
    <Style x:Key="ListBoxItemVerticalStyle"
           TargetType="{x:Type ListBoxItem}">
    	<Style.Triggers>
    		<Trigger Property="Selector.IsSelected" Value="True">
    			<Setter Property="Background" Value="#FF162DB6"/>
    		</Trigger>
    	</Style.Triggers>
        <Setter Property="Background"
                Value="#0AEFE1E1" />
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment"
                Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Padding"
                Value="2,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="true"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Background="{TemplateBinding Background}">
                        <ToggleButton x:Name="toggleButton" Margin="0" Background="Black" IsChecked="{TemplateBinding IsSelected}">
                    		<Grid x:Name="grid"
                    			HorizontalAlignment="Stretch"
                    			VerticalAlignment="Stretch">
                    			<Ellipse x:Name="ellipse"
                    				Fill="{Binding Background, ElementName=Bd}"
                    				Width="20"
                    				Height="20"
                    				HorizontalAlignment="Center"
                    				VerticalAlignment="Center" />
                    		</Grid>
                    	</ToggleButton>
                    </Border>
                    <ControlTemplate.Triggers>
                		<Trigger Property="IsSelected"
                			Value="true">
                			<Setter Property="Foreground"
                				Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                			<Setter Property="ToolTip"
                				TargetName="grid"
                				Value="Thai" />
                			<Setter Property="Background" TargetName="grid" Value="Black"/>
                		</Trigger>
                		<Trigger Property="IsEnabled"
                			Value="false">
                			<Setter Property="Foreground"
                				Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                		</Trigger>
                	</ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="HorizontalAlignment"
                Value="Stretch" />
    </Style>
    <SolidColorBrush x:Key="{x:Static DataGrid.FocusBorderBrushKey}" Color="#FF000000"/>
    <Style x:Key="DataGridCellEclipStyle" TargetType="{x:Type DataGridCell}">
    	<Setter Property="Background" Value="Transparent"/>
    	<Setter Property="BorderBrush" Value="Transparent"/>
    	<Setter Property="BorderThickness" Value="1"/>
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type DataGridCell}">
    				<Border SnapsToDevicePixels="True" HorizontalAlignment="Center" VerticalAlignment="Center" Background="#00000000">
    					<Grid VerticalAlignment="Center" HorizontalAlignment="Center" Background="#00000000">
    						<Ellipse x:Name="ellipse" Width="18" Height="18" VerticalAlignment="Center" HorizontalAlignment="Center" Fill="{DynamicResource ColorLineNumNomard}"/>
    						<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" d:LayoutOverrides="Width, Height"/>
    					</Grid>
    				</Border>
    				<ControlTemplate.Triggers>
    					<Trigger Property="IsSelected" Value="True">
    						<Setter Property="Fill" TargetName="ellipse" Value="{DynamicResource ColorLineNumSelected}"/>
    					</Trigger>
    				</ControlTemplate.Triggers>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    	<Style.Triggers>
    		<Trigger Property="IsSelected" Value="True">
    			<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
    			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
    			<Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
    		</Trigger>
    		<Trigger Property="IsKeyboardFocusWithin" Value="True">
    			<Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}"/>
    		</Trigger>
    	</Style.Triggers>
    </Style>
    <Style x:Key="DataGridRowHozStyle" TargetType="{x:Type DataGridRow}">
    	<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
    	<Setter Property="SnapsToDevicePixels" Value="true"/>
    	<Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
    	<Setter Property="ValidationErrorTemplate">
    		<Setter.Value>
    			<ControlTemplate>
    				<TextBlock Foreground="Red" Margin="2,0,0,0" Text="!" VerticalAlignment="Center"/>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type DataGridRow}">
    				<Border x:Name="DGR_Border" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
    					<SelectiveScrollingGrid>
    						<SelectiveScrollingGrid.ColumnDefinitions>
    							<ColumnDefinition Width="Auto"/>
    							<ColumnDefinition Width="*"/>
    						</SelectiveScrollingGrid.ColumnDefinitions>
    						<SelectiveScrollingGrid.RowDefinitions>
    							<RowDefinition Height="*"/>
    							<RowDefinition Height="Auto"/>
    						</SelectiveScrollingGrid.RowDefinitions>
    						<DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
    						<DataGridDetailsPresenter Grid.Column="1" Grid.Row="1" SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Visibility="{TemplateBinding DetailsVisibility}"/>
    						<DataGridRowHeader Grid.RowSpan="2" SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
    					</SelectiveScrollingGrid>
    				</Border>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
    <LinearGradientBrush x:Key="ShadowLine2" EndPoint="0.958,0.5" StartPoint="0.038,0.5">
    	<GradientStop Color="#7F000000" Offset="0.159"/>
    	<GradientStop Color="#00000000" Offset="0.744"/>
    </LinearGradientBrush>
    <Style x:Key="ScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
    	<Style.Triggers>
    		<Trigger Property="IsEnabled" Value="false">
    			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
    		</Trigger>
    	</Style.Triggers>
    	<Setter Property="Template" Value="{DynamicResource ScrollViewerControlTemplate}"/>
    </Style>
    <LinearGradientBrush x:Key="VerticalScrollBarPageButtonNormal" EndPoint="1, 0" StartPoint="0, 0">
    	<GradientStop Color="#EEEDE5" Offset="0"/>
    	<GradientStop Color="#EEEDE5" Offset="0.05"/>
    	<GradientStop Color="#F3F1EC" Offset="0.06"/>
    	<GradientStop Color="#FEFEFE" Offset="0.94"/>
    	<GradientStop Color="#EEEDE5" Offset="0.95"/>
    	<GradientStop Color="#EEEDE5" Offset="1"/>
    </LinearGradientBrush>
    <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
    	<Setter Property="OverridesDefaultStyle" Value="true"/>
    	<Setter Property="Focusable" Value="false"/>
    	<Setter Property="IsTabStop" Value="false"/>
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type RepeatButton}">
    				<Microsoft_Windows_Themes:ScrollChrome x:Name="Chrome" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsPressed}" SnapsToDevicePixels="true" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="{TemplateBinding Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph}" ThemeColor="NormalColor"/>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
    <LinearGradientBrush x:Key="VerticalScrollBarPageButtonPressed" EndPoint="1, 0" StartPoint="0, 0">
    	<GradientStop Color="#D7D5C2" Offset="0"/>
    	<GradientStop Color="#D7D5C2" Offset="0.05"/>
    	<GradientStop Color="#E3DED3" Offset="0.06"/>
    	<GradientStop Color="#FDFDF6" Offset="0.94"/>
    	<GradientStop Color="#D7D5C2" Offset="0.95"/>
    	<GradientStop Color="#00D7D5C2" Offset="1"/>
    </LinearGradientBrush>
    <Style x:Key="VerticalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
    	<Setter Property="OverridesDefaultStyle" Value="true"/>
    	<Setter Property="Background" Value="Transparent"/>
    	<Setter Property="Focusable" Value="false"/>
    	<Setter Property="IsTabStop" Value="false"/>
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type RepeatButton}">
    				<Rectangle x:Name="Bg" Fill="{TemplateBinding Background}"/>
    				<ControlTemplate.Triggers>
    					<Trigger Property="IsPressed" Value="true">
    						<Setter Property="Fill" TargetName="Bg" Value="{StaticResource VerticalScrollBarPageButtonPressed}"/>
    					</Trigger>
    				</ControlTemplate.Triggers>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
    <LinearGradientBrush x:Key="VerScrollBarThumbBg" EndPoint="0.961,0.5" StartPoint="0.059,0.5">
    	<GradientStop Color="#F29B9B9B" Offset="0.56"/>
    	<GradientStop Color="#F2BDBABA"/>
    	<GradientStop Color="#F2AFADAD" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="VerScrollBarThumbActivedBg" EndPoint="0.961,0.5" StartPoint="0.059,0.5">
    	<GradientStop Color="#F01510B2" Offset="0.116"/>
    	<GradientStop Color="#E52C47DA" Offset="0.864"/>
    	<GradientStop Color="#E51A42E2" Offset="0"/>
    </LinearGradientBrush>
    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
    	<Setter Property="OverridesDefaultStyle" Value="true"/>
    	<Setter Property="IsTabStop" Value="false"/>
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type Thumb}">
    				<Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="{TemplateBinding Margin}" Background="#00000000">
    					<Microsoft_Windows_Themes:ScrollChrome x:Name="Chrome" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsDragging}" SnapsToDevicePixels="true" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="{TemplateBinding Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph}" ThemeColor="NormalColor" Visibility="Collapsed"/>
    					<Border x:Name="border" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" CornerRadius="5" Opacity="0.9" Background="{DynamicResource VerScrollBarThumbBg}"/>
    				</Grid>
    				<ControlTemplate.Triggers>
    					<Trigger Property="IsDragging" Value="True">
    						<Setter Property="Background" TargetName="border" Value="{DynamicResource VerScrollBarThumbActivedBg}"/>
    					</Trigger>
    				</ControlTemplate.Triggers>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
    <LinearGradientBrush x:Key="HorizontalScrollBarPageButtonNormal" EndPoint="0, 1" StartPoint="0, 0">
    	<GradientStop Color="#EEEDE5" Offset="0"/>
    	<GradientStop Color="#EEEDE5" Offset="0.05"/>
    	<GradientStop Color="#F3F1EC" Offset="0.06"/>
    	<GradientStop Color="#FEFEFE" Offset="0.94"/>
    	<GradientStop Color="#EEEDE5" Offset="0.95"/>
    	<GradientStop Color="#EEEDE5" Offset="1"/>
    </LinearGradientBrush>
    <LinearGradientBrush x:Key="HorizontalScrollBarPageButtonPressed" EndPoint="0, 1" StartPoint="0, 0">
    	<GradientStop Color="#D7D5C2" Offset="0"/>
    	<GradientStop Color="#D7D5C2" Offset="0.05"/>
    	<GradientStop Color="#E3DED3" Offset="0.06"/>
    	<GradientStop Color="#FDFDF6" Offset="0.94"/>
    	<GradientStop Color="#D7D5C2" Offset="0.95"/>
    	<GradientStop Color="#00D7D5C2" Offset="1"/>
    </LinearGradientBrush>
    <Style x:Key="HorizontalScrollBarPageButton" TargetType="{x:Type RepeatButton}">
    	<Setter Property="OverridesDefaultStyle" Value="true"/>
    	<Setter Property="Background" Value="Transparent"/>
    	<Setter Property="Focusable" Value="false"/>
    	<Setter Property="IsTabStop" Value="false"/>
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type RepeatButton}">
    				<Rectangle x:Name="Bg" Fill="{TemplateBinding Background}"/>
    				<ControlTemplate.Triggers>
    					<Trigger Property="IsPressed" Value="true">
    						<Setter Property="Fill" TargetName="Bg" Value="{StaticResource HorizontalScrollBarPageButtonPressed}"/>
    					</Trigger>
    				</ControlTemplate.Triggers>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
    <SolidColorBrush x:Key="bgScrollBard" Color="#CCFFFFFF"/>
    <Style x:Key="VerticalScrollBarStyle" TargetType="{x:Type ScrollBar}">
    	<Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
    	<Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
    	<Setter Property="Background" Value="{StaticResource VerticalScrollBarPageButtonNormal}"/>
    	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
    	<Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
    	<Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type ScrollBar}">
    				<Border x:Name="border" CornerRadius="6">
    					<VisualStateManager.VisualStateGroups>
    						<VisualStateGroup x:Name="CommonStates">
    							<VisualState x:Name="Normal"/>
    							<VisualState x:Name="MouseOver"/>
    							<VisualState x:Name="Disabled"/>
    						</VisualStateGroup>
    						<VisualStateGroup x:Name="ValidationStates">
    							<VisualState x:Name="Valid"/>
    							<VisualState x:Name="InvalidFocused"/>
    							<VisualState x:Name="InvalidUnfocused"/>
    						</VisualStateGroup>
    					</VisualStateManager.VisualStateGroups>
    					<Grid SnapsToDevicePixels="true" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="#00000000">
    						<Grid.RowDefinitions>
    							<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" Height="0*"/>
    							<RowDefinition Height="0.00001*"/>
    							<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}" Height="0"/>
    						</Grid.RowDefinitions>
    						<RepeatButton Command="{x:Static ScrollBar.LineUpCommand}" Style="{StaticResource ScrollBarButton}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="UpArrow"/>
    						<Track x:Name="PART_Track" IsDirectionReversed="true" Grid.Row="1">
    							<Track.DecreaseRepeatButton>
    								<RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource VerticalScrollBarPageButton}"/>
    							</Track.DecreaseRepeatButton>
    							<Track.IncreaseRepeatButton>
    								<RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource VerticalScrollBarPageButton}"/>
    							</Track.IncreaseRepeatButton>
    							<Track.Thumb>
    								<Thumb Style="{StaticResource ScrollBarThumb}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="VerticalGripper" Margin="1,0" Background="#58808080"/>
    							</Track.Thumb>
    						</Track>
    						<RepeatButton Command="{x:Static ScrollBar.LineDownCommand}" Grid.Row="2" Style="{StaticResource ScrollBarButton}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="DownArrow"/>
    					</Grid>
    				</Border>
    				<ControlTemplate.Triggers>
    					<Trigger Property="IsMouseOver" Value="True">
    						<Setter Property="Background" TargetName="border" Value="{DynamicResource bgScrollBard}"/>
    					</Trigger>
    				</ControlTemplate.Triggers>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    	<Style.Triggers>
    		<Trigger Property="Orientation" Value="Horizontal">
    			<Setter Property="Width" Value="Auto"/>
    			<Setter Property="MinWidth" Value="0"/>
    			<Setter Property="Background" Value="{StaticResource HorizontalScrollBarPageButtonNormal}"/>
    			<Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
    			<Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="{x:Type ScrollBar}">
    						<Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
    							<Grid.ColumnDefinitions>
    								<ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
    								<ColumnDefinition Width="0.00001*"/>
    								<ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
    							</Grid.ColumnDefinitions>
    							<RepeatButton Command="{x:Static ScrollBar.LineLeftCommand}" Style="{StaticResource ScrollBarButton}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="LeftArrow"/>
    							<Track x:Name="PART_Track" Grid.Column="1">
    								<Track.DecreaseRepeatButton>
    									<RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource HorizontalScrollBarPageButton}"/>
    								</Track.DecreaseRepeatButton>
    								<Track.IncreaseRepeatButton>
    									<RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource HorizontalScrollBarPageButton}"/>
    								</Track.IncreaseRepeatButton>
    								<Track.Thumb>
    									<Thumb Style="{StaticResource ScrollBarThumb}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="HorizontalGripper"/>
    								</Track.Thumb>
    							</Track>
    							<RepeatButton Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" Style="{StaticResource ScrollBarButton}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="RightArrow"/>
    						</Grid>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Trigger>
    	</Style.Triggers>
    </Style>
    <ControlTemplate x:Key="ScrollViewerControlTemplate" TargetType="{x:Type ScrollViewer}">
    	<Grid x:Name="Grid" Background="{TemplateBinding Background}">
    		<Grid.ColumnDefinitions>
    			<ColumnDefinition Width="*"/>
    			<ColumnDefinition Width="13"/>
    		</Grid.ColumnDefinitions>
    		<Grid.RowDefinitions>
    			<RowDefinition Height="*"/>
    			<RowDefinition Height="13"/>
    		</Grid.RowDefinitions>
    		<Rectangle x:Name="Corner" Grid.Column="1" Grid.Row="1"/>
    		<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
    		<ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" HorizontalAlignment="Center" Style="{DynamicResource VerticalScrollBarStyle}" Background="#00000000" Width="13"/>
    		<ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Background="#00000000" Style="{DynamicResource HorizontalScrollBarStyle}" HorizontalAlignment="Stretch" VerticalAlignment="Center" Height="13"/>
    	</Grid>
    </ControlTemplate>
    <LinearGradientBrush x:Key="bgScrollBarThumb" EndPoint="0.51,0.951" StartPoint="0.51,0.049">
    	<GradientStop Color="#F0808080" Offset="0.132"/>
    	<GradientStop Color="#E59B9A9A" Offset="0.904"/>
    	<GradientStop Color="#E5919090" Offset="0"/>
    </LinearGradientBrush>
    <Style x:Key="ScrollBarThumb2" TargetType="{x:Type Thumb}">
    	<Setter Property="OverridesDefaultStyle" Value="true"/>
    	<Setter Property="IsTabStop" Value="false"/>
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type Thumb}">
    				<Microsoft_Windows_Themes:ScrollChrome x:Name="Chrome" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsDragging}" SnapsToDevicePixels="true" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="{TemplateBinding Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph}" ThemeColor="NormalColor"/>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
    <Style x:Key="HorizontalScrollBarStyle" TargetType="{x:Type ScrollBar}">
    	<Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
    	<Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
    	<Setter Property="Background" Value="{StaticResource VerticalScrollBarPageButtonNormal}"/>
    	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
    	<Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
    	<Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type ScrollBar}">
    				<Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
    					<Grid.RowDefinitions>
    						<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
    						<RowDefinition Height="0.00001*"/>
    						<RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
    					</Grid.RowDefinitions>
    					<RepeatButton Command="{x:Static ScrollBar.LineUpCommand}" Style="{StaticResource ScrollBarButton}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="UpArrow"/>
    					<Track x:Name="PART_Track" IsDirectionReversed="true" Grid.Row="1">
    						<Track.DecreaseRepeatButton>
    							<RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource VerticalScrollBarPageButton}"/>
    						</Track.DecreaseRepeatButton>
    						<Track.IncreaseRepeatButton>
    							<RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource VerticalScrollBarPageButton}"/>
    						</Track.IncreaseRepeatButton>
    						<Track.Thumb>
    							<Thumb Style="{StaticResource ScrollBarThumb}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="VerticalGripper"/>
    						</Track.Thumb>
    					</Track>
    					<RepeatButton Command="{x:Static ScrollBar.LineDownCommand}" Grid.Row="2" Style="{StaticResource ScrollBarButton}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="DownArrow"/>
    				</Grid>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    	<Style.Triggers>
    		<Trigger Property="Orientation" Value="Horizontal">
    			<Setter Property="Width" Value="Auto"/>
    			<Setter Property="MinWidth" Value="0"/>
    			<Setter Property="Background" Value="{StaticResource HorizontalScrollBarPageButtonNormal}"/>
    			<Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
    			<Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
    			<Setter Property="Template">
    				<Setter.Value>
    					<ControlTemplate TargetType="{x:Type ScrollBar}">
    						<Border x:Name="border" CornerRadius="6">
    							<Grid SnapsToDevicePixels="true" VerticalAlignment="Stretch">
    								<Grid.ColumnDefinitions>
    									<ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" Width="0"/>
    									<ColumnDefinition Width="0.00001*"/>
    									<ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}" Width="0"/>
    								</Grid.ColumnDefinitions>
    								<RepeatButton Command="{x:Static ScrollBar.LineLeftCommand}" Style="{StaticResource ScrollBarButton}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="LeftArrow"/>
    								<Track x:Name="PART_Track" Grid.Column="1">
    									<Track.DecreaseRepeatButton>
    										<RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource HorizontalScrollBarPageButton}"/>
    									</Track.DecreaseRepeatButton>
    									<Track.IncreaseRepeatButton>
    										<RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource HorizontalScrollBarPageButton}"/>
    									</Track.IncreaseRepeatButton>
    									<Track.Thumb>
    										<Thumb Style="{DynamicResource HorizontalThumbStyle}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="HorizontalGripper" Margin="0,1"/>
    									</Track.Thumb>
    								</Track>
    								<RepeatButton Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" Style="{StaticResource ScrollBarButton}" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="RightArrow"/>
    							</Grid>
    						</Border>
    						<ControlTemplate.Triggers>
    							<Trigger Property="IsMouseOver" Value="True">
    								<Setter Property="Background" TargetName="border" Value="{DynamicResource bgScrollBard}"/>
    							</Trigger>
    						</ControlTemplate.Triggers>
    					</ControlTemplate>
    				</Setter.Value>
    			</Setter>
    		</Trigger>
    	</Style.Triggers>
    </Style>
    <LinearGradientBrush x:Key="bgScrollBarThumbActived" EndPoint="0.51,0.951" StartPoint="0.51,0.049">
    	<GradientStop Color="#F015109F" Offset="0.156"/>
    	<GradientStop Color="#E52C47DA" Offset="0.988"/>
    	<GradientStop Color="#E51337C8" Offset="0.008"/>
    </LinearGradientBrush>
    <Style x:Key="HorizontalThumbStyle" TargetType="{x:Type Thumb}">
    	<Setter Property="OverridesDefaultStyle" Value="true"/>
    	<Setter Property="IsTabStop" Value="false"/>
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type Thumb}">
    				<Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="{TemplateBinding Margin}">
    					<Microsoft_Windows_Themes:ScrollChrome x:Name="Chrome" RenderMouseOver="{TemplateBinding IsMouseOver}" RenderPressed="{TemplateBinding IsDragging}" SnapsToDevicePixels="true" Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph="{TemplateBinding Microsoft_Windows_Themes:ScrollChrome.ScrollGlyph}" ThemeColor="NormalColor" Visibility="Collapsed"/>
    					<Border x:Name="border" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" CornerRadius="5" Opacity="0.8" RenderTransformOrigin="0.5,0.5" Background="{DynamicResource bgScrollBarThumb}">
    						<Border.RenderTransform>
    							<TransformGroup>
    								<ScaleTransform/>
    								<SkewTransform/>
    								<RotateTransform Angle="0"/>
    								<TranslateTransform/>
    							</TransformGroup>
    						</Border.RenderTransform>
    						<Border.OpacityMask>
    							<LinearGradientBrush EndPoint="0,0.5" MappingMode="RelativeToBoundingBox" StartPoint="1,0.5">
    								<GradientStop Color="#E5FFFFFF" Offset="0.521"/>
    								<GradientStop Color="#CCFFFFFF" Offset="0.987"/>
    								<GradientStop Color="#CCFFFFFF" Offset="0.007"/>
    								<GradientStop Color="White" Offset="0.973"/>
    								<GradientStop Color="White" Offset="0.019"/>
    							</LinearGradientBrush>
    						</Border.OpacityMask>
    					</Border>
    				</Grid>
    				<ControlTemplate.Triggers>
    					<Trigger Property="IsDragging" Value="True">
    						<Setter Property="Background" TargetName="border" Value="{DynamicResource bgScrollBarThumbActived}"/>
    					</Trigger>
    				</ControlTemplate.Triggers>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
    <SolidColorBrush x:Key="ListBorder" Color="#FF7F9DB9"/>
    <Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}" TargetType="{x:Type ScrollViewer}">
    	<Setter Property="Focusable" Value="false"/>
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type ScrollViewer}">
    				<Grid Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
    					<Grid.ColumnDefinitions>
    						<ColumnDefinition Width="*"/>
    						<ColumnDefinition Width="Auto"/>
    					</Grid.ColumnDefinitions>
    					<Grid.RowDefinitions>
    						<RowDefinition Height="*"/>
    						<RowDefinition Height="Auto"/>
    					</Grid.RowDefinitions>
    					<DockPanel Margin="{TemplateBinding Padding}">
    						<ScrollViewer DockPanel.Dock="Top" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden">
    							<GridViewHeaderRowPresenter AllowsColumnReorder="{Binding TemplatedParent.View.AllowsColumnReorder, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderContainerStyle="{Binding TemplatedParent.View.ColumnHeaderContainerStyle, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderToolTip="{Binding TemplatedParent.View.ColumnHeaderToolTip, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderStringFormat="{Binding TemplatedParent.View.ColumnHeaderStringFormat, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderContextMenu="{Binding TemplatedParent.View.ColumnHeaderContextMenu, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderTemplate="{Binding TemplatedParent.View.ColumnHeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}" Columns="{Binding TemplatedParent.View.Columns, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderTemplateSelector="{Binding TemplatedParent.View.ColumnHeaderTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Height="20" Width="498"/>
    						</ScrollViewer>
    						<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" KeyboardNavigation.DirectionalNavigation="Local" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
    					</DockPanel>
    					<ScrollBar x:Name="PART_HorizontalScrollBar" Cursor="Arrow" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0.0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Style="{DynamicResource HorizontalScrollBarStyle}" Height="12" Background="{DynamicResource bgScrollBard}"/>
    					<ScrollBar x:Name="PART_VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0.0" Orientation="Vertical" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Style="{DynamicResource VerticalScrollBarStyle}" Width="12" Background="{DynamicResource bgScrollBard}"/>
    					<DockPanel Background="{Binding Background, ElementName=PART_VerticalScrollBar}" Grid.Column="1" LastChildFill="false" Grid.Row="1">
    						<Rectangle DockPanel.Dock="Left" Fill="White" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Width="1"/>
    						<Rectangle DockPanel.Dock="Top" Fill="White" Height="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
    					</DockPanel>
    				</Grid>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
    <ControlTemplate x:Key="ListBoxItemControlTemplate" TargetType="{x:Type ListBoxItem}">
    	<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
    		<ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
    	</Border>
    	<ControlTemplate.Triggers>
    		<Trigger Property="IsSelected" Value="True">
    			<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
    			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
    		</Trigger>
    		<MultiTrigger>
    			<MultiTrigger.Conditions>
    				<Condition Property="IsSelected" Value="True"/>
    				<Condition Property="Selector.IsSelectionActive" Value="False"/>
    			</MultiTrigger.Conditions>
    			<Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
    			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
    		</MultiTrigger>
    		<Trigger Property="IsEnabled" Value="False">
    			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
    		</Trigger>
    	</ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="GridViewColumnHeaderGripper" 
           TargetType="{x:Type Thumb}">
    	<Setter Property="Width" Value="18"/>
    	<Setter Property="Background" Value="White"/>
    	<Setter Property="Template">
    		<Setter.Value>
    			<ControlTemplate TargetType="{x:Type Thumb}">
    				<Border Padding="{TemplateBinding Padding}" 
    					Background="Transparent">
    					<Rectangle HorizontalAlignment="Center" 
    						Width="3"
    						Fill="{TemplateBinding Background}"/>
    				</Border>
    			</ControlTemplate>
    		</Setter.Value>
    	</Setter>
    </Style>
    <SolidColorBrush x:Key="HeaderBackgroundActived" Color="#FF4D94F7"/>
 <Style x:Key="DataGridColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
 	<Setter Property="VerticalContentAlignment" Value="Center"/>
 	<Setter Property="Template">
 		<Setter.Value>
 			<ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
 				<Grid Margin="0">
 					<Microsoft_Windows_Themes:DataGridHeaderBorder x:Name="dataGridHeaderBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" IsClickable="{TemplateBinding CanUserSort}" IsPressed="{TemplateBinding IsPressed}" IsHovered="{TemplateBinding IsMouseOver}" Padding="{TemplateBinding Padding}" SortDirection="{TemplateBinding SortDirection}" SeparatorBrush="{TemplateBinding SeparatorBrush}" SeparatorVisibility="{TemplateBinding SeparatorVisibility}" ThemeColor="NormalColor" Background="#FFAACCFB" MinHeight="25" VerticalAlignment="Stretch">
 						<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
 					</Microsoft_Windows_Themes:DataGridHeaderBorder>
 					<Thumb x:Name="PART_RightHeaderGripper" Visibility="Visible" Padding="0" Style="{DynamicResource GridViewColumnHeaderGripper}" Background="White" HorizontalAlignment="Right" Width="Auto" Cursor="SizeWE" Margin="0,0,-1.5,0"/>
 				</Grid>
 				<ControlTemplate.Triggers>
 					<Trigger Property="IsHovered" Value="True" SourceName="dataGridHeaderBorder">
 						<Setter Property="Background" TargetName="dataGridHeaderBorder" Value="{DynamicResource HeaderBackgroundActived}"/>
 					</Trigger>
 				</ControlTemplate.Triggers>
 			</ControlTemplate>
 		</Setter.Value>
 	</Setter>
 </Style>
 
 <LinearGradientBrush  x:Key="BlueRinseBrush" 
                          EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF4166D4" Offset="1"/>
        <GradientStop Color="#FF57A0F4" Offset="0.5"/>
        <GradientStop Color="#FF4B94EC" Offset="0.498"/>
    </LinearGradientBrush>
    <SolidColorBrush x:Key="headerBackground1" Color="#FFAACCFB"/>
 
 <Style x:Key="GridViewColumnHeaderStyle"  
           TargetType="GridViewColumnHeader">
        <Setter Property="HorizontalContentAlignment" 
                Value="Center"/>
        <Setter Property="VerticalContentAlignment" 
                Value="Center"/>
        <Setter Property="Background" 
                Value="{StaticResource BlueRinseBrush}"/>
        <Setter Property="Foreground" 
                Value="{DynamicResource 
                    {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
             <ControlTemplate 
                TargetType="GridViewColumnHeader">
                    <Grid>
             		<VisualStateManager.VisualStateGroups>
             			<VisualStateGroup x:Name="CommonStates">
             				<VisualState x:Name="Normal"/>
             				<VisualState x:Name="MouseOver"/>
             				<VisualState x:Name="Pressed"/>
             				<VisualState x:Name="Disabled"/>
             			</VisualStateGroup>
             		</VisualStateManager.VisualStateGroups>
             		<Border x:Name="HeaderBorder"
             			BorderThickness="0"
             			BorderBrush="{StaticResource BlueRinseBrush}"
             			Background="{DynamicResource headerBackground1}"
             			Padding="2,0,2,0" MinHeight="23">
             			<ContentPresenter x:Name="HeaderContent"
             				TextElement.Foreground="White"
             				Margin="0"
             				VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
             				RecognizesAccessKey="True"
             				SnapsToDevicePixels=
                            "{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="Center"/>
             		</Border>
             		<Thumb x:Name="PART_HeaderGripper"
             			HorizontalAlignment="Right"
             			Margin="0,0,-9,0"
             			Style="{StaticResource GridViewColumnHeaderGripper}"/>
             	</Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="HeaderContent" 
                              Property="TextElement.Foreground" 
                              Value="Black"/>
                            <Setter Property="Background" TargetName="HeaderBorder" Value="{DynamicResource HeaderBackgroundActived}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
 <Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}" TargetType="{x:Type Button}">
 	<Setter Property="Template">
 		<Setter.Value>
 			<ControlTemplate TargetType="{x:Type Button}">
 				<Grid>
 					<Rectangle x:Name="Border" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" SnapsToDevicePixels="True"/>
 					<Polygon x:Name="Arrow" Fill="Black" HorizontalAlignment="Right" Margin="8,8,3,3" Opacity="0.15" Points="0,10 10,10 10,0" Stretch="Uniform" VerticalAlignment="Bottom"/>
 				</Grid>
 				<ControlTemplate.Triggers>
 					<Trigger Property="IsMouseOver" Value="True">
 						<Setter Property="Stroke" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
 					</Trigger>
 					<Trigger Property="IsPressed" Value="True">
 						<Setter Property="Fill" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
 					</Trigger>
 					<Trigger Property="IsEnabled" Value="False">
 						<Setter Property="Visibility" TargetName="Arrow" Value="Collapsed"/>
 					</Trigger>
 				</ControlTemplate.Triggers>
 			</ControlTemplate>
 		</Setter.Value>
 	</Setter>
 </Style>
 <Style x:Key="DataGridStyle" TargetType="{x:Type DataGrid}">
 	<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
 	<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
 	<Setter Property="BorderBrush" Value="#FF688CAF"/>
 	<Setter Property="BorderThickness" Value="1"/>
 	<Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
 	<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
 	<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
 	<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
 	<Setter Property="Template">
 		<Setter.Value>
 			<ControlTemplate TargetType="{x:Type DataGrid}">
 				<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
 					<ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
 						<ScrollViewer.Template>
 							<ControlTemplate TargetType="{x:Type ScrollViewer}">
 								<Grid>
 									<Grid.ColumnDefinitions>
 										<ColumnDefinition Width="Auto"/>
 										<ColumnDefinition Width="*"/>
 										<ColumnDefinition Width="Auto"/>
 									</Grid.ColumnDefinitions>
 									<Grid.RowDefinitions>
 										<RowDefinition Height="Auto"/>
 										<RowDefinition Height="*"/>
 										<RowDefinition Height="Auto"/>
 									</Grid.RowDefinitions>
 									<Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
 									<DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
 									<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="3" Grid.Row="1" Grid.RowSpan="2"/>
 									<ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Style="{DynamicResource VerticalScrollBarStyle}" Width="13" MinWidth="0"/>
 									<Grid Grid.Column="1" Grid.Row="2">
 										<Grid.ColumnDefinitions>
 											<ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
 											<ColumnDefinition Width="*"/>
 										</Grid.ColumnDefinitions>
 										<ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Style="{DynamicResource HorizontalScrollBarStyle}" Height="13" MinHeight="0"/>
 									</Grid>
 								</Grid>
 							</ControlTemplate>
 						</ScrollViewer.Template>
 						<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
 					</ScrollViewer>
 				</Border>
 			</ControlTemplate>
 		</Setter.Value>
 	</Setter>
 	<Style.Triggers>
 		<Trigger Property="IsGrouping" Value="true">
 			<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
 		</Trigger>
 	</Style.Triggers>
 </Style>
 <Style x:Key="ListViewStyle"
 	TargetType="{x:Type ListView}">
 	<Setter Property="Background"
 		Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
 	<Setter Property="BorderBrush"
 		Value="{StaticResource ListBorder}" />
 	<Setter Property="BorderThickness"
 		Value="1" />
 	<Setter Property="Foreground"
 		Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
 	<Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
 		Value="Auto" />
 	<Setter Property="ScrollViewer.VerticalScrollBarVisibility"
 		Value="Auto" />
 	<Setter Property="ScrollViewer.CanContentScroll"
 		Value="true" />
 	<Setter Property="ScrollViewer.PanningMode"
 		Value="Both" />
 	<Setter Property="Stylus.IsFlicksEnabled"
 		Value="False" />
 	<Setter Property="Template">
 		<Setter.Value>
 			<ControlTemplate TargetType="{x:Type ListView}">
 				<Border x:Name="Bd"
 					BorderBrush="{TemplateBinding BorderBrush}"
 					BorderThickness="{TemplateBinding BorderThickness}"
 					Background="{TemplateBinding Background}"
 					SnapsToDevicePixels="true">
 					<ScrollViewer Padding="{TemplateBinding Padding}"
 						Style="{DynamicResource StaticExtension2}" Margin="0">
 						<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
 					</ScrollViewer>
 				</Border>
 				<ControlTemplate.Triggers>
 					<Trigger Property="IsGrouping"
 						Value="true">
 						<Setter Property="ScrollViewer.CanContentScroll"
 							Value="false" />
 					</Trigger>
 					<Trigger Property="IsEnabled"
 						Value="false">
 						<Setter Property="Background"
 							TargetName="Bd"
 							Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
 					</Trigger>
 				</ControlTemplate.Triggers>
 			</ControlTemplate>
 		</Setter.Value>
 	</Setter>
 </Style>
 <LinearGradientBrush x:Key="bgItemSelected" EndPoint="0.5,1" StartPoint="0.5,0">
 	<GradientStop Color="#FF94B9F3" Offset="0"/>
 	<GradientStop Color="#FFADCBF9" Offset="0.792"/>
 	<GradientStop Color="#FFA5C5F7" Offset="1"/>
 </LinearGradientBrush>
 <Style x:Key="DataGridCellStyle" TargetType="{x:Type DataGridCell}">
 	<Setter Property="Background" Value="Transparent"/>
 	<Setter Property="BorderBrush" Value="Transparent"/>
 	<Setter Property="BorderThickness" Value="1"/>
 	<Setter Property="Template">
 		<Setter.Value>
 			<ControlTemplate TargetType="{x:Type DataGridCell}">
 				<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
 					<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
 				</Border>
 			</ControlTemplate>
 		</Setter.Value>
 	</Setter>
 	<Style.Triggers>
 		<Trigger Property="IsSelected" Value="True">
 			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
 			<Setter Property="BorderBrush" Value="#FFD2EEFD"/>
 			<Setter Property="Background" Value="{DynamicResource bgItemSelected}"/>
 		</Trigger>
 		<Trigger Property="IsKeyboardFocusWithin" Value="True">
 			<Setter Property="BorderBrush" Value="#FFC5DBFF"/>
 		</Trigger>
 	</Style.Triggers>
 </Style>
</ResourceDictionary>
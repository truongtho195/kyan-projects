<Window xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:FlashCard_Converters="clr-namespace:FlashCard.Converters"
        mc:Ignorable="d"
        x:Class="FlashCard.Views.LearnView"
        x:Name="vLearnView"
        Title="LearnView"
        AllowsTransparency="True"
        WindowStyle="None"
        Background="Transparent"
        xmlns:localCommand="clr-namespace:FlashCard.Commands"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:converter="clr-namespace:FlashCard.Converters"
        WindowStartupLocation="CenterScreen"
        WindowState="Maximized"
        Topmost="True"
        HorizontalContentAlignment="Stretch"
        VerticalContentAlignment="Stretch">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="StateChanged">
            <localCommand:EventToCommand Command="{Binding MiniFullScreenCommand,Mode=OneWay}"
                                         CommandParameter="{Binding Path=WindowState,ElementName=vLearnView}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Window.Resources>
        <!--#region Converters-->
        <converter:BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />
        <FlashCard_Converters:ValueToVisibilityConverter x:Key="valueToVisibilityConverter" />
        <converter:DatagridItemToLineNumberConverter x:Key="DatagridItemToLineNumberConverter" />
        <!--#endregion Converters-->
        <DataTemplate x:Key="DataTemplate1">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <CheckBox Grid.Column="0"
                          Content="{Binding BackSideDetail}" />
            </Grid>
        </DataTemplate>
        <Storyboard x:Key="sbToBackSide">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                           Storyboard.TargetName="FrontSideWrapper">
                <EasingDoubleKeyFrame KeyTime="0:0:0.5"
                                      Value="0" />
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                           Storyboard.TargetName="FrontSideWrapper">
                <EasingDoubleKeyFrame KeyTime="0:0:0.5"
                                      Value="0" />
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                           Storyboard.TargetName="BackSideWrapper">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.5"
                                        Value="{x:Static Visibility.Visible}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                           Storyboard.TargetName="FrontSideWrapper">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.5"
                                        Value="{x:Static Visibility.Hidden}" />
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="sbToFrontSide">
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                           Storyboard.TargetName="BackSideWrapper">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.5"
                                        Value="{x:Static Visibility.Hidden}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                           Storyboard.TargetName="FrontSideWrapper">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.5"
                                        Value="{x:Static Visibility.Visible}" />
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                           Storyboard.TargetName="FrontSideWrapper">
                <EasingDoubleKeyFrame KeyTime="0:0:0.5"
                                      Value="0.75" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.6"
                                      Value="0.8" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.7"
                                      Value="1" />
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)"
                                           Storyboard.TargetName="FrontSideWrapper">
                <EasingDoubleKeyFrame KeyTime="0:0:0.5"
                                      Value="0.75" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.6"
                                      Value="0.8" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.7"
                                      Value="1" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Key="F4"
                    Modifiers="Alt"
                    Command="{Binding CancelCommand}" />
        <KeyBinding Key="L"
                    Command="{Binding KeyboardCommand}"
                    CommandParameter="L" />
        <KeyBinding Key="Left"
                    Command="{Binding KeyboardCommand}"
                    CommandParameter="Left" />
        <KeyBinding Key="Right"
                    Command="{Binding KeyboardCommand}"
                    CommandParameter="Right" />
        <KeyBinding Key="C"
                    Command="{Binding KeyboardCommand}"
                    CommandParameter="C" />
    </Window.InputBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="40" />
            <RowDefinition Height="0.89*" />
            <RowDefinition Height="40" />
        </Grid.RowDefinitions>
        <Border x:Name="bdBackground"
                Grid.RowSpan="3"
                Background="{DynamicResource FullScreenBg1}" />
        <Border x:Name="bdHeader"
                Background="#00000000"
                Height="30"
                VerticalAlignment="Bottom">
            <Grid x:Name="grdHeader"
                  Margin="10,0">
                <StackPanel x:Name="stSystemControl"
                            Orientation="Horizontal"
                            VerticalAlignment="Center"
                            d:LayoutOverrides="Width"
                            HorizontalAlignment="Right">

                    <Button x:Name="btnPopup"
                            Command="{Binding CloseCommand}"
                            Width="25"
                            Height="25"
                            ToolTip="Show in Popup"
                            Style="{DynamicResource EmptyButton}"
                            BorderBrush="#FFEBD5D5"
                            Background="{x:Null}"
                            VerticalContentAlignment="Bottom"
                            Padding="1,1,1,3"
                            RenderTransformOrigin="0.5,0.5"
                            Margin="0,0,10,0">
                        <Image Source="/Images/NoFullScreen.png"
                               Stretch="Uniform"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Width="18"
                               Height="18" />
                    </Button>

                    <Button x:Name="btnMinimize"
                            Command="{Binding MiniFullScreenCommand}"
                            CommandParameter="{Binding WindowState, ElementName=vLearnView}"
                            ToolTip="Minimize"
                            Width="25"
                            Height="25"
                            Style="{DynamicResource EmptyButton}"
                            BorderBrush="#FFEBD5D5"
                            Background="{x:Null}"
                            VerticalContentAlignment="Bottom"
                            Padding="1,1,1,3"
                            RenderTransformOrigin="0.5,0.5">
                        <Button.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleY="0.9" />
                                <SkewTransform />
                                <RotateTransform />
                                <TranslateTransform />
                            </TransformGroup>
                        </Button.RenderTransform>
                        <Rectangle Fill="#FFF4F4F5"
                                   Height="4"
                                   Width="15"
                                   VerticalAlignment="Bottom"
                                   Margin="0" />
                    </Button>
                    <Button x:Name="btnMaximize"
                            Width="25"
                            Height="25"
                            Style="{DynamicResource EmptyButton}"
                            Margin="3,0,0,0"
                            Visibility="Collapsed">
                        <Path Data="M0,3.7964999 L19,3.7964999 19,22.796499 0,22.796499 z M3.9635001,0 L22.9635,0 22.9635,19 20.251,19 20.251,2.8375 3.9635001,2.8375 z"
                              Fill="White"
                              Stretch="Fill"
                              Height="15"
                              Width="15" />
                    </Button>
                    <Button x:Name="btnExit"
                            Command="{Binding CancelCommand}"
                            CommandParameter="FullScreen"
                            ToolTip="Exit"
                            Width="25"
                            Height="25"
                            Style="{DynamicResource EmptyButton}"
                            Margin="3,0,0,0">
                        <Path Data="M8.5,0 L12.5,0 12.5,8.5000001 21,8.5000001 21,12.5 12.5,12.5 12.5,21 8.5,21 8.5,12.5 0,12.5 0,8.5000001 8.5,8.5000001 z"
                              Fill="White"
                              Height="15"
                              RenderTransformOrigin="0.5,0.5"
                              Stretch="Fill"
                              VerticalAlignment="Center"
                              d:LayoutOverrides="GridBox"
                              Width="15">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform Angle="45" />
                                    <TranslateTransform />
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Button>
                </StackPanel>
            </Grid>
        </Border>
        <Grid x:Name="grdContent"
              Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="33.792" />
            </Grid.ColumnDefinitions>
            <Slider x:Name="slIncrectTextSize"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Grid.Column="1"
                    Orientation="Vertical"
                    Height="150"
                    Minimum="2"
                    SmallChange="0.5"
                    Value="2"
                    Maximum="5" />
            <ScrollViewer x:Name="srViewContent"
                          VerticalContentAlignment="Stretch"
                          HorizontalContentAlignment="Stretch"
                          HorizontalScrollBarVisibility="Visible"
                          Grid.IsSharedSizeScope="True"
                          Style="{DynamicResource ScrollViewerStyle}">
                <Grid x:Name="grdScrollViewer"
                      RenderTransformOrigin="0.5,0.5"
                      Width="{Binding Width, ElementName=srViewContent}"
                      Height="{Binding Height, ElementName=srViewContent}">
                    <Grid.LayoutTransform>

                        <ScaleTransform ScaleX="{Binding Value, ElementName=slIncrectTextSize}"
                                        ScaleY="{Binding Value, ElementName=slIncrectTextSize}" />

                    </Grid.LayoutTransform>
                    <Grid x:Name="BackSideWrapper" Visibility="Hidden">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="20.553" />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <TextBlock  x:Name="tblMainBackSide"
                                    Background="Transparent"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    VirtualizingStackPanel.VirtualizationMode="Recycling"
                                    Foreground="White"
                                    Text="{Binding SelectedItem.Content, ElementName=lstBackSide, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                    Grid.Row="1"
                                    FontSize="21.333">
                    		<TextBlock.Style>
                    			<Style TargetType="{x:Type TextBlock}">
                    				<Setter Property="Visibility"
                                            Value="Visible" />
                    				<Style.Triggers>
                    					<DataTrigger Binding="{Binding SelectedItem.IsMain, ElementName=lstBackSide, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                                     Value="0">
                    						<Setter Property="Visibility"
                                                    Value="Hidden" />
                    					</DataTrigger>
                    				</Style.Triggers>
                    			</Style>
                    		</TextBlock.Style>
                        </TextBlock>
                        <TextBlock TextWrapping="Wrap"
                                   x:Name="tbBackSideName"
                                   Text="{Binding SelectedItem.BackSideName, ElementName=lstBackSide, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                   Foreground="White"
                                   HorizontalAlignment="Left"
                                   FontSize="16"
                                   FontWeight="Bold"
                                   d:LayoutOverrides="Height" VerticalAlignment="Center">
                    		<TextBlock.Style>
                    			<Style TargetType="{x:Type TextBlock}">
                    				<Setter Property="Visibility"
                                            Value="Hidden" />
                    				<Style.Triggers>
                    					<DataTrigger Binding="{Binding SelectedItem.IsMain, ElementName=lstBackSide, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                                     Value="0">
                    						<Setter Property="Visibility"
                                                    Value="Visible" />
                    					</DataTrigger>
                    				</Style.Triggers>
                    			</Style>            	                 
                    		</TextBlock.Style>
                        </TextBlock>
                        <TextBlock x:Name="tbContent"
                                   Text="{Binding SelectedItem.Content, ElementName=lstBackSide, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                   Background="Transparent"
                                   ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                   VerticalAlignment="Center"
                                   Foreground="White"
                                   FontSize="18.667"
                                   HorizontalAlignment="Center" Grid.Row="1">
                    		<TextBlock.Style>
                    			<Style TargetType="{x:Type TextBlock}">
                    				<Setter Property="Visibility"
                                            Value="Hidden" />
                    				<Style.Triggers>
                    					<DataTrigger Binding="{Binding SelectedItem.IsMain, ElementName=lstBackSide, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                                     Value="0">
                    						<Setter Property="Visibility"
                                                    Value="Visible" />
                    					</DataTrigger>
                    				</Style.Triggers>
                    			</Style>            	                 
                    		</TextBlock.Style>
                        </TextBlock>


                    </Grid>
                    <Grid x:Name="FrontSideWrapper"
                          RenderTransformOrigin="0.5,0.5"
                          VerticalAlignment="Center">
                        <Grid.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform />
                                <SkewTransform />
                                <RotateTransform />
                                <TranslateTransform />
                            </TransformGroup>
                        </Grid.RenderTransform>
                        <!--<Grid.Style>
                        <Style TargetType="{x:Type Grid}">
                            <Setter Property="Visibility"
                                    Value="Visible" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedLesson.IsBackSide,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"
                                             Value="False">
                                    <Setter Property="Visibility"
                                            Value="Visible" />
                                </DataTrigger>
                               
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>-->
                        <Grid.RowDefinitions>
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <Grid x:Name="grdPhrase"
                              Visibility="{Binding SelectedLesson.Category.TypeOf, ConverterParameter=1, Converter={StaticResource valueToVisibilityConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              Grid.Row="1"
                              VerticalAlignment="Center">
                            <StackPanel d:LayoutOverrides="Width"
                                        ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                        ScrollViewer.VerticalScrollBarVisibility="Auto">
                                <TextBlock TextWrapping="Wrap"
                                           x:Name="tbLessonName"
                                           VerticalAlignment="Center"
                                           Text="{Binding SelectedLesson.Lesson.LessonName, Mode=OneWay}"
                                           Foreground="White"
                                           HorizontalAlignment="Center"
                                           FontSize="21.333"
                                           FontWeight="Bold" />
                                <TextBlock x:Name="tbDescription"
                                           TextWrapping="Wrap"
                                           Text="{Binding SelectedLesson.Lesson.Description, Mode=OneWay}"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           FontSize="16"
                                           Foreground="White"
                                           FontStyle="Italic" />
                            </StackPanel>
                        </Grid>
                        <Grid x:Name="grdListChoice"
                              Visibility="{Binding SelectedLesson.Category.TypeOf, ConverterParameter=2, Converter={StaticResource valueToVisibilityConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                              Grid.Row="1"
                              RenderTransformOrigin="0.5,0.5"
                              d:IsHidden="True">
                            <!--This is version with question-->
                            <!--<ListBox Margin="5,0"
                                 Background="Transparent"
                                 ItemsSource="{Binding SelectedLesson.BackSideCollection}"
                                 ItemTemplate="{DynamicResource DataTemplate1}" />-->
                        </Grid>
                    </Grid>
                </Grid>
            </ScrollViewer>
            <DataGrid x:Name="lstBackSide"
                      ItemsSource="{Binding SelectedLesson.Lesson.BackSides}"
                      SelectedItem="{Binding SelectedBackSide, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                      AutoGenerateColumns="False"
                      CanUserAddRows="False"
                      CanUserDeleteRows="False"
                      SelectionMode="Single"
                      SelectionUnit="FullRow"
                      Background="Transparent"
                      BorderBrush="Transparent"
                      HeadersVisibility="None"
                      CellStyle="{DynamicResource DataGridCellEclipStyle}"
                      VerticalAlignment="Bottom"
                      HorizontalAlignment="Right"
                      RowStyle="{DynamicResource DataGridRowHozStyle}"
                      HorizontalGridLinesBrush="#00000000"
                      VerticalGridLinesBrush="#00000000"
                      Foreground="White"
                      Margin="5,5,10,10"
                      Visibility="{Binding Visibility, ElementName=BackSideWrapper}">
                <DataGrid.Style>
                    <Style TargetType="{x:Type DataGrid}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SelectedLesson.Lesson.BackSides.Count}"
                                         Value="1">
                                <Setter Property="Visibility"
                                        Value="Hidden" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.Style>
                <DataGrid.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal"
                                    Background="Transparent" />
                    </ItemsPanelTemplate>
                </DataGrid.ItemsPanel>
                <DataGrid.Columns>
                    <DataGridTemplateColumn>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Foreground="White"
                                           Background="Transparent"
                                           Text="{Binding Converter={StaticResource DatagridItemToLineNumberConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}}"
                                           ToolTip="{Binding BackSideName, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Center"
                                           FontSize="12"
                                           FontWeight="Bold" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
        <Border x:Name="bdBottom"
                BorderBrush="#00000000"
                BorderThickness="1"
                Grid.Row="2"
                Height="30"
                VerticalAlignment="Top">
            <Grid Margin="0,0,10,0">
                <StackPanel x:Name="stDetail"
                            Orientation="Horizontal"
                            d:LayoutOverrides="Width, Height"
                            HorizontalAlignment="Right">
                    <Button x:Name="btnListen"
                            Command="{Binding ListenCommand}"
                            CommandParameter="FullScreen"
                            Width="25"
                            VerticalAlignment="Center"
                            Style="{DynamicResource EmptyButton}"
                            Height="25"
                            Margin="0,0,10,0">
                        <Image Source="/FlashCard;component/Images/1339695682_audio-volume-high.png"
                               Stretch="Fill"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center" />
                    </Button>
                    <Button Visibility="{Binding SetupModel.IsEnableSlideShow, ConverterParameter=True, Converter={StaticResource booleanToVisibilityConverter}, Mode=OneWay}"
                            Command="{Binding PlayPauseCommand}"
                            CommandParameter="FullScreen"
                            Style="{DynamicResource EmptyButton}">
                        <Image Stretch="Fill">
                            <Image.Style>
                                <Style TargetType="Image">
                                    <Setter Property="Source"
                                            Value="/Images/button_blue_play.png" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsFullScreenStarted,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"
                                                     Value="True">
                                            <Setter Property="Source"
                                                    Value="/Images/button_blue_pause.png" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>

                        </Image>
                    </Button>
                    <!--Visibility="{Binding Visibility, ElementName=BackSideWrapper}"-->
                    <Button x:Name="btnChangeFace"
                            Command="{Binding ChangeSideCommand}"
                            CommandParameter="FullScreen"
                            Width="35"
                            Margin="10,0,0,0"
                            Style="{DynamicResource EmptyButton}"
                            BorderBrush="{x:Null}"
                            Background="{x:Null}">
                        <Grid>

                            <Image Stretch="Fill"
                                   ToolTip="Change to Back Side"
                                   Visibility="{Binding Visibility, ElementName=FrontSideWrapper}"
                                   Source="/Images/Arrow_Right.png" />
                            <Image Stretch="Fill"
                                   ToolTip="Change to Front Side"
                                   Visibility="{Binding Visibility, ElementName=BackSideWrapper}"
                                   Source="/Images/Arrow_Left.png" />

                        </Grid>
                    </Button>
                </StackPanel>
                <StackPanel x:Name="stNextBack"
                            Visibility="{Binding SetupModel.IsEnableSlideShow,Mode=OneWay,Converter={StaticResource booleanToVisibilityConverter},ConverterParameter=False}"
                            Orientation="Horizontal"
                            d:LayoutOverrides="Height"
                            HorizontalAlignment="Left"
                            Margin="10,0,0,0">
                    <Button x:Name="btnBack"
                            ToolTip="Back"
                            Command="{Binding NextBackLessonCommand}"
                            CommandParameter="Back"
                            Style="{DynamicResource EmptyButton}"
                            Margin="0,0,5,0">
                        <Image Source="/FlashCard;component/Images/Back.png"
                               Stretch="Fill" />
                    </Button>
                    <Button x:Name="btnNext"
                            ToolTip="Next"
                            Command="{Binding NextBackLessonCommand}"
                            CommandParameter="Next"
                            Margin="5,0,0,0"
                            Style="{DynamicResource EmptyButton}">
                        <Image Source="/FlashCard;component/Images/Next.png"
                               Stretch="Fill" />
                    </Button>
                </StackPanel>
            </Grid>
        </Border>
    </Grid>
</Window>

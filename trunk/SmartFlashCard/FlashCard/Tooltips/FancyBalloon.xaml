<UserControl xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:tb="http://www.hardcodet.net/taskbar"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d"
             x:Class="FlashCard.FancyBalloon"
             xmlns:attachedCmd="clr-namespace:AttachedCommandBehavior;assembly=AttachedCommandBehavior"
             xmlns:converter="clr-namespace:FlashCard.Converters"
             xmlns:localHelper="clr-namespace:FlashCard.Helper"
             x:Name="me"
             Width="330"
             Height="200">
    <UserControl.Resources>
        <!--#Region Converters-->
        <converter:BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />
        <converter:ValueToVisibilityConverter x:Key="valueToVisibilityConverter" />
        <converter:DatagridItemToLineNumberConverter x:Key="DatagridItemToLineNumberConverter" />
        <!--#End Region-->
        <!--#region Storyboard-->
        <Storyboard x:Key="FadeIn">
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                           Storyboard.TargetName="Layout"
                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00"
                                      Value="0" />
                <SplineDoubleKeyFrame KeyTime="00:00:01"
                                      Value="0.95" />
                <SplineDoubleKeyFrame KeyTime="00:00:03"
                                      Value="0.95" />
                <!--<SplineDoubleKeyFrame KeyTime="00:00:05" Value="0"/>-->
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="FadeBack">
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                           Storyboard.TargetName="Layout"
                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00"
                                      Value="1" />
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000"
                                      Value="1" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="FadeOut"
                    Completed="OnFadeOutCompleted">
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                           Storyboard.TargetName="Layout"
                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00"
                                      Value="1" />
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000"
                                      Value="0.2" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <DataTemplate x:Key="DataTemplate1">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <CheckBox Grid.Column="0"
                          Content="{Binding BackSideDetail}" />
            </Grid>
        </DataTemplate>
        <Storyboard x:Key="sbChangeToFront">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)"
                                           Storyboard.TargetName="grdFrame">
                <EasingDoubleKeyFrame KeyTime="0:0:0.3"
                                      Value="332" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.4"
                                      Value="320" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.7"
                                      Value="0" />
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                           Storyboard.TargetName="BackSideWrapper">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.3"
                                        Value="{x:Static Visibility.Hidden}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                           Storyboard.TargetName="FrontSideWrapper">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.3"
                                        Value="{x:Static Visibility.Visible}" />
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>

        <!--#end region Storyboard-->
        <!--#Region DataTemplate-->
        <Storyboard x:Key="sbChangeToBack">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)"
                                           Storyboard.TargetName="grdFrame">
                <EasingDoubleKeyFrame KeyTime="0:0:0.3"
                                      Value="332" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.4"
                                      Value="320" />
                <EasingDoubleKeyFrame KeyTime="0:0:0.7"
                                      Value="0" />
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                           Storyboard.TargetName="BackSideWrapper">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.3"
                                        Value="{x:Static Visibility.Visible}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                           Storyboard.TargetName="FrontSideWrapper">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.3"
                                        Value="{x:Static Visibility.Hidden}" />
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="FadeLeave">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                           Storyboard.TargetName="Layout">
                <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                      Value="0.95" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>



        <!--<attachedCmd:CommandBehaviorCollection.Behaviors>
            <attachedCmd:BehaviorBinding Event="MouseEnter"
                                         Command="{Binding FancyBallonMouseEnterCommand,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type UserControl}},Path=me}" />
            <attachedCmd:BehaviorBinding Event="MouseLeave"
                                         Command="{Binding FancyBallonMouseLeaveCommand,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type UserControl}},Path=me}" />
        </attachedCmd:CommandBehaviorCollection.Behaviors>-->



        <!--#Endregion DataTemplate-->
    </UserControl.Resources>
    <UserControl.Triggers>
        <EventTrigger RoutedEvent="tb:TaskbarIcon.BalloonShowing">
            <BeginStoryboard Storyboard="{StaticResource FadeIn}"
                             x:Name="FadeIn_BeginStoryboard" />
        </EventTrigger>
        <EventTrigger RoutedEvent="tb:TaskbarIcon.BalloonClosing">
            <StopStoryboard BeginStoryboardName="FadeIn_BeginStoryboard" />
            <BeginStoryboard x:Name="FadeOut_BeginStoryboard"
                             Storyboard="{StaticResource FadeOut}" />

        </EventTrigger>
    </UserControl.Triggers>
    <Grid x:Name="Layout">
        <attachedCmd:CommandBehaviorCollection.Behaviors>
            <attachedCmd:BehaviorBinding Event="MouseEnter"
                                         Command="{Binding FancyBallonMouseEnterCommand}" />
            <attachedCmd:BehaviorBinding Event="MouseLeave"
                                         Command="{Binding FancyBallonMouseLeaveCommand}" />
        </attachedCmd:CommandBehaviorCollection.Behaviors>
        <Grid x:Name="grdFrame"
              RenderTransformOrigin="0.5,0.5">
            <Grid.RenderTransform>
                <TransformGroup>
                    <ScaleTransform />
                    <SkewTransform />
                    <RotateTransform />
                    <TranslateTransform />
                </TransformGroup>
            </Grid.RenderTransform>
            <Grid.RowDefinitions>
                <RowDefinition Height="29.333" />
                <RowDefinition />
                <RowDefinition Height="26.667" />
            </Grid.RowDefinitions>
            <Grid x:Name="grWrapper"
                  HorizontalAlignment="Stretch"
                  Grid.RowSpan="3">
                <Border BorderBrush="White"
                        BorderThickness="0.5"
                        Background="#FF346CA1"
                        CornerRadius="8" />
                <Border Margin="1"
                        d:IsHidden="True"
                        CornerRadius="8">
                    <Border.Background>
                        <RadialGradientBrush Center="0.88,0.771"
                                             GradientOrigin="0.828,0.714"
                                             RadiusY="-2.229"
                                             RadiusX="-0.881">
                            <RadialGradientBrush.RelativeTransform>
                                <TransformGroup>
                                    <ScaleTransform CenterY="0.598"
                                                    CenterX="0.872"
                                                    ScaleY="1"
                                                    ScaleX="1" />
                                    <SkewTransform AngleY="0"
                                                   AngleX="0"
                                                   CenterY="0.598"
                                                   CenterX="0.872" />
                                    <RotateTransform Angle="0.378"
                                                     CenterY="0.598"
                                                     CenterX="0.872" />
                                    <TranslateTransform X="-0.021"
                                                        Y="0.043" />
                                </TransformGroup>
                            </RadialGradientBrush.RelativeTransform>
                            <GradientStop Color="#15000000"
                                          Offset="0.512" />
                            <GradientStop Offset="0.514"
                                          Color="#7FFFFFFF" />
                            <GradientStop Offset="0.856"
                                          Color="#06FFFFFF" />
                        </RadialGradientBrush>
                    </Border.Background>
                    <Border.OpacityMask>
                        <LinearGradientBrush EndPoint="0.078,-0.192"
                                             StartPoint="0.667,1.154">
                            <GradientStop Color="#00000000"
                                          Offset="0.482" />
                            <GradientStop Offset="0.838"
                                          Color="#7DFFFFFF" />
                        </LinearGradientBrush>
                    </Border.OpacityMask>
                </Border>
            </Grid>
            <Border x:Name="bdHeader1"
                    BorderThickness="1"
                    Margin="5,0"
                    CornerRadius="0,0,5,5">
                <Border.Effect>
                    <DropShadowEffect BlurRadius="3"
                                      ShadowDepth="4"
                                      Opacity="0.5"
                                      Direction="292" />
                </Border.Effect>
                <Grid>
                    <StackPanel x:Name="stSystembutton"
                                Orientation="Horizontal"
                                VerticalAlignment="Center"
                                d:LayoutOverrides="Width"
                                HorizontalAlignment="Right"
                                Margin="0">
                        <Button x:Name="btnFullScreen"
                                Command="{Binding FullScreenCommand}"
                                CommandParameter="Popup"
                                Width="20"
                                Background="#00000000"
                                BorderBrush="#00003C74"
                                Height="20"
                                Margin="0,0,5,0"
                                Style="{DynamicResource EmptyButton}">
                            <Image Source="/FlashCard;component/Images/1337833571_full_screen.png"
                                   Stretch="Fill" />
                        </Button>
                        <Button x:Name="btnHiddenPopup"
                                Command="{Binding HiddenPopupCommand}"
                                CommandParameter="Hidden"
                                Width="20"
                                Style="{DynamicResource EmptyButton}"
                                Background="#00000000"
                                BorderBrush="#00003C74"
                                Height="20"
                                Margin="5,0,0,0">
                            <Image Width="20"
                                   Source="/Images/Hidden.png"
                                   Stretch="Fill"
                                   ToolTip="Hide Balloon"
                                   x:Name="imgClose1"
                                   Height="20"
                                   d:LayoutOverrides="VerticalMargin" />
                        </Button>
                        <Button x:Name="btnClose"
                                Command="{Binding CancelCommand}"
                                CommandParameter="Popup"
                                Width="20"
                                Style="{DynamicResource EmptyButton}"
                                Margin="5,0,0,0"
                                Height="20"
                                Background="#00000000"
                                Visibility="Collapsed">
                            <Image Width="16"
                                   Source="/Images/Close.png"
                                   Stretch="Fill"
                                   ToolTip="Close Balloon"
                                   Height="16"
                                   d:LayoutOverrides="VerticalMargin" />
                        </Button>
                    </StackPanel>
                    <Button x:Name="btnListen"
                            Command="{Binding ListenCommand,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}"
                            CommandParameter="Popup"
                            HorizontalAlignment="Left"
                            Margin="0"
                            Width="25"
                            VerticalAlignment="Center"
                            Style="{DynamicResource EmptyButton}"
                            Height="25"
                            Background="#00000000">
                        <Image Source="/FlashCard;component/Images/1339695682_audio-volume-high.png"
                               Stretch="Fill"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center" />
                    </Button>
                </Grid>
            </Border>
            <Grid x:Name="grLayoutContent"
                  Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <ScrollViewer VerticalScrollBarVisibility="Disabled"
                              HorizontalScrollBarVisibility="Disabled"
                              CanContentScroll="True"
                              Style="{DynamicResource ScrollViewerStyle}"
                              VerticalContentAlignment="Center"
                              HorizontalContentAlignment="Center">
                    <Grid x:Name="grdScrollViewer"
                          MaxWidth="340"
                          Margin="3,0">
                        <Grid x:Name="BackSideWrapper"
                              RenderTransformOrigin="0.5,0.5"
                              Margin="0"
                              Visibility="Hidden">
                            <Grid.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform />
                                    <SkewTransform />
                                    <RotateTransform />
                                    <TranslateTransform />
                                </TransformGroup>
                            </Grid.RenderTransform>
                            <TextBlock  x:Name="tblMainBackSide"
                                        Text="{Binding SelectedItem.Content, ElementName=lstBackSide, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                        Background="Transparent"
                                        HorizontalAlignment="Center"
                                        VirtualizingStackPanel.VirtualizationMode="Recycling"
                                        Foreground="White"
                                        Grid.Row="1"
                                        FontSize="24"
                                        VerticalAlignment="Center">
            					<TextBlock.Style>
            						<Style TargetType="{x:Type TextBlock}">
            							<Setter Property="Visibility"
                                                Value="Visible" />
            							<Style.Triggers>
            								<DataTrigger Binding="{Binding SelectedItem.IsMain, ElementName=lstBackSide, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                                         Value="0">
            									<Setter Property="Visibility"
                                                        Value="Hidden" />
            								</DataTrigger>
            							</Style.Triggers>
            						</Style>
            					</TextBlock.Style>
                            </TextBlock>
                            <Grid x:Name="stOtherBackSide">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="0.197*" />
                                    <RowDefinition Height="0.803*" />
                                </Grid.RowDefinitions>

                                <Grid.Style>

                                    <Style TargetType="{x:Type Grid}">
                                        <Setter Property="Visibility"
                                                Value="Hidden" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding SelectedItem.IsMain, ElementName=lstBackSide, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                                         Value="0">
                                                <Setter Property="Visibility"
                                                        Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Style>
                                <TextBlock TextWrapping="Wrap"
                                           x:Name="tbBackSideName"
                                           Text="{Binding SelectedItem.BackSideName, ElementName=lstBackSide, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                           Foreground="White"
                                           HorizontalAlignment="Left"
                                           FontSize="16"
                                           FontWeight="Bold"
                                           d:LayoutOverrides="Height"
                                           Margin="5,0,0,0" />
                                <TextBlock x:Name="tbContent"
                                           Text="{Binding SelectedItem.Content, ElementName=lstBackSide, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                           Background="Transparent"
                                           ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                           VerticalAlignment="Center"
                                           Foreground="White"
                                           FontSize="18.667"
                                           HorizontalAlignment="Center"
                                           TextWrapping="WrapWithOverflow"
                                           Grid.Row="1"
                                           MaxWidth="350" />
                            </Grid>
                        </Grid>
                        <Grid x:Name="FrontSideWrapper">
                            <Grid.RowDefinitions>
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Grid x:Name="grdPhrase"
                                  Grid.Row="1">
                                <StackPanel d:LayoutOverrides="Width"
                                            ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                            ScrollViewer.VerticalScrollBarVisibility="Auto"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center">
                                    <TextBlock TextWrapping="Wrap"
                                               x:Name="tbLessonName"
                                               VerticalAlignment="Center"
                                               Text="{Binding SelectedLesson.Lesson.LessonName, Mode=OneWay}"
                                               Foreground="White"
                                               HorizontalAlignment="Center"
                                               FontSize="21.333"
                                               FontWeight="Bold" />
                                    <TextBlock x:Name="tbDescription"
                                               TextWrapping="Wrap"
                                               Text="{Binding SelectedLesson.Lesson.Description, Mode=OneWay}"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               FontSize="16"
                                               Foreground="White"
                                               FontStyle="Italic" />
                                </StackPanel>
                            </Grid>
                        </Grid>
                    </Grid>
                </ScrollViewer>
            </Grid>
            <Grid x:Name="grdBottom"
                  Grid.Row="2"
                  Margin="5,0">
                <DataGrid x:Name="lstBackSide"
                          ItemsSource="{Binding SelectedLesson.Lesson.BackSides}"
                          SelectedItem="{Binding SelectedBackSide, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          AutoGenerateColumns="False"
                          CanUserAddRows="False"
                          CanUserDeleteRows="False"
                          SelectionMode="Single"
                          SelectionUnit="FullRow"
                          Background="Transparent"
                          BorderBrush="Transparent"
                          HeadersVisibility="None"
                          CellStyle="{DynamicResource DataGridCellEclipStyle}"
                          VerticalAlignment="Center"
                          HorizontalAlignment="Center"
                          RowStyle="{DynamicResource DataGridRowHozStyle}"
                          HorizontalGridLinesBrush="#00000000"
                          VerticalGridLinesBrush="#00000000"
                          Foreground="White"
                          Visibility="{Binding Visibility, ElementName=BackSideWrapper}">
                    <DataGrid.Style>
                        <Style TargetType="{x:Type DataGrid}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedLesson.Lesson.BackSides.Count}"
                                             Value="1">
                                    <Setter Property="Visibility"
                                            Value="Hidden" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.Style>
                    <DataGrid.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal"
                                        Background="Transparent" />
                        </ItemsPanelTemplate>
                    </DataGrid.ItemsPanel>
                    <DataGrid.Columns>
                        <DataGridTemplateColumn>
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Foreground="White"
                                               Background="Transparent"
                                               Text="{Binding Converter={StaticResource DatagridItemToLineNumberConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridRow}}}"
                                               VerticalAlignment="Center"
                                               HorizontalAlignment="Center"
                                               FontSize="12"
                                               ToolTip="{Binding BackSideName, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                               FontWeight="Bold" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
                <StackPanel HorizontalAlignment="Right"
                            d:LayoutOverrides="Height"
                            Orientation="Horizontal">
                    <Button x:Name="btnChangeFace"
                            Command="{Binding ChangeSideCommand}"
                            CommandParameter="Popup"
                            VerticalAlignment="Center"
                            BorderBrush="{x:Null}"
                            d:LayoutOverrides="Width, GridBox"
                            Style="{DynamicResource EmptyButton}"
                            Height="26">
                        <Button.Background>
                            <LinearGradientBrush EndPoint="0.5,1"
                                                 StartPoint="0.5,0">
                                <GradientStop Color="White"
                                              Offset="0" />
                                <GradientStop Color="White"
                                              Offset="0.9" />
                            </LinearGradientBrush>
                        </Button.Background>
                        <Image Stretch="Fill"
                               Width="41">
                            <Image.Style>
                                <Style TargetType="{x:Type Image}">
                                    <Setter Property="Source"
                                            Value="/Images/Arrow_Right.png" />
                                    <Setter Property="ToolTip"
                                            Value="Change to Back Side" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Visibility, ElementName=FrontSideWrapper}"
                                                     Value="Hidden">
                                            <Setter Property="Source"
                                                    Value="/Images/Arrow_Left.png" />
                                            <Setter Property="ToolTip"
                                                    Value="Change to Front Side" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Image.Style>
                        </Image>
                    </Button>
                </StackPanel>
                <StackPanel Visibility="{Binding SetupModel.IsEnableSlideShow, ConverterParameter=False, Converter={StaticResource booleanToVisibilityConverter}, Mode=OneWay}"
                            HorizontalAlignment="Left"
                            Orientation="Horizontal"
                            d:LayoutOverrides="Height"
                            Margin="5,0,0,0"
                            VerticalAlignment="Center">
                    <Button x:Name="btnBack"
                            ToolTip="Back"
                            Command="{Binding NextBackLessonCommand}"
                            CommandParameter="Back"
                            Style="{DynamicResource EmptyButton}"
                            Margin="0,0,5,0"
                            Width="25"
                            Height="25">
                        <Image Source="/FlashCard;component/Images/Back.png"
                               Stretch="Fill" />
                    </Button>
                    <Button x:Name="btnNext"
                            ToolTip="Next"
                            Command="{Binding NextBackLessonCommand}"
                            CommandParameter="Next"
                            Margin="0"
                            Style="{DynamicResource EmptyButton}"
                            Width="25"
                            Height="25">
                        <Image Source="/FlashCard;component/Images/Next.png"
                               Stretch="Fill" />
                    </Button>
                </StackPanel>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
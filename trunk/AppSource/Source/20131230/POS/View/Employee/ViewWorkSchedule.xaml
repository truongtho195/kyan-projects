<UserControl xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:Microsoft_Windows_Controls_Ribbon="clr-namespace:Microsoft.Windows.Controls.Ribbon;assembly=RibbonControlsLibrary"
             xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Luna"
             xmlns:local="clr-namespace:CPC.POS"
             xmlns:Anno="http://schemas.microsoft.com/expression/blend/extensions/annotations/2008"
             xmlns:Tims_Converter="clr-namespace:CPC.Converter"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:TimePicker="clr-namespace:TimePicker;assembly=TimePicker"
             mc:Ignorable="d Anno"
             x:Class="Tims.View.Employee.ViewWorkSchedule"
             x:Name="UserControl"
             xmlns:userControl="clr-namespace:CPC.Control"
             Width="800"
             Height="570">
    <UserControl.Resources>
        <Tims_Converter:RadioButtonToBoolConverter x:Key="radioButtonToBoolConverter" />
        <Tims_Converter:BoolToVisibilityConverter x:Key="boolToVisibilityConverter" />
        <Tims_Converter:BoolToVisibilityConverter x:Key="reserseBoolToVisibilityConverter"
                                                  FalseToVisibility="Visible" />
        <!--TabItemIsDeleteCollapsedStyle-->
        <Style x:Key="TabItemIsDeleteCollapsedStyle"
               TargetType="{x:Type TabItem}">
            <Setter Property="FocusVisualStyle"
                    Value="{StaticResource TabItemFocusVisual}" />
            <Setter Property="Padding"
                    Value="12,2,12,2" />
            <Setter Property="BorderThickness"
                    Value="1,1,1,0" />
            <Setter Property="BorderBrush"
                    Value="{DynamicResource TabControlBorder}" />
            <Setter Property="Foreground"
                    Value="{DynamicResource TabItemControlForeground}" />
            <Setter Property="Background"
                    Value="{DynamicResource TabItemControlBackground}" />
            <Setter Property="HorizontalContentAlignment"
                    Value="Stretch" />
            <Setter Property="VerticalContentAlignment"
                    Value="Stretch" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Border x:Name="border"
                                SnapsToDevicePixels="true">
                            <Grid Margin="0,0,1,0">
                                <Grid x:Name="Transform">
                                    <Border x:Name="Bd"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            CornerRadius="3,3,0,0"
                                            Background="{DynamicResource TabItemControlBackground}" />
                                </Grid>
                                <Border BorderThickness="{TemplateBinding BorderThickness}"
                                        Padding="{TemplateBinding Padding}">
                                    <ContentPresenter HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                                      VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                      ContentSource="Header"
                                                      RecognizesAccessKey="True" />
                                </Border>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver"
                                     Value="true">
                                <Setter Property="Cursor"
                                        TargetName="border"
                                        Value="Hand" />
                            </Trigger>
                            <Trigger Property="IsSelected"
                                     Value="true">
                                <Setter Property="Panel.ZIndex"
                                        Value="1" />
                                <Setter Property="Background"
                                        TargetName="Bd"
                                        Value="{DynamicResource TabItemControl_IsSelectedBackground}" />
                            </Trigger>
                            <Trigger Property="IsEnabled"
                                     Value="false">
                                <Setter Property="Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                <Setter Property="Background"
                                        TargetName="Bd"
                                        Value="#FFF5F4EA" />
                                <Setter Property="BorderBrush"
                                        TargetName="Bd"
                                        Value="#FFC9C7BA" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected"
                                               Value="true" />
                                    <Condition Property="TabStripPlacement"
                                               Value="Top" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Margin"
                                        Value="-2,-2,-2,-1" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="FontSize"
                    Value="11" />
            <Setter Property="Visibility"
                    Value="{Binding IsDeleted, Converter={StaticResource reserseBoolToVisibilityConverter}}" />
        </Style>
    </UserControl.Resources>
    <Grid x:Name="grdCreateSchedule"
          d:LayoutOverrides="Height">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="50" />
        </Grid.RowDefinitions>
        <Border x:Name="brdContentCreateSchedule"
                Margin="15,20,15,15"
                Background="#19FFFFFF"
                BorderBrush="White"
                BorderThickness="1">
            <Grid Width="Auto"
                  x:Name="grdContentScheduleInformation"
                  d:LayoutOverrides="GridBox"
                  Margin="10">
                <Grid.RowDefinitions>
                    <RowDefinition Height="25" />
                    <RowDefinition Height="105" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <TextBlock Text="Work Schedule Name:"
                           Foreground="White"
                           x:Name="txtblWorkScheduleName"
                           HorizontalAlignment="Left"
                           d:LayoutOverrides="Width, Height, GridBox"
                           TextWrapping="NoWrap"
                           VerticalAlignment="Center"
                           Margin="10,0,0,0" />
                <TextBox IsReadOnly="True"
                         x:Name="txtScheduleeName"
                         Text="{Binding SelectedWorkSchedule.WorkScheduleName}"
                         BorderBrush="Black"
                         HorizontalAlignment="Left"
                         TextWrapping="NoWrap"
                         Padding="2,0,2,0"
                         d:LayoutOverrides="GridBox"
                         Margin="130,2,0,2"
                         Width="470" />
                <Grid x:Name="grdContentScheduleDetail"
                      Width="Auto"
                      Grid.RowSpan="2"
                      Grid.Row="1"
                      d:LayoutOverrides="Height">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="105" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <GroupBox x:Name="gbScheduleType"
                              d:LayoutOverrides="Height"
                              Margin="10,5,10,0"
                              Background="#19FFFFFF">
                        <GroupBox.Header>
                            <TextBlock x:Name="txtblSchedulType"
                                       Text="Schedule Type"
                                       Foreground="{DynamicResource GroupboxHeaderForeground}"
                                       TextWrapping="NoWrap"
                                       FontSize="14"
                                       FontWeight="Bold" />
                        </GroupBox.Header>
                        <userControl:GridReadOnlyControl IsReadOnly="True"
                                                         x:Name="grdContentScheduleType"
                                                         Width="Auto"
                                                         d:LayoutOverrides="GridBox"
                                                         Margin="0,5,0,0">
                            <userControl:GridReadOnlyControl.RowDefinitions>
                                <RowDefinition Height="24" />
                                <RowDefinition Height="24" />
                                <RowDefinition Height="24" />
                            </userControl:GridReadOnlyControl.RowDefinitions>
                            <RadioButton x:Name="rbFixed"
                                         IsChecked="{Binding SelectedWorkSchedule.WorkScheduleType, ConverterParameter=1,Mode=OneWay, Converter={StaticResource radioButtonToBoolConverter}}"
                                         GroupName="grpFixed"
                                         HorizontalAlignment="Left"
                                         Margin="10,0,0,0"
                                         VerticalAlignment="Center"
                                         Content="  Fixed: The Employee must complete a Clock-In and Out schedule"
                                         Foreground="White" />
                            <RadioButton x:Name="rbVariable"
                                         IsChecked="{Binding SelectedWorkSchedule.WorkScheduleType, ConverterParameter=2,Mode=OneWay, Converter={StaticResource radioButtonToBoolConverter}}"
                                         GroupName="grpVariable"
                                         HorizontalAlignment="Left"
                                         Margin="10,0,0,0"
                                         VerticalAlignment="Center"
                                         Content="  Variable: The Employee must complete a specified number of daily hours"
                                         Grid.Row="1"
                                         Foreground="White" />
                            <RadioButton x:Name="rbRotation"
                                         IsChecked="{Binding SelectedWorkSchedule.WorkScheduleType, ConverterParameter=3,Mode=OneWay, Converter={StaticResource radioButtonToBoolConverter}}"
                                         GroupName="grpRotation"
                                         HorizontalAlignment="Left"
                                         Margin="10,0,0,0"
                                         VerticalAlignment="Center"
                                         Content="  Rotation ( the schedule changes automatically each week )"
                                         Grid.Row="3"
                                         Foreground="White" />
                            <TextBlock x:Name="txtblSchedules"
                                       Text="Schedules to rotate:"
                                       Foreground="White"
                                       HorizontalAlignment="Left"
                                       TextWrapping="NoWrap"
                                       Margin="383,0,0,0"
                                       VerticalAlignment="Center"
                                       Grid.Row="2"
                                       IsEnabled="{Binding IsChecked, ElementName=rbRotation}" />
                            <xctk:IntegerUpDown x:Name="udRotate"
                                                Value="{Binding SelectedWorkSchedule.Rotate, Mode=TwoWay}"
                                                Increment="1"
                                                Minimum="2"
                                                Maximum="4"
                                                HorizontalAlignment="Left"
                                                Margin="500,0,0,0"
                                                VerticalAlignment="Stretch"
                                                Width="50"
                                                Grid.Row="2"
                                                IsEnabled="{Binding IsChecked, ElementName=rbRotation}" />
                        </userControl:GridReadOnlyControl>
                    </GroupBox>
                    <TabControl x:Name="tabConfiguration"
                                ItemsSource="{Binding SelectedWorkSchedule.WorkWeekCollection}"
                                SelectedItem="{Binding SelectedWorkSchedule.SelectedWorkWeek}"
                                IsSynchronizedWithCurrentItem="True"
                                Background="{DynamicResource TabControlBackground}"
                                BorderBrush="{DynamicResource TabControlBorder}"
                                Grid.Row="1"
                                Margin="10"
                                ItemContainerStyle="{StaticResource TabItemIsDeleteCollapsedStyle}">
                        <TabControl.ItemTemplate>
                            <DataTemplate>
                                <Grid x:Name="grdTabItemWeek">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="110" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock x:Name="txtblTabWeek1"
                                               Foreground="White"
                                               Text="{Binding Week, Mode=OneWay, StringFormat=Total Hours Week \{0\}:}"
                                               TextWrapping="NoWrap"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               Style="{DynamicResource TabItemTextBlock}" />
                                    <Rectangle x:Name="bgTabWeekTime"
                                               Stroke="White"
                                               Grid.Column="1"
                                               Margin="0" />
                                    <TextBlock x:Name="txtblTabWeekTime"
                                               Foreground="#FFFF0000"
                                               Text="{Binding TotalHours, Mode=OneWay}"
                                               TextWrapping="NoWrap"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               Grid.Column="2"
                                               FontWeight="Bold"
                                               Margin="5,0,5,0" />
                                </Grid>
                            </DataTemplate>
                        </TabControl.ItemTemplate>
                        <TabControl.ContentTemplate>
                            <DataTemplate>
                                <userControl:GridReadOnlyControl IsReadOnly="True"
                                                                 ColumnReadOnly="8"
                                                                 x:Name="grdContentWeek"
                                                                 HorizontalAlignment="Stretch"
                                                                 Margin="5,0">
                                    <userControl:GridReadOnlyControl.RowDefinitions>
                                        <RowDefinition Height="10" />
                                        <RowDefinition Height="5" />
                                        <RowDefinition Height="25" />
                                        <RowDefinition Height="30" />
                                        <RowDefinition Height="25" />
                                        <RowDefinition Height="25" />
                                        <RowDefinition Height="25" />
                                        <RowDefinition Height="25" />
                                        <RowDefinition Height="25" />
                                        <RowDefinition Height="25" />
                                        <RowDefinition Height="25" />
                                    </userControl:GridReadOnlyControl.RowDefinitions>
                                    <userControl:GridReadOnlyControl.ColumnDefinitions>
                                        <ColumnDefinition Width="70" />
                                        <ColumnDefinition Width="90" />
                                        <ColumnDefinition Width="115" />
                                        <ColumnDefinition Width="25" />
                                        <ColumnDefinition Width="135" />
                                        <ColumnDefinition Width="115" />
                                        <ColumnDefinition Width="25" />
                                        <ColumnDefinition />
                                    </userControl:GridReadOnlyControl.ColumnDefinitions>
                                    <Rectangle x:Name="Line1"
                                               Fill="White"
                                               Stroke="#FF000000"
                                               StrokeThickness="0"
                                               Margin="0,0,0,5"
                                               VerticalAlignment="Bottom"
                                               Height="1"
                                               Grid.ColumnSpan="8"
                                               Grid.Row="3"
                                               Grid.RowSpan="1" />
                                    <TextBlock x:Name="txtblDay1"
                                               Text="Day"
                                               Foreground="White"
                                               TextWrapping="NoWrap"
                                               HorizontalAlignment="Center"
                                               VerticalAlignment="Center"
                                               Grid.Row="3"
                                               d:LayoutOverrides="GridBox" />
                                    <ToggleButton x:Name="btnMonday"
                                                  IsChecked="{Binding DayOfWorkWeekCollection[0].HasWork}"
                                                  HorizontalAlignment="Stretch"
                                                  Margin="0,2"
                                                  Content="Mon"
                                                  Grid.Row="4" />
                                    <ToggleButton x:Name="btnTuesday"
                                                  IsChecked="{Binding DayOfWorkWeekCollection[1].HasWork}"
                                                  HorizontalAlignment="Stretch"
                                                  Margin="0,2"
                                                  Content="Tue"
                                                  Grid.Row="5" />
                                    <ToggleButton x:Name="btnWednesday"
                                                  IsChecked="{Binding DayOfWorkWeekCollection[2].HasWork}"
                                                  HorizontalAlignment="Stretch"
                                                  Margin="0,2"
                                                  Content="Wed"
                                                  Grid.Row="6" />
                                    <ToggleButton x:Name="btnThursday"
                                                  IsChecked="{Binding DayOfWorkWeekCollection[3].HasWork}"
                                                  HorizontalAlignment="Stretch"
                                                  Margin="0,2"
                                                  Content="Thu"
                                                  Grid.Row="7" />
                                    <ToggleButton x:Name="btnFriday"
                                                  IsChecked="{Binding DayOfWorkWeekCollection[4].HasWork}"
                                                  HorizontalAlignment="Stretch"
                                                  Margin="0,2"
                                                  Content="Fri"
                                                  Grid.Row="8" />
                                    <ToggleButton x:Name="btnSaturday"
                                                  IsChecked="{Binding DayOfWorkWeekCollection[5].HasWork}"
                                                  HorizontalAlignment="Stretch"
                                                  Margin="0,2"
                                                  Content="Sat"
                                                  Grid.Row="9" />
                                    <ToggleButton x:Name="btnSunday"
                                                  IsChecked="{Binding DayOfWorkWeekCollection[6].HasWork}"
                                                  HorizontalAlignment="Stretch"
                                                  Margin="0,2"
                                                  Content="Sun"
                                                  Grid.Row="10" />
                                    <TextBlock x:Name="txtblWork"
                                               Text="Work Hours"
                                               Foreground="White"
                                               TextWrapping="NoWrap"
                                               HorizontalAlignment="Center"
                                               Margin="0,0,0,0"
                                               VerticalAlignment="Center"
                                               Grid.Column="1"
                                               FontWeight="Bold"
                                               Grid.Row="2"
                                               Grid.ColumnSpan="2" />
                                    <TextBlock x:Name="txtblClockIn"
                                               Text="Clock-In"
                                               Foreground="White"
                                               TextWrapping="NoWrap"
                                               HorizontalAlignment="Center"
                                               Margin="13,0,0,0"
                                               VerticalAlignment="Center"
                                               Grid.Column="1"
                                               Grid.Row="3" />
                                    <TextBlock x:Name="txtblClockOut"
                                               Text="Clock-Out"
                                               Foreground="White"
                                               TextWrapping="NoWrap"
                                               HorizontalAlignment="Center"
                                               Margin="5,0,0,0"
                                               VerticalAlignment="Center"
                                               Grid.Column="2"
                                               Grid.Row="3" />
                                    <TimePicker:TimePickerControl x:Name="tpkMondayClockIn"
                                                                  RealTime="{Binding DayOfWorkWeekCollection[0].WorkIn, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                                                  IsDisplayDayOfWeek="False"
                                                                  VerticalAlignment="Stretch"
                                                                  Margin="10,2,0,2"
                                                                  Grid.Column="1"
                                                                  Grid.Row="4"
                                                                  Visibility="{Binding DayOfWorkWeekCollection[0].HasWork, Converter={StaticResource boolToVisibilityConverter}}"
                                                                  ButtonUpDownStyle="{DynamicResource ButtonUpDownStyle}" />
                                    <TimePicker:TimePickerControl x:Name="tpkTuesdayClockIn"
                                                                  RealTime="{Binding DayOfWorkWeekCollection[1].WorkIn, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                                                  IsDisplayDayOfWeek="False"
                                                                  VerticalAlignment="Stretch"
                                                                  Margin="10,2,0,2"
                                                                  Grid.Column="1"
                                                                  Grid.Row="5"
                                                                  Visibility="{Binding DayOfWorkWeekCollection[1].HasWork, Converter={StaticResource boolToVisibilityConverter}}"
                                                                  ButtonUpDownStyle="{DynamicResource ButtonUpDownStyle}" />
                                    <TimePicker:TimePickerControl  x:Name="tpkWednesdayClockIn"
                                                                   RealTime="{Binding DayOfWorkWeekCollection[2].WorkIn, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                                                   IsDisplayDayOfWeek="False"
                                                                   VerticalAlignment="Stretch"
                                                                   Margin="10,2,0,2"
                                                                   Grid.Column="1"
                                                                   Grid.Row="6"
                                                                   Visibility="{Binding DayOfWorkWeekCollection[2].HasWork, Converter={StaticResource boolToVisibilityConverter}}"
                                                                   ButtonUpDownStyle="{DynamicResource ButtonUpDownStyle}" />
                                    <TimePicker:TimePickerControl  x:Name="tpkThursdayClockIn"
                                                                   RealTime="{Binding DayOfWorkWeekCollection[3].WorkIn, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                                                   IsDisplayDayOfWeek="False"
                                                                   VerticalAlignment="Stretch"
                                                                   Margin="10,2,0,2"
                                                                   Grid.Column="1"
                                                                   Grid.Row="7"
                                                                   Visibility="{Binding DayOfWorkWeekCollection[3].HasWork, Converter={StaticResource boolToVisibilityConverter}}"
                                                                   ButtonUpDownStyle="{DynamicResource ButtonUpDownStyle}" />
                                    <TimePicker:TimePickerControl  x:Name="tpkFridayClockIn"
                                                                   RealTime="{Binding DayOfWorkWeekCollection[4].WorkIn, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                                                   IsDisplayDayOfWeek="False"
                                                                   VerticalAlignment="Stretch"
                                                                   Margin="10,2,0,2"
                                                                   Grid.Column="1"
                                                                   Grid.Row="8"
                                                                   Visibility="{Binding DayOfWorkWeekCollection[4].HasWork, Converter={StaticResource boolToVisibilityConverter}}"
                                                                   ButtonUpDownStyle="{DynamicResource ButtonUpDownStyle}" />
                                    <TimePicker:TimePickerControl  x:Name="tpkSaturdayClockIn"
                                                                   RealTime="{Binding DayOfWorkWeekCollection[5].WorkIn, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                                                   IsDisplayDayOfWeek="False"
                                                                   VerticalAlignment="Stretch"
                                                                   Margin="10,2,0,2"
                                                                   Grid.Column="1"
                                                                   Grid.Row="9"
                                                                   Visibility="{Binding DayOfWorkWeekCollection[5].HasWork, Converter={StaticResource boolToVisibilityConverter}}"
                                                                   ButtonUpDownStyle="{DynamicResource ButtonUpDownStyle}" />
                                    <TimePicker:TimePickerControl  x:Name="tpkSundayClockIn"
                                                                   RealTime="{Binding DayOfWorkWeekCollection[6].WorkIn, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                                                   IsDisplayDayOfWeek="False"
                                                                   VerticalAlignment="Stretch"
                                                                   Margin="10,2,0,2"
                                                                   Grid.Column="1"
                                                                   Grid.Row="10"
                                                                   Visibility="{Binding DayOfWorkWeekCollection[6].HasWork, Converter={StaticResource boolToVisibilityConverter}}"
                                                                   ButtonUpDownStyle="{DynamicResource ButtonUpDownStyle}" />
                                    <TimePicker:TimePickerControl  x:Name="tpkMondayClockOut"
                                                                   RealTime="{Binding DayOfWorkWeekCollection[0].WorkOut, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                                                   VerticalAlignment="Stretch"
                                                                   Margin="10,2,0,2"
                                                                   Grid.Column="2"
                                                                   Grid.Row="4"
                                                                   Visibility="{Binding DayOfWorkWeekCollection[0].HasWork, Converter={StaticResource boolToVisibilityConverter}}"
                                                                   ButtonUpDownStyle="{DynamicResource ButtonUpDownStyle}" />
                                    <TimePicker:TimePickerControl  x:Name="tpkTuesdayClockOut"
                                                                   RealTime="{Binding DayOfWorkWeekCollection[1].WorkOut, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                                                   VerticalAlignment="Stretch"
                                                                   Margin="10,2,0,2"
                                                                   Grid.Column="2"
                                                                   Grid.Row="5"
                                                                   Visibility="{Binding DayOfWorkWeekCollection[1].HasWork, Converter={StaticResource boolToVisibilityConverter}}"
                                                                   ButtonUpDownStyle="{DynamicResource ButtonUpDownStyle}" />
                                    <TimePicker:TimePickerControl  x:Name="tpkWednesdayClockOut"
                                                                   RealTime="{Binding DayOfWorkWeekCollection[2].WorkOut, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                                                   VerticalAlignment="Stretch"
                                                                   Margin="10,2,0,2"
                                                                   Grid.Column="2"
                                                                   Grid.Row="6"
                                                                   Visibility="{Binding DayOfWorkWeekCollection[2].HasWork, Converter={StaticResource boolToVisibilityConverter}}"
                                                                   ButtonUpDownStyle="{DynamicResource ButtonUpDownStyle}" />
                                    <TimePicker:TimePickerControl  x:Name="tpkThursdayClockOut"
                                                                   RealTime="{Binding DayOfWorkWeekCollection[3].WorkOut, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                                                   VerticalAlignment="Stretch"
                                                                   Margin="10,2,0,2"
                                                                   Grid.Column="2"
                                                                   Grid.Row="7"
                                                                   Visibility="{Binding DayOfWorkWeekCollection[3].HasWork, Converter={StaticResource boolToVisibilityConverter}}"
                                                                   ButtonUpDownStyle="{DynamicResource ButtonUpDownStyle}" />
                                    <TimePicker:TimePickerControl  x:Name="tpkFridayClockOut"
                                                                   RealTime="{Binding DayOfWorkWeekCollection[4].WorkOut, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                                                   VerticalAlignment="Stretch"
                                                                   Margin="10,2,0,2"
                                                                   Grid.Column="2"
                                                                   Grid.Row="8"
                                                                   Visibility="{Binding DayOfWorkWeekCollection[4].HasWork, Converter={StaticResource boolToVisibilityConverter}}"
                                                                   ButtonUpDownStyle="{DynamicResource ButtonUpDownStyle}" />
                                    <TimePicker:TimePickerControl  x:Name="tpkSaturdayClockOut1"
                                                                   RealTime="{Binding DayOfWorkWeekCollection[5].WorkOut, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                                                   VerticalAlignment="Stretch"
                                                                   Margin="10,2,0,2"
                                                                   Grid.Column="2"
                                                                   Grid.Row="9"
                                                                   Visibility="{Binding DayOfWorkWeekCollection[5].HasWork, Converter={StaticResource boolToVisibilityConverter}}"
                                                                   ButtonUpDownStyle="{DynamicResource ButtonUpDownStyle}" />
                                    <TimePicker:TimePickerControl  x:Name="tpkSaturdayClockOut"
                                                                   RealTime="{Binding DayOfWorkWeekCollection[6].WorkOut, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                                                   VerticalAlignment="Stretch"
                                                                   Margin="10,2,0,2"
                                                                   Grid.Column="2"
                                                                   Grid.Row="10"
                                                                   Visibility="{Binding DayOfWorkWeekCollection[6].HasWork, Converter={StaticResource boolToVisibilityConverter}}"
                                                                   ButtonUpDownStyle="{DynamicResource ButtonUpDownStyle}" />
                                    <TextBlock x:Name="txtblLunchBreak"
                                               Text="Lunch Break"
                                               Foreground="White"
                                               TextWrapping="NoWrap"
                                               HorizontalAlignment="Center"
                                               Margin="10,0,0,0"
                                               VerticalAlignment="Center"
                                               Grid.Column="3"
                                               FontWeight="Bold"
                                               Grid.Row="2"
                                               Grid.ColumnSpan="3" />
                                    <TextBlock x:Name="txtblLunchBreakClockOut"
                                               Text="Clock-Out"
                                               Foreground="White"
                                               TextWrapping="NoWrap"
                                               HorizontalAlignment="Center"
                                               Margin="10,0,0,0"
                                               VerticalAlignment="Center"
                                               Grid.Column="4"
                                               Grid.Row="3" />
                                    <TextBlock x:Name="txtblLunchBreakClockIn"
                                               Text="Clock-In"
                                               Foreground="White"
                                               TextWrapping="NoWrap"
                                               HorizontalAlignment="Center"
                                               Margin="5,0,0,0"
                                               VerticalAlignment="Center"
                                               Grid.Column="5"
                                               Grid.Row="3" />
                                    <CheckBox x:Name="chkLunchBreakMondayClockOut"
                                              IsChecked="{Binding DayOfWorkWeekCollection[0].LunchBreakFlag}"
                                              HorizontalAlignment="Left"
                                              Margin="0"
                                              VerticalAlignment="Center"
                                              Grid.Column="4"
                                              Grid.Row="4"
                                              Visibility="{Binding DayOfWorkWeekCollection[0].HasWork, Converter={StaticResource boolToVisibilityConverter}}" />
                                    <CheckBox x:Name="chkLunchBreakTuesdayClockOut"
                                              IsChecked="{Binding DayOfWorkWeekCollection[1].LunchBreakFlag}"
                                              HorizontalAlignment="Left"
                                              Margin="0"
                                              VerticalAlignment="Center"
                                              Content=""
                                              Grid.Column="4"
                                              Grid.Row="5"
                                              Visibility="{Binding DayOfWorkWeekCollection[1].HasWork, Converter={StaticResource boolToVisibilityConverter}}" />
                                    <CheckBox x:Name="chkLunchBreakWednesdayClockOut"
                                              IsChecked="{Binding DayOfWorkWeekCollection[2].LunchBreakFlag}"
                                              HorizontalAlignment="Left"
                                              Margin="0"
                                              VerticalAlignment="Center"
                                              Content=""
                                              Grid.Column="4"
                                              Grid.Row="6"
                                              Visibility="{Binding DayOfWorkWeekCollection[2].HasWork, Converter={StaticResource boolToVisibilityConverter}}" />
                                    <CheckBox x:Name="chkLunchBreakThursdayClockOut"
                                              IsChecked="{Binding DayOfWorkWeekCollection[3].LunchBreakFlag}"
                                              HorizontalAlignment="Left"
                                              Margin="0"
                                              VerticalAlignment="Center"
                                              Content=""
                                              Grid.Column="4"
                                              Grid.Row="7"
                                              Visibility="{Binding DayOfWorkWeekCollection[3].HasWork, Converter={StaticResource boolToVisibilityConverter}}" />
                                    <CheckBox x:Name="chkLunchBreakFridayClockOut"
                                              IsChecked="{Binding DayOfWorkWeekCollection[4].LunchBreakFlag}"
                                              HorizontalAlignment="Left"
                                              Margin="0"
                                              VerticalAlignment="Center"
                                              Content=""
                                              Grid.Column="4"
                                              Grid.Row="8"
                                              Visibility="{Binding DayOfWorkWeekCollection[4].HasWork, Converter={StaticResource boolToVisibilityConverter}}" />
                                    <CheckBox x:Name="chkLunchBreakSaturdayClockOut"
                                              IsChecked="{Binding DayOfWorkWeekCollection[5].LunchBreakFlag}"
                                              HorizontalAlignment="Left"
                                              Margin="0"
                                              VerticalAlignment="Center"
                                              Content=""
                                              Grid.Column="4"
                                              Grid.Row="9"
                                              Visibility="{Binding DayOfWorkWeekCollection[5].HasWork, Converter={StaticResource boolToVisibilityConverter}}" />
                                    <CheckBox x:Name="chkLunchBreakSundayClockOut"
                                              IsChecked="{Binding DayOfWorkWeekCollection[6].LunchBreakFlag}"
                                              HorizontalAlignment="Left"
                                              Margin="0"
                                              VerticalAlignment="Center"
                                              Content=""
                                              Grid.Column="4"
                                              Grid.Row="10"
                                              Visibility="{Binding DayOfWorkWeekCollection[6].HasWork, Converter={StaticResource boolToVisibilityConverter}}" />
                                    <TimePicker:TimePickerControl  x:Name="tpkLunchBreakMondayClockOut"
                                                                   RealTime="{Binding DayOfWorkWeekCollection[0].LunchOut, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                                                   IsEnabled="{Binding DayOfWorkWeekCollection[0].LunchBreakFlag}"
                                                                   IsSelectTimeMode="True"
                                                                   VerticalAlignment="Stretch"
                                                                   Margin="20,2,0,2"
                                                                   Grid.Column="4"
                                                                   Grid.Row="4"
                                                                   Visibility="{Binding DayOfWorkWeekCollection[0].HasWork, Converter={StaticResource boolToVisibilityConverter}}"
                                                                   ButtonUpDownStyle="{DynamicResource ButtonUpDownStyle}" />
                                    <TimePicker:TimePickerControl  x:Name="tpkLunchBreakTuesdayClockOut"
                                                                   RealTime="{Binding DayOfWorkWeekCollection[1].LunchOut, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                                                   IsEnabled="{Binding DayOfWorkWeekCollection[1].LunchBreakFlag}"
                                                                   IsSelectTimeMode="True"
                                                                   VerticalAlignment="Stretch"
                                                                   Margin="20,2,0,2"
                                                                   Grid.Column="4"
                                                                   Grid.Row="5"
                                                                   Visibility="{Binding DayOfWorkWeekCollection[1].HasWork, Converter={StaticResource boolToVisibilityConverter}}"
                                                                   ButtonUpDownStyle="{DynamicResource ButtonUpDownStyle}" />
                                    <TimePicker:TimePickerControl  x:Name="tpkLunchBreakWednesdayClockOut"
                                                                   RealTime="{Binding DayOfWorkWeekCollection[2].LunchOut, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                                                   IsEnabled="{Binding DayOfWorkWeekCollection[2].LunchBreakFlag}"
                                                                   IsSelectTimeMode="True"
                                                                   VerticalAlignment="Stretch"
                                                                   Margin="20,2,0,2"
                                                                   Grid.Column="4"
                                                                   Grid.Row="6"
                                                                   Visibility="{Binding DayOfWorkWeekCollection[2].HasWork, Converter={StaticResource boolToVisibilityConverter}}"
                                                                   ButtonUpDownStyle="{DynamicResource ButtonUpDownStyle}" />
                                    <TimePicker:TimePickerControl  x:Name="tpkLunchBreakThursdayClockOut"
                                                                   RealTime="{Binding DayOfWorkWeekCollection[3].LunchOut, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                                                   IsEnabled="{Binding DayOfWorkWeekCollection[3].LunchBreakFlag}"
                                                                   IsSelectTimeMode="True"
                                                                   VerticalAlignment="Stretch"
                                                                   Margin="20,2,0,2"
                                                                   Grid.Column="4"
                                                                   Grid.Row="7"
                                                                   Visibility="{Binding DayOfWorkWeekCollection[3].HasWork, Converter={StaticResource boolToVisibilityConverter}}"
                                                                   ButtonUpDownStyle="{DynamicResource ButtonUpDownStyle}" />
                                    <TimePicker:TimePickerControl  x:Name="tpkLunchBreakFridayClockOut"
                                                                   RealTime="{Binding DayOfWorkWeekCollection[4].LunchOut, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                                                   IsEnabled="{Binding DayOfWorkWeekCollection[4].LunchBreakFlag}"
                                                                   IsSelectTimeMode="True"
                                                                   VerticalAlignment="Stretch"
                                                                   Margin="20,2,0,2"
                                                                   Grid.Column="4"
                                                                   Grid.Row="8"
                                                                   Visibility="{Binding DayOfWorkWeekCollection[4].HasWork, Converter={StaticResource boolToVisibilityConverter}}"
                                                                   ButtonUpDownStyle="{DynamicResource ButtonUpDownStyle}" />
                                    <TimePicker:TimePickerControl  x:Name="tpkLunchBreakSaturdayClockOut"
                                                                   RealTime="{Binding DayOfWorkWeekCollection[5].LunchOut, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                                                   IsEnabled="{Binding DayOfWorkWeekCollection[5].LunchBreakFlag}"
                                                                   IsSelectTimeMode="True"
                                                                   VerticalAlignment="Stretch"
                                                                   Margin="20,2,0,2"
                                                                   Grid.Column="4"
                                                                   Grid.Row="9"
                                                                   Visibility="{Binding DayOfWorkWeekCollection[5].HasWork, Converter={StaticResource boolToVisibilityConverter}}"
                                                                   ButtonUpDownStyle="{DynamicResource ButtonUpDownStyle}" />
                                    <TimePicker:TimePickerControl  x:Name="tpkLunchBreakSundayClockOut"
                                                                   RealTime="{Binding DayOfWorkWeekCollection[6].LunchOut, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                                                   IsEnabled="{Binding DayOfWorkWeekCollection[6].LunchBreakFlag}"
                                                                   IsSelectTimeMode="True"
                                                                   VerticalAlignment="Stretch"
                                                                   Margin="20,2,0,2"
                                                                   Grid.Column="4"
                                                                   Grid.Row="10"
                                                                   Visibility="{Binding DayOfWorkWeekCollection[6].HasWork, Converter={StaticResource boolToVisibilityConverter}}"
                                                                   ButtonUpDownStyle="{DynamicResource ButtonUpDownStyle}" />
                                    <TimePicker:TimePickerControl  x:Name="tpkMondayReturn"
                                                                   RealTime="{Binding DayOfWorkWeekCollection[0].LunchIn, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                                                   IsEnabled="{Binding DayOfWorkWeekCollection[0].LunchBreakFlag}"
                                                                   IsSelectTimeMode="True"
                                                                   VerticalAlignment="Stretch"
                                                                   Margin="10,2,0,2"
                                                                   Grid.Column="5"
                                                                   Grid.Row="4"
                                                                   Visibility="{Binding DayOfWorkWeekCollection[0].HasWork, Converter={StaticResource boolToVisibilityConverter}}"
                                                                   ButtonUpDownStyle="{DynamicResource ButtonUpDownStyle}" />
                                    <TimePicker:TimePickerControl  x:Name="tpkTuesdayReturn"
                                                                   RealTime="{Binding DayOfWorkWeekCollection[1].LunchIn, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                                                   IsEnabled="{Binding DayOfWorkWeekCollection[1].LunchBreakFlag}"
                                                                   IsSelectTimeMode="True"
                                                                   VerticalAlignment="Stretch"
                                                                   Margin="10,2,0,2"
                                                                   Grid.Column="5"
                                                                   Grid.Row="5"
                                                                   Visibility="{Binding DayOfWorkWeekCollection[1].HasWork, Converter={StaticResource boolToVisibilityConverter}}"
                                                                   ButtonUpDownStyle="{DynamicResource ButtonUpDownStyle}" />
                                    <TimePicker:TimePickerControl  x:Name="tpkWednesdayReturn"
                                                                   RealTime="{Binding DayOfWorkWeekCollection[2].LunchIn, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                                                   IsEnabled="{Binding DayOfWorkWeekCollection[2].LunchBreakFlag}"
                                                                   IsSelectTimeMode="True"
                                                                   VerticalAlignment="Stretch"
                                                                   Margin="10,2,0,2"
                                                                   Grid.Column="5"
                                                                   Grid.Row="6"
                                                                   Visibility="{Binding DayOfWorkWeekCollection[2].HasWork, Converter={StaticResource boolToVisibilityConverter}}"
                                                                   ButtonUpDownStyle="{DynamicResource ButtonUpDownStyle}" />
                                    <TimePicker:TimePickerControl  x:Name="tpkThursdayReturn"
                                                                   RealTime="{Binding DayOfWorkWeekCollection[3].LunchIn, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                                                   IsEnabled="{Binding DayOfWorkWeekCollection[3].LunchBreakFlag}"
                                                                   IsSelectTimeMode="True"
                                                                   VerticalAlignment="Stretch"
                                                                   Margin="10,2,0,2"
                                                                   Grid.Column="5"
                                                                   Grid.Row="7"
                                                                   Visibility="{Binding DayOfWorkWeekCollection[3].HasWork, Converter={StaticResource boolToVisibilityConverter}}"
                                                                   ButtonUpDownStyle="{DynamicResource ButtonUpDownStyle}" />
                                    <TimePicker:TimePickerControl  x:Name="tpkFridayReturn"
                                                                   RealTime="{Binding DayOfWorkWeekCollection[4].LunchIn, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                                                   IsEnabled="{Binding DayOfWorkWeekCollection[4].LunchBreakFlag}"
                                                                   IsSelectTimeMode="True"
                                                                   VerticalAlignment="Stretch"
                                                                   Margin="10,2,0,2"
                                                                   Grid.Column="5"
                                                                   Grid.Row="8"
                                                                   Visibility="{Binding DayOfWorkWeekCollection[4].HasWork, Converter={StaticResource boolToVisibilityConverter}}"
                                                                   ButtonUpDownStyle="{DynamicResource ButtonUpDownStyle}" />
                                    <TimePicker:TimePickerControl  x:Name="tpkSaturdayReturn"
                                                                   RealTime="{Binding DayOfWorkWeekCollection[5].LunchIn, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                                                   IsEnabled="{Binding DayOfWorkWeekCollection[5].LunchBreakFlag}"
                                                                   IsSelectTimeMode="True"
                                                                   VerticalAlignment="Stretch"
                                                                   Margin="10,2,0,2"
                                                                   Grid.Column="5"
                                                                   Grid.Row="9"
                                                                   d:IsHidden="True"
                                                                   Visibility="{Binding DayOfWorkWeekCollection[5].HasWork, Converter={StaticResource boolToVisibilityConverter}}"
                                                                   ButtonUpDownStyle="{DynamicResource ButtonUpDownStyle}" />
                                    <TimePicker:TimePickerControl  x:Name="tpkSundayReturn"
                                                                   RealTime="{Binding DayOfWorkWeekCollection[6].LunchIn, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                                                   IsEnabled="{Binding DayOfWorkWeekCollection[6].LunchBreakFlag}"
                                                                   IsSelectTimeMode="True"
                                                                   VerticalAlignment="Stretch"
                                                                   Margin="10,2,0,2"
                                                                   Grid.Column="5"
                                                                   Grid.Row="10"
                                                                   d:IsHidden="True"
                                                                   Visibility="{Binding DayOfWorkWeekCollection[6].HasWork, Converter={StaticResource boolToVisibilityConverter}}"
                                                                   ButtonUpDownStyle="{DynamicResource ButtonUpDownStyle}" />
                                    <TextBox x:Name="txtMondayDuration"
                                             TextWrapping="Wrap"
                                             Text="{Binding DayOfWorkWeekCollection[0].Duration, Mode=OneWay, StringFormat=\{0\} hrs}"
                                             IsReadOnly="True"
                                             Grid.Column="7"
                                             Grid.Row="4"
                                             HorizontalAlignment="Left"
                                             Margin="0,2"
                                             Width="60"
                                             HorizontalContentAlignment="Right"
                                             BorderBrush="Black"
                                             Visibility="{Binding DayOfWorkWeekCollection[0].HasWork, Converter={StaticResource boolToVisibilityConverter}}" />
                                    <TextBox x:Name="txtTuesdayDuration"
                                             TextWrapping="Wrap"
                                             Text="{Binding DayOfWorkWeekCollection[1].Duration, Mode=OneWay, StringFormat=\{0\} hrs}"
                                             IsReadOnly="True"
                                             Grid.Column="7"
                                             Grid.Row="5"
                                             HorizontalAlignment="Left"
                                             Margin="0,2"
                                             Width="60"
                                             HorizontalContentAlignment="Right"
                                             BorderBrush="Black"
                                             Visibility="{Binding DayOfWorkWeekCollection[1].HasWork, Converter={StaticResource boolToVisibilityConverter}}" />
                                    <TextBox x:Name="txtWednesdayDuration"
                                             TextWrapping="Wrap"
                                             Text="{Binding DayOfWorkWeekCollection[2].Duration, Mode=OneWay, StringFormat=\{0\} hrs}"
                                             IsReadOnly="True"
                                             Grid.Column="7"
                                             Grid.Row="6"
                                             HorizontalAlignment="Left"
                                             Margin="0,2"
                                             Width="60"
                                             HorizontalContentAlignment="Right"
                                             BorderBrush="Black"
                                             Visibility="{Binding DayOfWorkWeekCollection[2].HasWork, Converter={StaticResource boolToVisibilityConverter}}" />
                                    <TextBox x:Name="txtThursdayDuration"
                                             TextWrapping="Wrap"
                                             Text="{Binding DayOfWorkWeekCollection[3].Duration, Mode=OneWay, StringFormat=\{0\} hrs}"
                                             IsReadOnly="True"
                                             Grid.Column="7"
                                             Grid.Row="7"
                                             HorizontalAlignment="Left"
                                             Margin="0,2"
                                             Width="60"
                                             HorizontalContentAlignment="Right"
                                             BorderBrush="Black"
                                             Visibility="{Binding DayOfWorkWeekCollection[3].HasWork, Converter={StaticResource boolToVisibilityConverter}}" />
                                    <TextBox x:Name="txtFridayDuration"
                                             TextWrapping="Wrap"
                                             Text="{Binding DayOfWorkWeekCollection[4].Duration, Mode=OneWay, StringFormat=\{0\} hrs}"
                                             IsReadOnly="True"
                                             Grid.Column="7"
                                             Grid.Row="8"
                                             HorizontalAlignment="Left"
                                             Margin="0,2"
                                             Width="60"
                                             HorizontalContentAlignment="Right"
                                             BorderBrush="Black"
                                             Visibility="{Binding DayOfWorkWeekCollection[4].HasWork, Converter={StaticResource boolToVisibilityConverter}}" />
                                    <TextBox x:Name="txtSaturdayDuration"
                                             TextWrapping="Wrap"
                                             Text="{Binding DayOfWorkWeekCollection[5].Duration, Mode=OneWay, StringFormat=\{0\} hrs}"
                                             IsReadOnly="True"
                                             Grid.Column="7"
                                             Grid.Row="9"
                                             HorizontalAlignment="Left"
                                             Margin="0,2"
                                             Width="60"
                                             HorizontalContentAlignment="Right"
                                             Visibility="{Binding DayOfWorkWeekCollection[5].HasWork, Converter={StaticResource boolToVisibilityConverter}}" />
                                    <TextBox x:Name="txtSundayDuration"
                                             TextWrapping="Wrap"
                                             IsReadOnly="True"
                                             Text="{Binding DayOfWorkWeekCollection[6].Duration, Mode=OneWay, StringFormat=\{0\} hrs}"
                                             Grid.Column="7"
                                             Grid.Row="10"
                                             HorizontalAlignment="Left"
                                             Margin="0,2"
                                             Width="60"
                                             HorizontalContentAlignment="Right"
                                             Visibility="{Binding DayOfWorkWeekCollection[6].HasWork, Converter={StaticResource boolToVisibilityConverter}}" />
                                    <TextBlock x:Name="txtblDuration"
                                               Foreground="White"
                                               Text="Duration"
                                               TextWrapping="NoWrap"
                                               HorizontalAlignment="Left"
                                               Margin="0"
                                               VerticalAlignment="Center"
                                               Grid.Column="7"
                                               FontWeight="Bold"
                                               Grid.Row="2" />
                                    <Rectangle x:Name="imgMondayAlert"
                                               Margin="65,0,0,0"
                                               StrokeThickness="0"
                                               HorizontalAlignment="Left"
                                               Grid.Row="4"
                                               Grid.Column="9"
                                               Width="15"
                                               Height="15"
                                               Fill="{DynamicResource Alert}"
                                               Visibility="{Binding DayOfWorkWeekCollection[0].HasAlert, Converter={StaticResource boolToVisibilityConverter}}" />
                                    <Rectangle x:Name="imgTuesdayAlert"
                                               Margin="65,0,0,0"
                                               StrokeThickness="0"
                                               HorizontalAlignment="Left"
                                               Grid.Row="5"
                                               Grid.Column="9"
                                               Width="15"
                                               Height="15"
                                               Fill="{DynamicResource Alert}"
                                               Visibility="{Binding DayOfWorkWeekCollection[1].HasAlert, Converter={StaticResource boolToVisibilityConverter}}" />
                                    <Rectangle x:Name="imgWednesdayAlert"
                                               Margin="65,0,0,0"
                                               StrokeThickness="0"
                                               HorizontalAlignment="Left"
                                               Grid.Row="6"
                                               Grid.Column="9"
                                               Width="15"
                                               Height="15"
                                               Fill="{DynamicResource Alert}"
                                               Visibility="{Binding DayOfWorkWeekCollection[2].HasAlert, Converter={StaticResource boolToVisibilityConverter}}" />
                                    <Rectangle x:Name="imgThursdayAlert"
                                               Margin="65,0,0,0"
                                               StrokeThickness="0"
                                               HorizontalAlignment="Left"
                                               Grid.Row="7"
                                               Grid.Column="9"
                                               Width="15"
                                               Height="15"
                                               Fill="{DynamicResource Alert}"
                                               Visibility="{Binding DayOfWorkWeekCollection[3].HasAlert, Converter={StaticResource boolToVisibilityConverter}}" />
                                    <Rectangle x:Name="imgFridayAlert"
                                               Margin="65,0,0,0"
                                               StrokeThickness="0"
                                               HorizontalAlignment="Left"
                                               Grid.Row="8"
                                               Grid.Column="9"
                                               Width="15"
                                               Height="15"
                                               Fill="{DynamicResource Alert}"
                                               Visibility="{Binding DayOfWorkWeekCollection[4].HasAlert, Converter={StaticResource boolToVisibilityConverter}}" />
                                    <Rectangle x:Name="imgSaturdayAlert"
                                               Margin="65,0,0,0"
                                               StrokeThickness="0"
                                               HorizontalAlignment="Left"
                                               Grid.Row="9"
                                               Grid.Column="9"
                                               Width="15"
                                               Height="15"
                                               Fill="{DynamicResource Alert}"
                                               Visibility="{Binding DayOfWorkWeekCollection[5].HasAlert, Converter={StaticResource boolToVisibilityConverter}}" />
                                    <Rectangle x:Name="imgSundayAlert"
                                               Margin="65,0,0,0"
                                               StrokeThickness="0"
                                               HorizontalAlignment="Left"
                                               Grid.Row="10"
                                               Grid.Column="9"
                                               Width="15"
                                               Height="15"
                                               Fill="{DynamicResource Alert}"
                                               Visibility="{Binding DayOfWorkWeekCollection[6].HasAlert, Converter={StaticResource boolToVisibilityConverter}}" />
                                </userControl:GridReadOnlyControl>
                            </DataTemplate>
                        </TabControl.ContentTemplate>
                    </TabControl>
                </Grid>
            </Grid>
        </Border>
        <Rectangle Fill="White"
                   HorizontalAlignment="Stretch"
                   x:Name="Line"
                   VerticalAlignment="Top"
                   Height="1"
                   Grid.Row="1"
                   Margin="2,0,2,0" />
        <StackPanel VerticalAlignment="Center"
                    Height="Auto"
                    x:Name="stkpBtn"
                    Orientation="Horizontal"
                    d:LayoutOverrides="Width, GridBox"
                    HorizontalAlignment="Center"
                    Grid.Row="1">
            <Button x:Name="btnScheduleHistory"
                    HorizontalAlignment="Left"
                    Command="{Binding ViewEmployeeScheduleCommand}"
                    Width="80"
                    Height="28"
                    Visibility="Collapsed">
                <StackPanel HorizontalAlignment="Center"
                            x:Name="stkpBtnScheduleHistory"
                            VerticalAlignment="Center"
                            Orientation="Horizontal">
                    <Rectangle x:Name="imgScheduleHistory"
                               Fill="{DynamicResource EmployeeWorkScheduleList}"
                               Height="16"
                               Width="16" />
                    <TextBlock Margin="5,0,0,0"
                               VerticalAlignment="Center"
                               Text="History"
                               TextWrapping="NoWrap"
                               x:Name="txtblScheduleHistory"
                               Foreground="Black"
                               Style="{DynamicResource ButtonTextBlock}" />
                </StackPanel>
            </Button>
            <Button x:Name="btnClose1"
                    Height="28"
                    Width="80"
                    Margin="10,0,0,0">
                <StackPanel HorizontalAlignment="Center"
                            x:Name="stkpBtnClose"
                            VerticalAlignment="Center"
                            Orientation="Horizontal">
                    <Rectangle x:Name="imgClose"
                               Height="18"
                               Width="18"
                               Fill="{DynamicResource Close}" />
                    <TextBlock Margin="5,0,0,0"
                               x:Name="txtblClose"
                               VerticalAlignment="Center"
                               Text="Close"
                               TextWrapping="NoWrap"
                               Foreground="Black" />
                </StackPanel>
            </Button>
            <!--<Button Height="28"
                            Name="button1"
                            Command="{Binding SaveScheduleCommand}"
                            Width="80">
                        <StackPanel HorizontalAlignment="Center"
                                    Name="stackPanel1"
                                    Orientation="Horizontal"
                                    VerticalAlignment="Center">
                            <Rectangle Fill="{DynamicResource EmployeeWorkScheduleList}"
                                       Height="16"
                                       Name="rectangle1"
                                       Width="16" />
                            <TextBlock Foreground="White"
                                       Margin="5,0,0,0"
                                       Name="textBlock1"
                                       Style="{DynamicResource ButtonTextBlock}"
                                       Text="Save"
                                       TextWrapping="NoWrap"
                                       VerticalAlignment="Center" />
                        </StackPanel>
                    </Button>-->
        </StackPanel>
    </Grid>
</UserControl>
	
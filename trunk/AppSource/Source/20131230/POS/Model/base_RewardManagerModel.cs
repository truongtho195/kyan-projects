//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Linq;
using System.Linq.Expressions;
using CPC.Helper;
using CPC.POS.Database;
using CPC.Toolkit.Base;
using System.Text;
using System.Windows;

namespace CPC.POS.Model
{
    /// <summary>
    /// Model for table base_RewardManager
    /// </summary>
    [Serializable]
    public partial class base_RewardManagerModel : ModelBase, IDataErrorInfo
    {
        #region Constructor

        // Default constructor
        public base_RewardManagerModel()
        {
            this.IsNew = true;
            this.base_RewardManager = new base_RewardManager();
        }

        // Default constructor that set entity to field
        public base_RewardManagerModel(base_RewardManager base_rewardmanager, bool isRaiseProperties = false)
        {
            this.base_RewardManager = base_rewardmanager;
            if (!isRaiseProperties)
                this.ToModel();
            else
                this.ToModelAndRaise();
            this.IsDirty = false;
        }

        #endregion

        #region Entity Properties

        public base_RewardManager base_RewardManager { get; private set; }

        #endregion

        #region Primitive Properties

        protected int _id;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Id</param>
        /// </summary>
        public int Id
        {
            get { return this._id; }
            set
            {
                if (this._id != value)
                {
                    this.IsDirty = true;
                    this._id = value;
                    OnPropertyChanged(() => Id);
                    PropertyChangedCompleted(() => Id);
                }
            }
        }

        protected string _storeCode;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the StoreCode</param>
        /// </summary>
        public string StoreCode
        {
            get { return this._storeCode; }
            set
            {
                if (this._storeCode != value)
                {
                    this.IsDirty = true;
                    this._storeCode = value;
                    OnPropertyChanged(() => StoreCode);
                    PropertyChangedCompleted(() => StoreCode);
                }
            }
        }

        protected string _name;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Name</param>
        /// </summary>
        public string Name
        {
            get { return this._name; }
            set
            {
                if (this._name != value)
                {
                    this.IsDirty = true;
                    this._name = value;
                    OnPropertyChanged(() => Name);
                    PropertyChangedCompleted(() => Name);
                }
            }
        }

        protected short _status;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Status</param>
        /// </summary>
        public short Status
        {
            get { return this._status; }
            set
            {
                if (this._status != value)
                {
                    this.IsDirty = true;
                    this._status = value;
                    OnPropertyChanged(() => Status);
                    PropertyChangedCompleted(() => Status);
                }
            }
        }

        protected System.DateTime _startDate;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the StartDate</param>
        /// </summary>
        public System.DateTime StartDate
        {
            get { return this._startDate; }
            set
            {
                if (this._startDate != value)
                {
                    this.IsDirty = true;
                    this._startDate = value;
                    OnPropertyChanged(() => StartDate);
                    PropertyChangedCompleted(() => StartDate);
                }
            }
        }

        protected Nullable<System.DateTime> _endDate;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the EndDate</param>
        /// </summary>
        public Nullable<System.DateTime> EndDate
        {
            get { return this._endDate; }
            set
            {
                if (this._endDate != value)
                {
                    this.IsDirty = true;
                    this._endDate = value;
                    OnPropertyChanged(() => EndDate);
                    PropertyChangedCompleted(() => EndDate);
                }
            }
        }

        protected bool _isNoEndDay;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the IsNoEndDay</param>
        /// </summary>
        public bool IsNoEndDay
        {
            get { return this._isNoEndDay; }
            set
            {
                if (this._isNoEndDay != value)
                {
                    this.IsDirty = true;
                    this._isNoEndDay = value;
                    OnPropertyChanged(() => IsNoEndDay);
                    PropertyChangedCompleted(() => IsNoEndDay);
                }
            }
        }

        protected short _rewardType;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the RewardType</param>
        /// </summary>
        public short RewardType
        {
            get { return this._rewardType; }
            set
            {
                if (this._rewardType != value)
                {
                    this.IsDirty = true;
                    this._rewardType = value;
                    OnPropertyChanged(() => RewardType);
                    PropertyChangedCompleted(() => RewardType);
                }
            }
        }

        protected decimal _purchaseThreshold;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the PurchaseThreshold</param>
        /// </summary>
        public decimal PurchaseThreshold
        {
            get { return this._purchaseThreshold; }
            set
            {
                if (this._purchaseThreshold != value)
                {
                    this.IsDirty = true;
                    this._purchaseThreshold = value;
                    OnPropertyChanged(() => PurchaseThreshold);
                    PropertyChangedCompleted(() => PurchaseThreshold);
                }
            }
        }

        protected decimal _rewardAmount;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the RewardAmount</param>
        /// </summary>
        public decimal RewardAmount
        {
            get { return this._rewardAmount; }
            set
            {
                if (this._rewardAmount != value)
                {
                    this.IsDirty = true;
                    this._rewardAmount = value;
                    OnPropertyChanged(() => RewardAmount);
                    PropertyChangedCompleted(() => RewardAmount);
                }
            }
        }

        protected int _rewardAmtType;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the RewardAmtType</param>
        /// </summary>
        public int RewardAmtType
        {
            get { return this._rewardAmtType; }
            set
            {
                if (this._rewardAmtType != value)
                {
                    this.IsDirty = true;
                    this._rewardAmtType = value;
                    OnPropertyChanged(() => RewardAmtType);
                    PropertyChangedCompleted(() => RewardAmtType);
                }
            }
        }

        protected int _rewardExpiration;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the RewardExpiration</param>
        /// </summary>
        public int RewardExpiration
        {
            get { return this._rewardExpiration; }
            set
            {
                if (this._rewardExpiration != value)
                {
                    this.IsDirty = true;
                    this._rewardExpiration = value;
                    OnPropertyChanged(() => RewardExpiration);
                    PropertyChangedCompleted(() => RewardExpiration);
                }
            }
        }

        protected decimal _dollarConverter;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the DollarConverter</param>
        /// </summary>
        public decimal DollarConverter
        {
            get { return this._dollarConverter; }
            set
            {
                if (this._dollarConverter != value)
                {
                    this.IsDirty = true;
                    this._dollarConverter = value;
                    OnPropertyChanged(() => DollarConverter);
                    PropertyChangedCompleted(() => DollarConverter);
                }
            }
        }

        protected int _pointConverter;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the PointConverter</param>
        /// </summary>
        public int PointConverter
        {
            get { return this._pointConverter; }
            set
            {
                if (this._pointConverter != value)
                {
                    this.IsDirty = true;
                    this._pointConverter = value;
                    OnPropertyChanged(() => PointConverter);
                    PropertyChangedCompleted(() => PointConverter);
                }
            }
        }

        protected decimal _l1Amount;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the L1Amount</param>
        /// </summary>
        public decimal L1Amount
        {
            get { return this._l1Amount; }
            set
            {
                if (this._l1Amount != value)
                {
                    this.IsDirty = true;
                    this._l1Amount = value;
                    OnPropertyChanged(() => L1Amount);
                    PropertyChangedCompleted(() => L1Amount);
                }
            }
        }

        protected decimal _l1Markup;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the L1Markup</param>
        /// </summary>
        public decimal L1Markup
        {
            get { return this._l1Markup; }
            set
            {
                if (this._l1Markup != value)
                {
                    this.IsDirty = true;
                    this._l1Markup = value;
                    OnPropertyChanged(() => L1Markup);
                    PropertyChangedCompleted(() => L1Markup);
                }
            }
        }

        protected decimal _l2Amount;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the L2Amount</param>
        /// </summary>
        public decimal L2Amount
        {
            get { return this._l2Amount; }
            set
            {
                if (this._l2Amount != value)
                {
                    this.IsDirty = true;
                    this._l2Amount = value;
                    OnPropertyChanged(() => L2Amount);
                    PropertyChangedCompleted(() => L2Amount);
                }
            }
        }

        protected decimal _l2Markup;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the L2Markup</param>
        /// </summary>
        public decimal L2Markup
        {
            get { return this._l2Markup; }
            set
            {
                if (this._l2Markup != value)
                {
                    this.IsDirty = true;
                    this._l2Markup = value;
                    OnPropertyChanged(() => L2Markup);
                    PropertyChangedCompleted(() => L2Markup);
                }
            }
        }

        protected decimal _l3Amount;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the L3Amount</param>
        /// </summary>
        public decimal L3Amount
        {
            get { return this._l3Amount; }
            set
            {
                if (this._l3Amount != value)
                {
                    this.IsDirty = true;
                    this._l3Amount = value;
                    OnPropertyChanged(() => L3Amount);
                    PropertyChangedCompleted(() => L3Amount);
                }
            }
        }

        protected decimal _l3Markup;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the L3Markup</param>
        /// </summary>
        public decimal L3Markup
        {
            get { return this._l3Markup; }
            set
            {
                if (this._l3Markup != value)
                {
                    this.IsDirty = true;
                    this._l3Markup = value;
                    OnPropertyChanged(() => L3Markup);
                    PropertyChangedCompleted(() => L3Markup);
                }
            }
        }

        protected decimal _l4Amount;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the L4Amount</param>
        /// </summary>
        public decimal L4Amount
        {
            get { return this._l4Amount; }
            set
            {
                if (this._l4Amount != value)
                {
                    this.IsDirty = true;
                    this._l4Amount = value;
                    OnPropertyChanged(() => L4Amount);
                    PropertyChangedCompleted(() => L4Amount);
                }
            }
        }

        protected decimal _l4Markup;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the L4Markup</param>
        /// </summary>
        public decimal L4Markup
        {
            get { return this._l4Markup; }
            set
            {
                if (this._l4Markup != value)
                {
                    this.IsDirty = true;
                    this._l4Markup = value;
                    OnPropertyChanged(() => L4Markup);
                    PropertyChangedCompleted(() => L4Markup);
                }
            }
        }

        protected decimal _l5Amount;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the L5Amount</param>
        /// </summary>
        public decimal L5Amount
        {
            get { return this._l5Amount; }
            set
            {
                if (this._l5Amount != value)
                {
                    this.IsDirty = true;
                    this._l5Amount = value;
                    OnPropertyChanged(() => L5Amount);
                    PropertyChangedCompleted(() => L5Amount);
                }
            }
        }

        protected decimal _l5Markup;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the L5Markup</param>
        /// </summary>
        public decimal L5Markup
        {
            get { return this._l5Markup; }
            set
            {
                if (this._l5Markup != value)
                {
                    this.IsDirty = true;
                    this._l5Markup = value;
                    OnPropertyChanged(() => L5Markup);
                    PropertyChangedCompleted(() => L5Markup);
                }
            }
        }

        protected decimal _l6Amount;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the L6Amount</param>
        /// </summary>
        public decimal L6Amount
        {
            get { return this._l6Amount; }
            set
            {
                if (this._l6Amount != value)
                {
                    this.IsDirty = true;
                    this._l6Amount = value;
                    OnPropertyChanged(() => L6Amount);
                    PropertyChangedCompleted(() => L6Amount);
                }
            }
        }

        protected decimal _l6Markup;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the L6Markup</param>
        /// </summary>
        public decimal L6Markup
        {
            get { return this._l6Markup; }
            set
            {
                if (this._l6Markup != value)
                {
                    this.IsDirty = true;
                    this._l6Markup = value;
                    OnPropertyChanged(() => L6Markup);
                    PropertyChangedCompleted(() => L6Markup);
                }
            }
        }

        protected short _cutOffType;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the CutOffType</param>
        /// </summary>
        public short CutOffType
        {
            get { return this._cutOffType; }
            set
            {
                if (this._cutOffType != value)
                {
                    this.IsDirty = true;
                    this._cutOffType = value;
                    OnPropertyChanged(() => CutOffType);
                    PropertyChangedCompleted(() => CutOffType);
                }
            }
        }

        protected short _cutOffScheduleType;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the CutOffScheduleType</param>
        /// </summary>
        public short CutOffScheduleType
        {
            get { return this._cutOffScheduleType; }
            set
            {
                if (this._cutOffScheduleType != value)
                {
                    this.IsDirty = true;
                    this._cutOffScheduleType = value;
                    OnPropertyChanged(() => CutOffScheduleType);
                    PropertyChangedCompleted(() => CutOffScheduleType);
                }
            }
        }

        protected decimal _cutOffCash;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the CutOffCash</param>
        /// </summary>
        public decimal CutOffCash
        {
            get { return this._cutOffCash; }
            set
            {
                if (this._cutOffCash != value)
                {
                    this.IsDirty = true;
                    this._cutOffCash = value;
                    OnPropertyChanged(() => CutOffCash);
                    PropertyChangedCompleted(() => CutOffCash);
                }
            }
        }

        protected int _cutOffPoint;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the CutOffPoint</param>
        /// </summary>
        public int CutOffPoint
        {
            get { return this._cutOffPoint; }
            set
            {
                if (this._cutOffPoint != value)
                {
                    this.IsDirty = true;
                    this._cutOffPoint = value;
                    OnPropertyChanged(() => CutOffPoint);
                    PropertyChangedCompleted(() => CutOffPoint);
                }
            }
        }

        protected short _weeklyNumber;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the WeeklyNumber</param>
        /// </summary>
        public short WeeklyNumber
        {
            get { return this._weeklyNumber; }
            set
            {
                if (this._weeklyNumber != value)
                {
                    this.IsDirty = true;
                    this._weeklyNumber = value;
                    OnPropertyChanged(() => WeeklyNumber);
                    PropertyChangedCompleted(() => WeeklyNumber);
                }
            }
        }

        protected short _weeklyOnDay;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the WeeklyOnDay</param>
        /// </summary>
        public short WeeklyOnDay
        {
            get { return this._weeklyOnDay; }
            set
            {
                if (this._weeklyOnDay != value)
                {
                    this.IsDirty = true;
                    this._weeklyOnDay = value;
                    OnPropertyChanged(() => WeeklyOnDay);
                    PropertyChangedCompleted(() => WeeklyOnDay);
                }
            }
        }

        protected short _monthlyDay;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the MonthlyDay</param>
        /// </summary>
        public short MonthlyDay
        {
            get { return this._monthlyDay; }
            set
            {
                if (this._monthlyDay != value)
                {
                    this.IsDirty = true;
                    this._monthlyDay = value;
                    OnPropertyChanged(() => MonthlyDay);
                    PropertyChangedCompleted(() => MonthlyDay);
                }
            }
        }

        protected short _monthlyEveryMonth;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the MonthlyEveryMonth</param>
        /// </summary>
        public short MonthlyEveryMonth
        {
            get { return this._monthlyEveryMonth; }
            set
            {
                if (this._monthlyEveryMonth != value)
                {
                    this.IsDirty = true;
                    this._monthlyEveryMonth = value;
                    OnPropertyChanged(() => MonthlyEveryMonth);
                    PropertyChangedCompleted(() => MonthlyEveryMonth);
                }
            }
        }

        protected short _yearlyOnDay;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the YearlyOnDay</param>
        /// </summary>
        public short YearlyOnDay
        {
            get { return this._yearlyOnDay; }
            set
            {
                if (this._yearlyOnDay != value)
                {
                    this.IsDirty = true;
                    this._yearlyOnDay = value;
                    OnPropertyChanged(() => YearlyOnDay);
                    PropertyChangedCompleted(() => YearlyOnDay);
                }
            }
        }

        protected short _yearlyDateOnDay;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the YearlyDateOnDay</param>
        /// </summary>
        public short YearlyDateOnDay
        {
            get { return this._yearlyDateOnDay; }
            set
            {
                if (this._yearlyDateOnDay != value)
                {
                    this.IsDirty = true;
                    this._yearlyDateOnDay = value;
                    OnPropertyChanged(() => YearlyDateOnDay);
                    PropertyChangedCompleted(() => YearlyDateOnDay);
                }
            }
        }

        protected short _mOption;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the MOption</param>
        /// </summary>
        public short MOption
        {
            get { return this._mOption; }
            set
            {
                if (this._mOption != value)
                {
                    this.IsDirty = true;
                    this._mOption = value;
                    OnPropertyChanged(() => MOption);
                    PropertyChangedCompleted(() => MOption);
                }
            }
        }

        protected short _mSequence;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the MSequence</param>
        /// </summary>
        public short MSequence
        {
            get { return this._mSequence; }
            set
            {
                if (this._mSequence != value)
                {
                    this.IsDirty = true;
                    this._mSequence = value;
                    OnPropertyChanged(() => MSequence);
                    PropertyChangedCompleted(() => MSequence);
                }
            }
        }

        protected short _mSequenceOnDay;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the MSequenceOnDay</param>
        /// </summary>
        public short MSequenceOnDay
        {
            get { return this._mSequenceOnDay; }
            set
            {
                if (this._mSequenceOnDay != value)
                {
                    this.IsDirty = true;
                    this._mSequenceOnDay = value;
                    OnPropertyChanged(() => MSequenceOnDay);
                    PropertyChangedCompleted(() => MSequenceOnDay);
                }
            }
        }

        protected short _mSequenceOnMonth;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the MSequenceOnMonth</param>
        /// </summary>
        public short MSequenceOnMonth
        {
            get { return this._mSequenceOnMonth; }
            set
            {
                if (this._mSequenceOnMonth != value)
                {
                    this.IsDirty = true;
                    this._mSequenceOnMonth = value;
                    OnPropertyChanged(() => MSequenceOnMonth);
                    PropertyChangedCompleted(() => MSequenceOnMonth);
                }
            }
        }

        protected short _yOption;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the YOption</param>
        /// </summary>
        public short YOption
        {
            get { return this._yOption; }
            set
            {
                if (this._yOption != value)
                {
                    this.IsDirty = true;
                    this._yOption = value;
                    OnPropertyChanged(() => YOption);
                    PropertyChangedCompleted(() => YOption);
                }
            }
        }

        protected short _ySequence;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the YSequence</param>
        /// </summary>
        public short YSequence
        {
            get { return this._ySequence; }
            set
            {
                if (this._ySequence != value)
                {
                    this.IsDirty = true;
                    this._ySequence = value;
                    OnPropertyChanged(() => YSequence);
                    PropertyChangedCompleted(() => YSequence);
                }
            }
        }

        protected short _ySequenceOnDay;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the YSequenceOnDay</param>
        /// </summary>
        public short YSequenceOnDay
        {
            get { return this._ySequenceOnDay; }
            set
            {
                if (this._ySequenceOnDay != value)
                {
                    this.IsDirty = true;
                    this._ySequenceOnDay = value;
                    OnPropertyChanged(() => YSequenceOnDay);
                    PropertyChangedCompleted(() => YSequenceOnDay);
                }
            }
        }

        protected short _ySequenceOnMonth;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the YSequenceOnMonth</param>
        /// </summary>
        public short YSequenceOnMonth
        {
            get { return this._ySequenceOnMonth; }
            set
            {
                if (this._ySequenceOnMonth != value)
                {
                    this.IsDirty = true;
                    this._ySequenceOnMonth = value;
                    OnPropertyChanged(() => YSequenceOnMonth);
                    PropertyChangedCompleted(() => YSequenceOnMonth);
                }
            }
        }

        protected bool _isAutoEnroll;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the IsAutoEnroll</param>
        /// </summary>
        public bool IsAutoEnroll
        {
            get { return this._isAutoEnroll; }
            set
            {
                if (this._isAutoEnroll != value)
                {
                    this.IsDirty = true;
                    this._isAutoEnroll = value;
                    OnPropertyChanged(() => IsAutoEnroll);
                    PropertyChangedCompleted(() => IsAutoEnroll);
                }
            }
        }

        protected bool _isPromptEnroll;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the IsPromptEnroll</param>
        /// </summary>
        public bool IsPromptEnroll
        {
            get { return this._isPromptEnroll; }
            set
            {
                if (this._isPromptEnroll != value)
                {
                    this.IsDirty = true;
                    this._isPromptEnroll = value;
                    OnPropertyChanged(() => IsPromptEnroll);
                    PropertyChangedCompleted(() => IsPromptEnroll);
                }
            }
        }

        protected bool _isInformCashier;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the IsInformCashier</param>
        /// </summary>
        public bool IsInformCashier
        {
            get { return this._isInformCashier; }
            set
            {
                if (this._isInformCashier != value)
                {
                    this.IsDirty = true;
                    this._isInformCashier = value;
                    OnPropertyChanged(() => IsInformCashier);
                    PropertyChangedCompleted(() => IsInformCashier);
                }
            }
        }

        protected bool _isRedemptionLimit;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the IsRedemptionLimit</param>
        /// </summary>
        public bool IsRedemptionLimit
        {
            get { return this._isRedemptionLimit; }
            set
            {
                if (this._isRedemptionLimit != value)
                {
                    this.IsDirty = true;
                    this._isRedemptionLimit = value;
                    OnPropertyChanged(() => IsRedemptionLimit);
                    PropertyChangedCompleted(() => IsRedemptionLimit);
                }
            }
        }

        protected decimal _redemptionLimitAmount;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the RedemptionLimitAmount</param>
        /// </summary>
        public decimal RedemptionLimitAmount
        {
            get { return this._redemptionLimitAmount; }
            set
            {
                if (this._redemptionLimitAmount != value)
                {
                    this.IsDirty = true;
                    this._redemptionLimitAmount = value;
                    OnPropertyChanged(() => RedemptionLimitAmount);
                    PropertyChangedCompleted(() => RedemptionLimitAmount);
                }
            }
        }

        protected bool _isBlockRedemption;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the IsBlockRedemption</param>
        /// </summary>
        public bool IsBlockRedemption
        {
            get { return this._isBlockRedemption; }
            set
            {
                if (this._isBlockRedemption != value)
                {
                    this.IsDirty = true;
                    this._isBlockRedemption = value;
                    OnPropertyChanged(() => IsBlockRedemption);
                    PropertyChangedCompleted(() => IsBlockRedemption);
                }
            }
        }

        protected int _redemptionAfterDays;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the RedemptionAfterDays</param>
        /// </summary>
        public int RedemptionAfterDays
        {
            get { return this._redemptionAfterDays; }
            set
            {
                if (this._redemptionAfterDays != value)
                {
                    this.IsDirty = true;
                    this._redemptionAfterDays = value;
                    OnPropertyChanged(() => RedemptionAfterDays);
                    PropertyChangedCompleted(() => RedemptionAfterDays);
                }
            }
        }

        protected bool _isBlockPurchaseRedeem;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the IsBlockPurchaseRedeem</param>
        /// </summary>
        public bool IsBlockPurchaseRedeem
        {
            get { return this._isBlockPurchaseRedeem; }
            set
            {
                if (this._isBlockPurchaseRedeem != value)
                {
                    this.IsDirty = true;
                    this._isBlockPurchaseRedeem = value;
                    OnPropertyChanged(() => IsBlockPurchaseRedeem);
                    PropertyChangedCompleted(() => IsBlockPurchaseRedeem);
                }
            }
        }

        protected bool _isTrackingPeriod;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the IsTrackingPeriod</param>
        /// </summary>
        public bool IsTrackingPeriod
        {
            get { return this._isTrackingPeriod; }
            set
            {
                if (this._isTrackingPeriod != value)
                {
                    this.IsDirty = true;
                    this._isTrackingPeriod = value;
                    OnPropertyChanged(() => IsTrackingPeriod);
                    PropertyChangedCompleted(() => IsTrackingPeriod);
                }
            }
        }

        protected decimal _totalRewardRedeemed;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the TotalRewardRedeemed</param>
        /// </summary>
        public decimal TotalRewardRedeemed
        {
            get { return this._totalRewardRedeemed; }
            set
            {
                if (this._totalRewardRedeemed != value)
                {
                    this.IsDirty = true;
                    this._totalRewardRedeemed = value;
                    OnPropertyChanged(() => TotalRewardRedeemed);
                    PropertyChangedCompleted(() => TotalRewardRedeemed);
                }
            }
        }

        protected string _reasonReActive;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the ReasonReActive</param>
        /// </summary>
        public string ReasonReActive
        {
            get { return this._reasonReActive; }
            set
            {
                if (this._reasonReActive != value)
                {
                    this.IsDirty = true;
                    this._reasonReActive = value;
                    OnPropertyChanged(() => ReasonReActive);
                    PropertyChangedCompleted(() => ReasonReActive);
                }
            }
        }

        protected Nullable<System.DateTime> _dateCreated;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the DateCreated</param>
        /// </summary>
        public Nullable<System.DateTime> DateCreated
        {
            get { return this._dateCreated; }
            set
            {
                if (this._dateCreated != value)
                {
                    this.IsDirty = true;
                    this._dateCreated = value;
                    OnPropertyChanged(() => DateCreated);
                    PropertyChangedCompleted(() => DateCreated);
                }
            }
        }

        protected bool _isIncrementalWithNoCutOff;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the IsIncrementalWithNoCutOff</param>
        /// </summary>
        public bool IsIncrementalWithNoCutOff
        {
            get { return this._isIncrementalWithNoCutOff; }
            set
            {
                if (this._isIncrementalWithNoCutOff != value)
                {
                    this.IsDirty = true;
                    this._isIncrementalWithNoCutOff = value;
                    OnPropertyChanged(() => IsIncrementalWithNoCutOff);
                    PropertyChangedCompleted(() => IsIncrementalWithNoCutOff);
                }
            }
        }

        protected int _currentDayCutOff;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the CurrentDayCutOff</param>
        /// </summary>
        public int CurrentDayCutOff
        {
            get { return this._currentDayCutOff; }
            set
            {
                if (this._currentDayCutOff != value)
                {
                    this.IsDirty = true;
                    this._currentDayCutOff = value;
                    OnPropertyChanged(() => CurrentDayCutOff);
                    PropertyChangedCompleted(() => CurrentDayCutOff);
                }
            }
        }

        #endregion

        #region Public Methods

        /// <summary>
        /// <param>Public Method</param>
        /// Method for set IsNew & IsDirty = false;
        /// </summary>
        public void EndUpdate()
        {
            this.IsNew = false;
            this.IsDirty = false;
        }

        /// <summary>
        /// Public Method
        /// <param>Method for set PropertyModel to Entity</param>
        /// </summary>
        public void ToEntity()
        {
            if (IsNew)
                this.base_RewardManager.Id = this.Id;
            if (this.StoreCode != null)
                this.base_RewardManager.StoreCode = this.StoreCode.Trim();
            if (this.Name != null)
                this.base_RewardManager.Name = this.Name.Trim();
            this.base_RewardManager.Status = this.Status;
            this.base_RewardManager.StartDate = this.StartDate;
            this.base_RewardManager.EndDate = this.EndDate;
            this.base_RewardManager.IsNoEndDay = this.IsNoEndDay;
            this.base_RewardManager.RewardType = this.RewardType;
            this.base_RewardManager.PurchaseThreshold = this.PurchaseThreshold;
            this.base_RewardManager.RewardAmount = this.RewardAmount;
            this.base_RewardManager.RewardAmtType = this.RewardAmtType;
            this.base_RewardManager.RewardExpiration = this.RewardExpiration;
            this.base_RewardManager.DollarConverter = this.DollarConverter;
            this.base_RewardManager.PointConverter = this.PointConverter;
            this.base_RewardManager.L1Amount = this.L1Amount;
            this.base_RewardManager.L1Markup = this.L1Markup;
            this.base_RewardManager.L2Amount = this.L2Amount;
            this.base_RewardManager.L2Markup = this.L2Markup;
            this.base_RewardManager.L3Amount = this.L3Amount;
            this.base_RewardManager.L3Markup = this.L3Markup;
            this.base_RewardManager.L4Amount = this.L4Amount;
            this.base_RewardManager.L4Markup = this.L4Markup;
            this.base_RewardManager.L5Amount = this.L5Amount;
            this.base_RewardManager.L5Markup = this.L5Markup;
            this.base_RewardManager.L6Amount = this.L6Amount;
            this.base_RewardManager.L6Markup = this.L6Markup;
            this.base_RewardManager.CutOffType = this.CutOffType;
            this.base_RewardManager.CutOffScheduleType = this.CutOffScheduleType;
            this.base_RewardManager.CutOffCash = this.CutOffCash;
            this.base_RewardManager.CutOffPoint = this.CutOffPoint;
            this.base_RewardManager.WeeklyNumber = this.WeeklyNumber;
            this.base_RewardManager.WeeklyOnDay = this.WeeklyOnDay;
            this.base_RewardManager.MonthlyDay = this.MonthlyDay;
            this.base_RewardManager.MonthlyEveryMonth = this.MonthlyEveryMonth;
            this.base_RewardManager.YearlyOnDay = this.YearlyOnDay;
            this.base_RewardManager.YearlyDateOnDay = this.YearlyDateOnDay;
            this.base_RewardManager.MOption = this.MOption;
            this.base_RewardManager.MSequence = this.MSequence;
            this.base_RewardManager.MSequenceOnDay = this.MSequenceOnDay;
            this.base_RewardManager.MSequenceOnMonth = this.MSequenceOnMonth;
            this.base_RewardManager.YOption = this.YOption;
            this.base_RewardManager.YSequence = this.YSequence;
            this.base_RewardManager.YSequenceOnDay = this.YSequenceOnDay;
            this.base_RewardManager.YSequenceOnMonth = this.YSequenceOnMonth;
            this.base_RewardManager.IsAutoEnroll = this.IsAutoEnroll;
            this.base_RewardManager.IsPromptEnroll = this.IsPromptEnroll;
            this.base_RewardManager.IsInformCashier = this.IsInformCashier;
            this.base_RewardManager.IsRedemptionLimit = this.IsRedemptionLimit;
            this.base_RewardManager.RedemptionLimitAmount = this.RedemptionLimitAmount;
            this.base_RewardManager.IsBlockRedemption = this.IsBlockRedemption;
            this.base_RewardManager.RedemptionAfterDays = this.RedemptionAfterDays;
            this.base_RewardManager.IsBlockPurchaseRedeem = this.IsBlockPurchaseRedeem;
            this.base_RewardManager.IsTrackingPeriod = this.IsTrackingPeriod;
            this.base_RewardManager.TotalRewardRedeemed = this.TotalRewardRedeemed;
            if (this.ReasonReActive != null)
                this.base_RewardManager.ReasonReActive = this.ReasonReActive.Trim();
            this.base_RewardManager.DateCreated = this.DateCreated;
            this.base_RewardManager.IsIncrementalWithNoCutOff = this.IsIncrementalWithNoCutOff;
            this.base_RewardManager.CurrentDayCutOff = this.CurrentDayCutOff;
        }

        /// <summary>
        /// Public Method
        /// <param>Method for set Entity to PropertyModel</param>
        /// </summary
        public void ToModel()
        {
            this._id = this.base_RewardManager.Id;
            this._storeCode = this.base_RewardManager.StoreCode;
            this._name = this.base_RewardManager.Name;
            this._status = this.base_RewardManager.Status;
            this._startDate = this.base_RewardManager.StartDate;
            this._endDate = this.base_RewardManager.EndDate;
            this._isNoEndDay = this.base_RewardManager.IsNoEndDay;
            this._rewardType = this.base_RewardManager.RewardType;
            this._purchaseThreshold = this.base_RewardManager.PurchaseThreshold;
            this._rewardAmount = this.base_RewardManager.RewardAmount;
            this._rewardAmtType = this.base_RewardManager.RewardAmtType;
            this._rewardExpiration = this.base_RewardManager.RewardExpiration;
            this._dollarConverter = this.base_RewardManager.DollarConverter;
            this._pointConverter = this.base_RewardManager.PointConverter;
            this._l1Amount = this.base_RewardManager.L1Amount;
            this._l1Markup = this.base_RewardManager.L1Markup;
            this._l2Amount = this.base_RewardManager.L2Amount;
            this._l2Markup = this.base_RewardManager.L2Markup;
            this._l3Amount = this.base_RewardManager.L3Amount;
            this._l3Markup = this.base_RewardManager.L3Markup;
            this._l4Amount = this.base_RewardManager.L4Amount;
            this._l4Markup = this.base_RewardManager.L4Markup;
            this._l5Amount = this.base_RewardManager.L5Amount;
            this._l5Markup = this.base_RewardManager.L5Markup;
            this._l6Amount = this.base_RewardManager.L6Amount;
            this._l6Markup = this.base_RewardManager.L6Markup;
            this._cutOffType = this.base_RewardManager.CutOffType;
            this._cutOffScheduleType = this.base_RewardManager.CutOffScheduleType;
            this._cutOffCash = this.base_RewardManager.CutOffCash;
            this._cutOffPoint = this.base_RewardManager.CutOffPoint;
            this._weeklyNumber = this.base_RewardManager.WeeklyNumber;
            this._weeklyOnDay = this.base_RewardManager.WeeklyOnDay;
            this._monthlyDay = this.base_RewardManager.MonthlyDay;
            this._monthlyEveryMonth = this.base_RewardManager.MonthlyEveryMonth;
            this._yearlyOnDay = this.base_RewardManager.YearlyOnDay;
            this._yearlyDateOnDay = this.base_RewardManager.YearlyDateOnDay;
            this._mOption = this.base_RewardManager.MOption;
            this._mSequence = this.base_RewardManager.MSequence;
            this._mSequenceOnDay = this.base_RewardManager.MSequenceOnDay;
            this._mSequenceOnMonth = this.base_RewardManager.MSequenceOnMonth;
            this._yOption = this.base_RewardManager.YOption;
            this._ySequence = this.base_RewardManager.YSequence;
            this._ySequenceOnDay = this.base_RewardManager.YSequenceOnDay;
            this._ySequenceOnMonth = this.base_RewardManager.YSequenceOnMonth;
            this._isAutoEnroll = this.base_RewardManager.IsAutoEnroll;
            this._isPromptEnroll = this.base_RewardManager.IsPromptEnroll;
            this._isInformCashier = this.base_RewardManager.IsInformCashier;
            this._isRedemptionLimit = this.base_RewardManager.IsRedemptionLimit;
            this._redemptionLimitAmount = this.base_RewardManager.RedemptionLimitAmount;
            this._isBlockRedemption = this.base_RewardManager.IsBlockRedemption;
            this._redemptionAfterDays = this.base_RewardManager.RedemptionAfterDays;
            this._isBlockPurchaseRedeem = this.base_RewardManager.IsBlockPurchaseRedeem;
            this._isTrackingPeriod = this.base_RewardManager.IsTrackingPeriod;
            this._totalRewardRedeemed = this.base_RewardManager.TotalRewardRedeemed;
            this._reasonReActive = this.base_RewardManager.ReasonReActive;
            this._dateCreated = this.base_RewardManager.DateCreated;
            this._isIncrementalWithNoCutOff = this.base_RewardManager.IsIncrementalWithNoCutOff;
            this._currentDayCutOff = this.base_RewardManager.CurrentDayCutOff;
        }

        /// <summary>
        /// Public Method
        /// <param>Method for set Entity to PropertyModel</param>
        /// </summary
        public void ToModelAndRaise()
        {
            this.Id = this.base_RewardManager.Id;
            this.StoreCode = this.base_RewardManager.StoreCode;
            this.Name = this.base_RewardManager.Name;
            this.Status = this.base_RewardManager.Status;
            this.StartDate = this.base_RewardManager.StartDate;
            this.EndDate = this.base_RewardManager.EndDate;
            this.IsNoEndDay = this.base_RewardManager.IsNoEndDay;
            this.RewardType = this.base_RewardManager.RewardType;
            this.PurchaseThreshold = this.base_RewardManager.PurchaseThreshold;
            this.RewardAmount = this.base_RewardManager.RewardAmount;
            this.RewardAmtType = this.base_RewardManager.RewardAmtType;
            this.RewardExpiration = this.base_RewardManager.RewardExpiration;
            this.DollarConverter = this.base_RewardManager.DollarConverter;
            this.PointConverter = this.base_RewardManager.PointConverter;
            this.L1Amount = this.base_RewardManager.L1Amount;
            this.L1Markup = this.base_RewardManager.L1Markup;
            this.L2Amount = this.base_RewardManager.L2Amount;
            this.L2Markup = this.base_RewardManager.L2Markup;
            this.L3Amount = this.base_RewardManager.L3Amount;
            this.L3Markup = this.base_RewardManager.L3Markup;
            this.L4Amount = this.base_RewardManager.L4Amount;
            this.L4Markup = this.base_RewardManager.L4Markup;
            this.L5Amount = this.base_RewardManager.L5Amount;
            this.L5Markup = this.base_RewardManager.L5Markup;
            this.L6Amount = this.base_RewardManager.L6Amount;
            this.L6Markup = this.base_RewardManager.L6Markup;
            this.CutOffType = this.base_RewardManager.CutOffType;
            this.CutOffScheduleType = this.base_RewardManager.CutOffScheduleType;
            this.CutOffCash = this.base_RewardManager.CutOffCash;
            this.CutOffPoint = this.base_RewardManager.CutOffPoint;
            this.WeeklyNumber = this.base_RewardManager.WeeklyNumber;
            this.WeeklyOnDay = this.base_RewardManager.WeeklyOnDay;
            this.MonthlyDay = this.base_RewardManager.MonthlyDay;
            this.MonthlyEveryMonth = this.base_RewardManager.MonthlyEveryMonth;
            this.YearlyOnDay = this.base_RewardManager.YearlyOnDay;
            this.YearlyDateOnDay = this.base_RewardManager.YearlyDateOnDay;
            this.MOption = this.base_RewardManager.MOption;
            this.MSequence = this.base_RewardManager.MSequence;
            this.MSequenceOnDay = this.base_RewardManager.MSequenceOnDay;
            this.MSequenceOnMonth = this.base_RewardManager.MSequenceOnMonth;
            this.YOption = this.base_RewardManager.YOption;
            this.YSequence = this.base_RewardManager.YSequence;
            this.YSequenceOnDay = this.base_RewardManager.YSequenceOnDay;
            this.YSequenceOnMonth = this.base_RewardManager.YSequenceOnMonth;
            this.IsAutoEnroll = this.base_RewardManager.IsAutoEnroll;
            this.IsPromptEnroll = this.base_RewardManager.IsPromptEnroll;
            this.IsInformCashier = this.base_RewardManager.IsInformCashier;
            this.IsRedemptionLimit = this.base_RewardManager.IsRedemptionLimit;
            this.RedemptionLimitAmount = this.base_RewardManager.RedemptionLimitAmount;
            this.IsBlockRedemption = this.base_RewardManager.IsBlockRedemption;
            this.RedemptionAfterDays = this.base_RewardManager.RedemptionAfterDays;
            this.IsBlockPurchaseRedeem = this.base_RewardManager.IsBlockPurchaseRedeem;
            this.IsTrackingPeriod = this.base_RewardManager.IsTrackingPeriod;
            this.TotalRewardRedeemed = this.base_RewardManager.TotalRewardRedeemed;
            this.ReasonReActive = this.base_RewardManager.ReasonReActive;
            this.DateCreated = this.base_RewardManager.DateCreated;
            this.IsIncrementalWithNoCutOff = this.base_RewardManager.IsIncrementalWithNoCutOff;
            this.CurrentDayCutOff = this.base_RewardManager.CurrentDayCutOff;
        }

        #endregion

        #region Custom Code

        #region Properties

        #region CutOffPointType
        protected int _cutOffPointType;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the CutOffPointType</param>
        /// </summary>
        public int CutOffPointType
        {
            get
            {
                return this._cutOffPointType;
            }
            set
            {
                if (this._cutOffPointType != value)
                {
                    this.IsDirty = true;
                    this._cutOffPointType = value;
                    OnPropertyChanged(() => CutOffPointType);
                }
            }
        }

        #endregion

        #region CashVisibility
        protected Visibility _cashVisibility;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the CashVisibility</param>
        /// </summary>
        public Visibility CashVisibility
        {
            get
            {
                return this._cashVisibility;
            }
            set
            {
                if (this._cashVisibility != value)
                {
                    this._cashVisibility = value;
                    OnPropertyChanged(() => CashVisibility);
                }
            }
        }
        #endregion

        #region PointVisibility
        protected Visibility _pointVisibility;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the CashVisibility</param>
        /// </summary>
        public Visibility PointVisibility
        {
            get
            {
                return this._pointVisibility;
            }
            set
            {
                if (this._pointVisibility != value)
                {
                    this._pointVisibility = value;
                    OnPropertyChanged(() => PointVisibility);
                }
            }
        }
        #endregion

        #region RewardProgramText
        //private string _rewardProgramText;
        /// <summary>
        /// Gets or sets the RewardProgramText.
        /// </summary>
        public string RewardProgramText
        {
            get
            {
                if (this.RewardAmtType.Equals((int)CPC.POS.RewardType.Money))
                    return string.Format(Define.ConverterCulture, Define.CurrencyFormat, this.RewardAmount);
                return string.Format("{0} %", this.RewardAmount);
            }
        }
        #endregion

        #region RewardInfo
        private string _rewardInfo;
        /// <summary>
        /// Gets or sets the PropertyName.
        /// </summary>
        public string RewardInfo
        {
            get
            {
                return _rewardInfo;
            }
            set
            {
                if (_rewardInfo != value)
                {
                    _rewardInfo = value;
                    OnPropertyChanged(() => RewardInfo);
                }
            }
        }
        #endregion

        #region IsEnabledEnadDate
        protected bool _isEnabledEnadDate;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the IsEnabledEnadDate</param>
        /// </summary>
        public bool IsEnabledEnadDate
        {
            get
            {
                return this._isEnabledEnadDate;
            }
            set
            {
                if (this._isEnabledEnadDate != value)
                {
                    this.IsDirty = true;
                    this._isEnabledEnadDate = value;
                    OnPropertyChanged(() => IsEnabledEnadDate);
                }
            }
        }
        #endregion

        #region CutOffTypeSelected

        public ComboItem CutOffTypeSelected
        {
            get
            {
                return Common.CutOffTypes.FirstOrDefault(x => x.Value == _cutOffType);

            }
        }

        #endregion

        #region RewardExpirationSelected

        public ComboItem RewardExpirationSelected
        {
            get
            {
                return Common.RewardExpirationTypes.FirstOrDefault(x => x.Value == _rewardExpiration);
            }
        }

        #endregion

        #endregion

        #region Methods

        public string SetRewardInfo()
        {

            StringBuilder sb = new StringBuilder();
            if (this.RewardAmtType.Equals((int)CPC.POS.RewardType.Money))
                sb.Append(string.Format(Define.ConverterCulture, Define.CurrencyFormat, this.RewardAmount));
            else if (this.RewardAmtType.Equals((int)CPC.POS.RewardType.Point))
                sb.AppendFormat("{0} pt", this.RewardAmount);
            else
                sb.AppendFormat("{0} %", this.RewardAmount);

            sb.Append(" ");
            sb.AppendFormat(Language.GetMsg("CUS_Text_OffRewardAreEarnedForEvery") + " {0}", string.Format(Define.ConverterCulture, Define.CurrencyFormat, PurchaseThreshold));
            sb.Append(" ");

            if (IsTrackingPeriod)
            {
                sb.Append(Language.GetMsg("Text_From").ToLower());
                sb.Append(" ");
                sb.Append(this.StartDate.ToString(Define.DateFormat));
                if (!IsNoEndDay)
                {
                    sb.Append(" ");
                    sb.Append(Language.GetMsg("Text_To").ToLower());
                    sb.Append(" ");
                    sb.Append(this.EndDate.Value.ToString(Define.DateFormat));
                }
            }
            return sb.ToString();
        }

        public override string ToString()
        {
            return SetRewardInfo();
        }
        #endregion

        #region PropertyChanged
        protected override void PropertyChangedCompleted(string propertyName)
        {
            switch (propertyName)
            {
                #region Change properties.
                case "StartDate":
                    // To change property EndDate.
                    OnPropertyChanged(() => EndDate);
                    break;
                case "EndDate":
                    // To change property StartDate.
                    OnPropertyChanged(() => StartDate);
                    break;
                case "IsNoEndDay":
                    // To change property StartDate.
                    OnPropertyChanged(() => EndDate);
                    break;
                case "IsTrackingPeriod":
                    // To change property StartDate.
                    OnPropertyChanged(() => StartDate);
                    OnPropertyChanged(() => EndDate);
                    break;
                case "RewardAmount":
                case "RewardAmtType":
                    OnPropertyChanged(() => RewardProgramText);
                    break;

                #endregion
            }
        }
        #endregion
        #endregion

        #region IDataErrorInfo Members
        protected HashSet<string> _extensionErrors = new HashSet<string>();
        /// <summary>
        /// <para> Gets or sets the ExtensionErrors </para>
        /// </summary>
        public HashSet<string> ExtensionErrors
        {
            get
            {
                return _extensionErrors;
            }
            set
            {
                if (_extensionErrors != value)
                {
                    _extensionErrors = value;
                    OnPropertyChanged(() => ExtensionErrors);
                }
            }
        }
        public string Error
        {
            get
            {
                throw new NotImplementedException();
            }
        }

        public string this[string columnName]
        {
            get
            {
                string message = string.Empty;
                this.ExtensionErrors.Remove(columnName);
                switch (columnName)
                {

                    case "StoreCode":
                        break;
                    case "Name":
                        if (string.IsNullOrEmpty(this.Name))
                            message = "Name is required";
                        break;
                    case "Status":
                        break;
                    case "StartDate":
                        break;
                    case "EndDate":
                        if (!this.IsNoEndDay || this.CutOffType == (int)CPC.POS.CutOffType.Date)
                        {
                            if (this.StartDate != null && !this.EndDate.HasValue)
                                message = "End Date is required.";
                            else if (this.StartDate != null && this.EndDate.HasValue && this.EndDate.Value < this.StartDate)
                                message = "End Date must be greater than Start date.";
                        }
                        break;
                    case "IsNoEndDay":
                        this.OnPropertyChanged(() => EndDate);
                        break;
                    case "RewardType":
                        break;
                    case "PurchaseThreshold":
                        if (this.PurchaseThreshold == 0)
                            message = "Threshold is required.";
                        break;
                    case "RewardAmount":
                        break;
                    case "RewardAmtType":
                        this.OnPropertyChanged(() => PointConverter);
                        this.OnPropertyChanged(() => DollarConverter);
                        break;
                    case "RewardExpiration":
                        break;
                    case "DollarConverter":
                        if (this.RewardAmtType == (int)RewardAmountType.Point && this.DollarConverter == 0)
                            message = "DollarConverter must be greater than 0";
                        break;
                    case "PointConverter":
                        if (this.RewardAmtType == (int)RewardAmountType.Point && this.PointConverter == 0)
                            message = "PointConverter must be greater than 0";
                        break;
                    case "L1Amount":
                        break;
                    case "L1Markup":
                        if (this.L1Markup > 100)
                            message = "Markup must be less than 100";
                        break;
                    case "L2Amount":
                        break;
                    case "L2Markup":
                        if (this.L2Markup > 100)
                            message = "Markup must be less than 100";
                        break;
                    case "L3Amount":
                        break;
                    case "L3Markup":
                        if (this.L3Markup > 100)
                            message = "Markup must be less than 100";
                        break;
                    case "L4Amount":
                        break;
                    case "L4Markup":
                        if (this.L4Markup > 100)
                            message = "Markup must be less than 100";
                        break;
                    case "L5Amount":
                        break;
                    case "L5Markup":
                        if (this.L5Markup > 100)
                            message = "Markup must be less than 100";
                        break;
                    case "L6Amount":
                        break;
                    case "L6Markup":
                        if (this.L6Markup > 100)
                            message = "Markup must be less than 100";
                        break;
                    case "CutOffType":
                        if (this.CutOffType == (int)CPC.POS.CutOffType.CashOrPoint)
                            this.OnPropertyChanged(() => CutOffPointType);
                        this.OnPropertyChanged(() => EndDate);
                        this.OnPropertyChanged(() => CutOffPoint);
                        this.OnPropertyChanged(() => CutOffCash);
                        this.OnPropertyChanged(() => PointConverter);
                        this.OnPropertyChanged(() => DollarConverter);
                        break;

                    case "CutOffPointType":
                        if (this.CutOffType == (int)CPC.POS.CutOffType.CashOrPoint)
                        {
                            this.OnPropertyChanged(() => CutOffPoint);
                            this.OnPropertyChanged(() => CutOffCash);
                        }
                        break;

                    case "CutOffPoint":
                        if (this.CutOffType == (int)CPC.POS.CutOffType.CashOrPoint
                            && this.CutOffPointType == (int)CPC.POS.CutOffPointType.Point
                            && this.CutOffPoint == 0)
                            message = "Point must be greater than 0";
                        break;
                    case "CutOffCash":
                        if (this.CutOffType == (int)CPC.POS.CutOffType.CashOrPoint
                            && this.CutOffPointType == (int)CPC.POS.CutOffPointType.Cash
                            && this.CutOffCash == 0)
                            message = "Cash must be greater than 0";
                        break;
                    case "CutOffScheduleTyle":
                        break;
                    case "WeeklyNumber":
                        break;
                    case "WeeklyOnDay":
                        break;
                    case "MonthlyDay":
                        break;
                    case "MonthlyEveryMonth":
                        break;
                    case "YearlyOnDay":
                        break;
                    case "YearlyDateOnDay":
                        break;
                    case "MYSequence":
                        break;
                    case "MYSequenceOnDay":
                        break;
                    case "MYSequenceOnMonth":
                        break;
                    case "IsAutoEnroll":
                        break;
                    case "IsPromptEnroll":
                        break;
                    case "IsInformCashier":
                        break;
                    case "IsRedemptionLimit":
                        break;
                    case "RedemptionLimitAmount":
                        break;
                    case "IsBlockRedemption":
                        break;
                    case "RedemptionAfterDays":
                        break;
                    case "IsBlockPurchaseRedeem":
                        break;
                    case "IsTrackingPeriod":
                        break;
                    case "TotalRewardRedeemed":
                        break;
                    case "ReasonReActive":
                        break;
                    case "DateCreated":
                        break;
                    case "Id":
                        break;
                }
                if (!string.IsNullOrWhiteSpace(message))
                {
                    this.ExtensionErrors.Add(columnName);
                    return message;
                }
                return null;
            }
        }

        #endregion
    }
}

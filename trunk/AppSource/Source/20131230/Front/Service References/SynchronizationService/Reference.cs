//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.225
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CPC.POS.SynchronizationService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StoreModel", Namespace="http://schemas.datacontract.org/2004/07/SynchronizationService")]
    [System.SerializableAttribute()]
    public partial class StoreModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsChangePasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsMainStoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StoreCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Index {
            get {
                return this.IndexField;
            }
            set {
                if ((this.IndexField.Equals(value) != true)) {
                    this.IndexField = value;
                    this.RaisePropertyChanged("Index");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsChangePassword {
            get {
                return this.IsChangePasswordField;
            }
            set {
                if ((this.IsChangePasswordField.Equals(value) != true)) {
                    this.IsChangePasswordField = value;
                    this.RaisePropertyChanged("IsChangePassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsMainStore {
            get {
                return this.IsMainStoreField;
            }
            set {
                if ((this.IsMainStoreField.Equals(value) != true)) {
                    this.IsMainStoreField = value;
                    this.RaisePropertyChanged("IsMainStore");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewPassword {
            get {
                return this.NewPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.NewPasswordField, value) != true)) {
                    this.NewPasswordField = value;
                    this.RaisePropertyChanged("NewPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StoreCode {
            get {
                return this.StoreCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StoreCodeField, value) != true)) {
                    this.StoreCodeField = value;
                    this.RaisePropertyChanged("StoreCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileInfoModel", Namespace="http://schemas.datacontract.org/2004/07/SynchronizationService")]
    [System.SerializableAttribute()]
    public partial class FileInfoModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int StoreIndexField;
        
        private string StoreNameField;
        
        private string FileNameField;
        
        private long LengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FilePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.IO.Stream FileByteStreamField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ByteSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumbersOfFilesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public int StoreIndex {
            get {
                return this.StoreIndexField;
            }
            set {
                if ((this.StoreIndexField.Equals(value) != true)) {
                    this.StoreIndexField = value;
                    this.RaisePropertyChanged("StoreIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string StoreName {
            get {
                return this.StoreNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StoreNameField, value) != true)) {
                    this.StoreNameField = value;
                    this.RaisePropertyChanged("StoreName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=2)]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true, Order=3)]
        public long Length {
            get {
                return this.LengthField;
            }
            set {
                if ((this.LengthField.Equals(value) != true)) {
                    this.LengthField = value;
                    this.RaisePropertyChanged("Length");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string FilePath {
            get {
                return this.FilePathField;
            }
            set {
                if ((object.ReferenceEquals(this.FilePathField, value) != true)) {
                    this.FilePathField = value;
                    this.RaisePropertyChanged("FilePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public System.IO.Stream FileByteStream {
            get {
                return this.FileByteStreamField;
            }
            set {
                if ((object.ReferenceEquals(this.FileByteStreamField, value) != true)) {
                    this.FileByteStreamField = value;
                    this.RaisePropertyChanged("FileByteStream");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public byte[] ByteSize {
            get {
                return this.ByteSizeField;
            }
            set {
                if ((object.ReferenceEquals(this.ByteSizeField, value) != true)) {
                    this.ByteSizeField = value;
                    this.RaisePropertyChanged("ByteSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=7)]
        public int NumbersOfFiles {
            get {
                return this.NumbersOfFilesField;
            }
            set {
                if ((this.NumbersOfFilesField.Equals(value) != true)) {
                    this.NumbersOfFilesField = value;
                    this.RaisePropertyChanged("NumbersOfFiles");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SynchronizationService.IService", CallbackContract=typeof(CPC.POS.SynchronizationService.IServiceCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService/Authentication")]
        void Authentication(CPC.POS.SynchronizationService.StoreModel storeModel);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService/SynchronizeWithStore")]
        void SynchronizeWithStore(CPC.POS.SynchronizationService.FileInfoModel FileInfoModel);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService/SynchronizeWithMainStore")]
        void SynchronizeWithMainStore(CPC.POS.SynchronizationService.FileInfoModel FileInfoModel);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService/NoFileTransfer")]
        void NoFileTransfer(CPC.POS.SynchronizationService.StoreModel storeModel);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService/SendSyncRequest")]
        void SendSyncRequest();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService/SyncResponse")]
        void SyncResponse();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService/SendResultToStore")]
        void SendResultToStore(CPC.POS.SynchronizationService.FileInfoModel resultModel);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService/Disconnect")]
        void Disconnect(CPC.POS.SynchronizationService.StoreModel storeModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/RefreshStore", ReplyAction="http://tempuri.org/IService/RefreshStoreResponse")]
        bool RefreshStore(CPC.POS.SynchronizationService.StoreModel storeModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/MainStoreDisConnect", ReplyAction="http://tempuri.org/IService/MainStoreDisConnectResponse")]
        void MainStoreDisConnect(CPC.POS.SynchronizationService.StoreModel storeModel);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/IsMainStore", ReplyAction="http://tempuri.org/IService/IsMainStoreResponse")]
        bool IsMainStore(CPC.POS.SynchronizationService.StoreModel storeModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/IsStore", ReplyAction="http://tempuri.org/IService/IsStoreResponse")]
        int IsStore(CPC.POS.SynchronizationService.StoreModel storeModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/IsConnect", ReplyAction="http://tempuri.org/IService/IsConnectResponse")]
        bool IsConnect();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService/StoreDisConnect")]
        void StoreDisConnect(CPC.POS.SynchronizationService.StoreModel storeModel);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService/SendResult")]
        void SendResult(string message, bool result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService/SyncAtStore")]
        void SyncAtStore(CPC.POS.SynchronizationService.FileInfoModel fileInfoModel);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService/SyncAtMainStore")]
        void SyncAtMainStore(CPC.POS.SynchronizationService.FileInfoModel fileInfoModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/Untransfer", ReplyAction="http://tempuri.org/IService/UntransferResponse")]
        bool Untransfer();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService/SyncRequest")]
        void SyncRequest();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService/SendError")]
        void SendError(CPC.POS.SynchronizationService.FileInfoModel fileInfoModel);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IService/SendRequestConnect")]
        void SendRequestConnect(bool result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : CPC.POS.SynchronizationService.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.DuplexClientBase<CPC.POS.SynchronizationService.IService>, CPC.POS.SynchronizationService.IService {
        
        public ServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void Authentication(CPC.POS.SynchronizationService.StoreModel storeModel) {
            base.Channel.Authentication(storeModel);
        }
        
        public void SynchronizeWithStore(CPC.POS.SynchronizationService.FileInfoModel FileInfoModel) {
            base.Channel.SynchronizeWithStore(FileInfoModel);
        }
        
        public void SynchronizeWithMainStore(CPC.POS.SynchronizationService.FileInfoModel FileInfoModel) {
            base.Channel.SynchronizeWithMainStore(FileInfoModel);
        }
        
        public void NoFileTransfer(CPC.POS.SynchronizationService.StoreModel storeModel) {
            base.Channel.NoFileTransfer(storeModel);
        }
        
        public void SendSyncRequest() {
            base.Channel.SendSyncRequest();
        }
        
        public void SyncResponse() {
            base.Channel.SyncResponse();
        }
        
        public void SendResultToStore(CPC.POS.SynchronizationService.FileInfoModel resultModel) {
            base.Channel.SendResultToStore(resultModel);
        }
        
        public void Disconnect(CPC.POS.SynchronizationService.StoreModel storeModel) {
            base.Channel.Disconnect(storeModel);
        }
        
        public bool RefreshStore(CPC.POS.SynchronizationService.StoreModel storeModel) {
            return base.Channel.RefreshStore(storeModel);
        }
        
        public void MainStoreDisConnect(CPC.POS.SynchronizationService.StoreModel storeModel) {
            base.Channel.MainStoreDisConnect(storeModel);
        }
    }
}

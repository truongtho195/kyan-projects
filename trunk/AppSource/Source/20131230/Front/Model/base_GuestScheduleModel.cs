//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Linq;
using System.Linq.Expressions;
using CPC.Helper;
using CPC.POS.Database;
using CPC.Toolkit.Base;

namespace CPC.POS.Model
{
    /// <summary>
    /// Model for table base_GuestSchedule
    /// </summary>
    [Serializable]
    public partial class base_GuestScheduleModel : ModelBase, IDataErrorInfo
    {
        #region Constructor

        // Default constructor
        public base_GuestScheduleModel()
        {
            this.IsNew = true;
            this.base_GuestSchedule = new base_GuestSchedule();
        }

        // Default constructor that set entity to field
        public base_GuestScheduleModel(base_GuestSchedule base_guestschedule, bool isRaiseProperties = false)
        {
            this.base_GuestSchedule = base_guestschedule;
            if (!isRaiseProperties)
                this.ToModel();
            else
                this.ToModelAndRaise();
            this.IsDirty = false;
        }

        #endregion

        #region Entity Properties

        public base_GuestSchedule base_GuestSchedule { get; private set; }

        #endregion

        #region Primitive Properties

        protected long _id;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Id</param>
        /// </summary>
        public long Id
        {
            get { return this._id; }
            set
            {
                if (this._id != value)
                {
                    this.IsDirty = true;
                    this._id = value;
                    OnPropertyChanged(() => Id);
                    PropertyChangedCompleted(() => Id);
                }
            }
        }

        protected long _guestId;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the GuestId</param>
        /// </summary>
        public long GuestId
        {
            get { return this._guestId; }
            set
            {
                if (this._guestId != value)
                {
                    this.IsDirty = true;
                    this._guestId = value;
                    OnPropertyChanged(() => GuestId);
                    PropertyChangedCompleted(() => GuestId);
                }
            }
        }

        protected int _workScheduleId;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the WorkScheduleId</param>
        /// </summary>
        public int WorkScheduleId
        {
            get { return this._workScheduleId; }
            set
            {
                if (this._workScheduleId != value)
                {
                    this.IsDirty = true;
                    this._workScheduleId = value;
                    OnPropertyChanged(() => WorkScheduleId);
                    PropertyChangedCompleted(() => WorkScheduleId);
                }
            }
        }

        protected System.DateTime _startDate;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the StartDate</param>
        /// </summary>
        public System.DateTime StartDate
        {
            get { return this._startDate; }
            set
            {
                if (this._startDate != value)
                {
                    this.IsDirty = true;
                    this._startDate = value;
                    OnPropertyChanged(() => StartDate);
                    PropertyChangedCompleted(() => StartDate);
                }
            }
        }

        protected System.DateTime _assignDate;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the AssignDate</param>
        /// </summary>
        public System.DateTime AssignDate
        {
            get { return this._assignDate; }
            set
            {
                if (this._assignDate != value)
                {
                    this.IsDirty = true;
                    this._assignDate = value;
                    OnPropertyChanged(() => AssignDate);
                    PropertyChangedCompleted(() => AssignDate);
                }
            }
        }

        protected int _status;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Status</param>
        /// </summary>
        public int Status
        {
            get { return this._status; }
            set
            {
                if (this._status != value)
                {
                    this.IsDirty = true;
                    this._status = value;
                    OnPropertyChanged(() => Status);
                    PropertyChangedCompleted(() => Status);
                }
            }
        }

        #endregion

        #region Public Methods

        /// <summary>
        /// <param>Public Method</param>
        /// Method for set IsNew & IsDirty = false;
        /// </summary>
        public void EndUpdate()
        {
            this.IsNew = false;
            this.IsDirty = false;
        }

        /// <summary>
        /// Public Method
        /// <param>Method for set PropertyModel to Entity</param>
        /// </summary>
        public void ToEntity()
        {
            if (IsNew)
                this.base_GuestSchedule.Id = this.Id;
            this.base_GuestSchedule.GuestId = this.GuestId;
            this.base_GuestSchedule.WorkScheduleId = this.WorkScheduleId;
            this.base_GuestSchedule.StartDate = this.StartDate;
            this.base_GuestSchedule.AssignDate = this.AssignDate;
            this.base_GuestSchedule.Status = this.Status;
        }

        /// <summary>
        /// Public Method
        /// <param>Method for set Entity to PropertyModel</param>
        /// </summary
        public void ToModel()
        {
            this._id = this.base_GuestSchedule.Id;
            this._guestId = this.base_GuestSchedule.GuestId;
            this._workScheduleId = this.base_GuestSchedule.WorkScheduleId;
            this._startDate = this.base_GuestSchedule.StartDate;
            this._assignDate = this.base_GuestSchedule.AssignDate;
            this._status = this.base_GuestSchedule.Status;
        }

        /// <summary>
        /// Public Method
        /// <param>Method for set Entity to PropertyModel</param>
        /// </summary
        public void ToModelAndRaise()
        {
            this.Id = this.base_GuestSchedule.Id;
            this.GuestId = this.base_GuestSchedule.GuestId;
            this.WorkScheduleId = this.base_GuestSchedule.WorkScheduleId;
            this.StartDate = this.base_GuestSchedule.StartDate;
            this.AssignDate = this.base_GuestSchedule.AssignDate;
            this.Status = this.base_GuestSchedule.Status;
        }

        #endregion

        #region Custom Code
        /// <summary>
        /// Get status name
        /// </summary>
        public string StatusName
        {
            get
            {
                return Common.ScheduleStatuses.Single(x => x.Value == Status).Text;
            }
        }

        #endregion

        #region IDataErrorInfo Members

        public string Error
        {
            get { throw new NotImplementedException(); }
        }

        public string this[string columnName]
        {
            get
            {
                string message = string.Empty;

                switch (columnName)
                {
                    case "GuestId":
                        break;
                    case "WorkScheduleId":
                        break;
                    case "StartDate":
                        break;
                    case "AssignDate":
                        break;
                    case "Status":
                        break;
                }

                if (!string.IsNullOrWhiteSpace(message))
                    return message;
                return null;
            }
        }

        #endregion
    }
}

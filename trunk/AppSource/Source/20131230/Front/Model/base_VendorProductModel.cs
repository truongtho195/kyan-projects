//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Linq;
using System.Linq.Expressions;
using CPC.Helper;
using CPC.POS.Database;
using CPC.Toolkit.Base;

namespace CPC.POS.Model
{
    /// <summary>
    /// Model for table base_VendorProduct
    /// </summary>
    [Serializable]
    public partial class base_VendorProductModel : ModelBase, IDataErrorInfo
    {
        #region Constructor

        // Default constructor
        public base_VendorProductModel()
        {
            this.IsNew = true;
            this.base_VendorProduct = new base_VendorProduct();
        }

        // Default constructor that set entity to field
        public base_VendorProductModel(base_VendorProduct base_vendorproduct, bool isRaiseProperties = false)
        {
            this.base_VendorProduct = base_vendorproduct;
            if (!isRaiseProperties)
                this.ToModel();
            else
                this.ToModelAndRaise();
            this.IsDirty = false;
        }

        #endregion

        #region Entity Properties

        public base_VendorProduct base_VendorProduct { get; private set; }

        #endregion

        #region Primitive Properties

        protected int _id;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Id</param>
        /// </summary>
        public int Id
        {
            get { return this._id; }
            set
            {
                if (this._id != value)
                {
                    this.IsDirty = true;
                    this._id = value;
                    OnPropertyChanged(() => Id);
                    PropertyChangedCompleted(() => Id);
                }
            }
        }

        protected long _productId;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the ProductId</param>
        /// </summary>
        public long ProductId
        {
            get { return this._productId; }
            set
            {
                if (this._productId != value)
                {
                    this.IsDirty = true;
                    this._productId = value;
                    OnPropertyChanged(() => ProductId);
                    PropertyChangedCompleted(() => ProductId);
                }
            }
        }

        protected long _vendorId;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the VendorId</param>
        /// </summary>
        public long VendorId
        {
            get { return this._vendorId; }
            set
            {
                if (this._vendorId != value)
                {
                    this.IsDirty = true;
                    this._vendorId = value;
                    OnPropertyChanged(() => VendorId);
                    PropertyChangedCompleted(() => VendorId);
                }
            }
        }

        protected decimal _price;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Price</param>
        /// </summary>
        public decimal Price
        {
            get { return this._price; }
            set
            {
                if (this._price != value)
                {
                    this.IsDirty = true;
                    this._price = value;
                    OnPropertyChanged(() => Price);
                    PropertyChangedCompleted(() => Price);
                }
            }
        }

        protected string _productResource;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the ProductResource</param>
        /// </summary>
        public string ProductResource
        {
            get { return this._productResource; }
            set
            {
                if (this._productResource != value)
                {
                    this.IsDirty = true;
                    this._productResource = value;
                    OnPropertyChanged(() => ProductResource);
                    PropertyChangedCompleted(() => ProductResource);
                }
            }
        }

        protected string _vendorResource;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the VendorResource</param>
        /// </summary>
        public string VendorResource
        {
            get { return this._vendorResource; }
            set
            {
                if (this._vendorResource != value)
                {
                    this.IsDirty = true;
                    this._vendorResource = value;
                    OnPropertyChanged(() => VendorResource);
                    PropertyChangedCompleted(() => VendorResource);
                }
            }
        }

        #endregion

        #region Public Methods

        /// <summary>
        /// <param>Public Method</param>
        /// Method for set IsNew & IsDirty = false;
        /// </summary>
        public void EndUpdate()
        {
            this.IsNew = false;
            this.IsDirty = false;
        }

        /// <summary>
        /// Public Method
        /// <param>Method for set PropertyModel to Entity</param>
        /// </summary>
        public void ToEntity()
        {
            if (IsNew)
                this.base_VendorProduct.Id = this.Id;
            this.base_VendorProduct.ProductId = this.ProductId;
            this.base_VendorProduct.VendorId = this.VendorId;
            this.base_VendorProduct.Price = this.Price;
            if (this.ProductResource != null)
                this.base_VendorProduct.ProductResource = this.ProductResource.Trim();
            if (this.VendorResource != null)
                this.base_VendorProduct.VendorResource = this.VendorResource.Trim();
        }

        /// <summary>
        /// Public Method
        /// <param>Method for set Entity to PropertyModel</param>
        /// </summary
        public void ToModel()
        {
            this._id = this.base_VendorProduct.Id;
            this._productId = this.base_VendorProduct.ProductId;
            this._vendorId = this.base_VendorProduct.VendorId;
            this._price = this.base_VendorProduct.Price;
            this._productResource = this.base_VendorProduct.ProductResource;
            this._vendorResource = this.base_VendorProduct.VendorResource;
        }

        /// <summary>
        /// Public Method
        /// <param>Method for set Entity to PropertyModel</param>
        /// </summary
        public void ToModelAndRaise()
        {
            this.Id = this.base_VendorProduct.Id;
            this.ProductId = this.base_VendorProduct.ProductId;
            this.VendorId = this.base_VendorProduct.VendorId;
            this.Price = this.base_VendorProduct.Price;
            this.ProductResource = this.base_VendorProduct.ProductResource;
            this.VendorResource = this.base_VendorProduct.VendorResource;
        }

        #endregion

        #region Custom Code

        #region Properties

        private string _vendorCode;
        /// <summary>
        /// Gets or sets the VendorCode.
        /// </summary>
        public string VendorCode
        {
            get { return _vendorCode; }
            set
            {
                if (_vendorCode != value)
                {
                    _vendorCode = value;
                    OnPropertyChanged(() => VendorCode);
                }
            }
        }

        private string _phone;
        /// <summary>
        /// Gets or sets the Phone.
        /// </summary>
        public string Phone
        {
            get { return _phone; }
            set
            {
                if (_phone != value)
                {
                    _phone = value;
                    OnPropertyChanged(() => Phone);
                }
            }
        }

        private string _email;
        /// <summary>
        /// Gets or sets the Email.
        /// </summary>
        public string Email
        {
            get { return _email; }
            set
            {
                if (_email != value)
                {
                    _email = value;
                    OnPropertyChanged(() => Email);
                }
            }
        }

        private string _company;
        /// <summary>
        /// Gets or sets the Company.
        /// </summary>
        public string Company
        {
            get { return _company; }
            set
            {
                if (_company != value)
                {
                    _company = value;
                    OnPropertyChanged(() => Company);
                }
            }
        }

        #endregion

        #region Public Methods

        public void ToModel(base_VendorProductModel vendorProductModel)
        {
            //this._id = vendorProductModel.Id;
            //this._productId = vendorProductModel.ProductId;
            this._vendorId = vendorProductModel.VendorId;
            this._price = vendorProductModel.Price;
            //this._productResource = vendorProductModel.ProductResource;
            this._vendorResource = vendorProductModel.VendorResource;
        }

        #endregion

        #endregion

        #region IDataErrorInfo Members

        public string Error
        {
            get
            {
                List<string> errors = new List<string>();
                PropertyDescriptorCollection props = TypeDescriptor.GetProperties(this);
                foreach (PropertyDescriptor prop in props)
                {
                    string msg = this[prop.Name];
                    if (!string.IsNullOrWhiteSpace(msg))
                    {
                        errors.Add(msg);
                    }
                }
                return string.Join(Environment.NewLine, errors);
            }
        }

        public string this[string columnName]
        {
            get
            {
                string message = string.Empty;

                switch (columnName)
                {
                    case "Id":
                        break;
                    case "ProductId":
                        break;
                    case "VendorId":
                        break;
                    case "Price":
                        break;
                    case "ProductResource":
                        break;
                    case "VendorResource":
                        break;
                }

                if (!string.IsNullOrWhiteSpace(message))
                    return message;
                return null;
            }
        }

        #endregion
    }
}

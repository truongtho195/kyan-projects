//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Linq;
using System.Linq.Expressions;
using CPC.Helper;
using CPC.POS.Database;
using CPC.Toolkit.Base;

namespace CPC.POS.Model
{
    /// <summary>
    /// Model for table base_Configuration
    /// </summary>
    [Serializable]
    public partial class base_ConfigurationModel : ModelBase, IDataErrorInfo
    {
        #region Constructor

        // Default constructor
        public base_ConfigurationModel()
        {
            this.IsNew = true;
            this.base_Configuration = new base_Configuration();
        }

        // Default constructor that set entity to field
        public base_ConfigurationModel(base_Configuration base_configuration, bool isRaiseProperties = false)
        {
            this.base_Configuration = base_configuration;
            if (!isRaiseProperties)
                this.ToModel();
            else
                this.ToModelAndRaise();
            this.IsDirty = false;
        }

        #endregion

        #region Entity Properties

        public base_Configuration base_Configuration { get; private set; }

        #endregion

        #region Primitive Properties

        protected string _companyName;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the CompanyName</param>
        /// </summary>
        public string CompanyName
        {
            get { return this._companyName; }
            set
            {
                if (this._companyName != value)
                {
                    this.IsDirty = true;
                    this._companyName = value;
                    OnPropertyChanged(() => CompanyName);
                    PropertyChangedCompleted(() => CompanyName);
                }
            }
        }

        protected string _address;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Address</param>
        /// </summary>
        public string Address
        {
            get { return this._address; }
            set
            {
                if (this._address != value)
                {
                    this.IsDirty = true;
                    this._address = value;
                    OnPropertyChanged(() => Address);
                    PropertyChangedCompleted(() => Address);
                }
            }
        }

        protected string _city;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the City</param>
        /// </summary>
        public string City
        {
            get { return this._city; }
            set
            {
                if (this._city != value)
                {
                    this.IsDirty = true;
                    this._city = value;
                    OnPropertyChanged(() => City);
                    PropertyChangedCompleted(() => City);
                }
            }
        }

        protected Nullable<short> _state;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the State</param>
        /// </summary>
        public Nullable<short> State
        {
            get { return this._state; }
            set
            {
                if (this._state != value)
                {
                    this.IsDirty = true;
                    this._state = value;
                    OnPropertyChanged(() => State);
                    PropertyChangedCompleted(() => State);
                }
            }
        }

        protected string _zipCode;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the ZipCode</param>
        /// </summary>
        public string ZipCode
        {
            get { return this._zipCode; }
            set
            {
                if (this._zipCode != value)
                {
                    this.IsDirty = true;
                    this._zipCode = value;
                    OnPropertyChanged(() => ZipCode);
                    PropertyChangedCompleted(() => ZipCode);
                }
            }
        }

        protected Nullable<short> _countryId;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the CountryId</param>
        /// </summary>
        public Nullable<short> CountryId
        {
            get { return this._countryId; }
            set
            {
                if (this._countryId != value)
                {
                    this.IsDirty = true;
                    this._countryId = value;
                    OnPropertyChanged(() => CountryId);
                    PropertyChangedCompleted(() => CountryId);
                }
            }
        }

        protected string _phone;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Phone</param>
        /// </summary>
        public string Phone
        {
            get { return this._phone; }
            set
            {
                if (this._phone != value)
                {
                    this.IsDirty = true;
                    this._phone = value;
                    OnPropertyChanged(() => Phone);
                    PropertyChangedCompleted(() => Phone);
                }
            }
        }

        protected string _fax;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Fax</param>
        /// </summary>
        public string Fax
        {
            get { return this._fax; }
            set
            {
                if (this._fax != value)
                {
                    this.IsDirty = true;
                    this._fax = value;
                    OnPropertyChanged(() => Fax);
                    PropertyChangedCompleted(() => Fax);
                }
            }
        }

        protected string _email;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Email</param>
        /// </summary>
        public string Email
        {
            get { return this._email; }
            set
            {
                if (this._email != value)
                {
                    this.IsDirty = true;
                    this._email = value;
                    OnPropertyChanged(() => Email);
                    PropertyChangedCompleted(() => Email);
                }
            }
        }

        protected string _website;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Website</param>
        /// </summary>
        public string Website
        {
            get { return this._website; }
            set
            {
                if (this._website != value)
                {
                    this.IsDirty = true;
                    this._website = value;
                    OnPropertyChanged(() => Website);
                    PropertyChangedCompleted(() => Website);
                }
            }
        }

        protected string _emailPop3Server;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the EmailPop3Server</param>
        /// </summary>
        public string EmailPop3Server
        {
            get { return this._emailPop3Server; }
            set
            {
                if (this._emailPop3Server != value)
                {
                    this.IsDirty = true;
                    this._emailPop3Server = value;
                    OnPropertyChanged(() => EmailPop3Server);
                    PropertyChangedCompleted(() => EmailPop3Server);
                }
            }
        }

        protected Nullable<int> _emailPop3Port;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the EmailPop3Port</param>
        /// </summary>
        public Nullable<int> EmailPop3Port
        {
            get { return this._emailPop3Port; }
            set
            {
                if (this._emailPop3Port != value)
                {
                    this.IsDirty = true;
                    this._emailPop3Port = value;
                    OnPropertyChanged(() => EmailPop3Port);
                    PropertyChangedCompleted(() => EmailPop3Port);
                }
            }
        }

        protected string _emailAccount;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the EmailAccount</param>
        /// </summary>
        public string EmailAccount
        {
            get { return this._emailAccount; }
            set
            {
                if (this._emailAccount != value)
                {
                    this.IsDirty = true;
                    this._emailAccount = value;
                    OnPropertyChanged(() => EmailAccount);
                    PropertyChangedCompleted(() => EmailAccount);
                }
            }
        }

        protected string _emailPassword;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the EmailPassword</param>
        /// </summary>
        public string EmailPassword
        {
            get { return this._emailPassword; }
            set
            {
                if (this._emailPassword != value)
                {
                    this.IsDirty = true;
                    this._emailPassword = value;
                    OnPropertyChanged(() => EmailPassword);
                    PropertyChangedCompleted(() => EmailPassword);
                }
            }
        }

        protected Nullable<bool> _isBarcodeScannerAttached;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the IsBarcodeScannerAttached</param>
        /// </summary>
        public Nullable<bool> IsBarcodeScannerAttached
        {
            get { return this._isBarcodeScannerAttached; }
            set
            {
                if (this._isBarcodeScannerAttached != value)
                {
                    this.IsDirty = true;
                    this._isBarcodeScannerAttached = value;
                    OnPropertyChanged(() => IsBarcodeScannerAttached);
                    PropertyChangedCompleted(() => IsBarcodeScannerAttached);
                }
            }
        }

        protected Nullable<bool> _isEnableTouchScreenLayout;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the IsEnableTouchScreenLayout</param>
        /// </summary>
        public Nullable<bool> IsEnableTouchScreenLayout
        {
            get { return this._isEnableTouchScreenLayout; }
            set
            {
                if (this._isEnableTouchScreenLayout != value)
                {
                    this.IsDirty = true;
                    this._isEnableTouchScreenLayout = value;
                    OnPropertyChanged(() => IsEnableTouchScreenLayout);
                    PropertyChangedCompleted(() => IsEnableTouchScreenLayout);
                }
            }
        }

        protected Nullable<bool> _isAllowTimeClockAttached;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the IsAllowTimeClockAttached</param>
        /// </summary>
        public Nullable<bool> IsAllowTimeClockAttached
        {
            get { return this._isAllowTimeClockAttached; }
            set
            {
                if (this._isAllowTimeClockAttached != value)
                {
                    this.IsDirty = true;
                    this._isAllowTimeClockAttached = value;
                    OnPropertyChanged(() => IsAllowTimeClockAttached);
                    PropertyChangedCompleted(() => IsAllowTimeClockAttached);
                }
            }
        }

        protected Nullable<bool> _isAllowCollectTipCreditCard;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the IsAllowCollectTipCreditCard</param>
        /// </summary>
        public Nullable<bool> IsAllowCollectTipCreditCard
        {
            get { return this._isAllowCollectTipCreditCard; }
            set
            {
                if (this._isAllowCollectTipCreditCard != value)
                {
                    this.IsDirty = true;
                    this._isAllowCollectTipCreditCard = value;
                    OnPropertyChanged(() => IsAllowCollectTipCreditCard);
                    PropertyChangedCompleted(() => IsAllowCollectTipCreditCard);
                }
            }
        }

        protected Nullable<bool> _isAllowMutilUOM;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the IsAllowMutilUOM</param>
        /// </summary>
        public Nullable<bool> IsAllowMutilUOM
        {
            get { return this._isAllowMutilUOM; }
            set
            {
                if (this._isAllowMutilUOM != value)
                {
                    this.IsDirty = true;
                    this._isAllowMutilUOM = value;
                    OnPropertyChanged(() => IsAllowMutilUOM);
                    PropertyChangedCompleted(() => IsAllowMutilUOM);
                }
            }
        }

        protected Nullable<int> _defaultMaximumSticky;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the DefaultMaximumSticky</param>
        /// </summary>
        public Nullable<int> DefaultMaximumSticky
        {
            get { return this._defaultMaximumSticky; }
            set
            {
                if (this._defaultMaximumSticky != value)
                {
                    this.IsDirty = true;
                    this._defaultMaximumSticky = value;
                    OnPropertyChanged(() => DefaultMaximumSticky);
                    PropertyChangedCompleted(() => DefaultMaximumSticky);
                }
            }
        }

        protected Nullable<short> _defaultPriceSchema;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the DefaultPriceSchema</param>
        /// </summary>
        public Nullable<short> DefaultPriceSchema
        {
            get { return this._defaultPriceSchema; }
            set
            {
                if (this._defaultPriceSchema != value)
                {
                    this.IsDirty = true;
                    this._defaultPriceSchema = value;
                    OnPropertyChanged(() => DefaultPriceSchema);
                    PropertyChangedCompleted(() => DefaultPriceSchema);
                }
            }
        }

        protected Nullable<short> _defaultPaymentMethod;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the DefaultPaymentMethod</param>
        /// </summary>
        public Nullable<short> DefaultPaymentMethod
        {
            get { return this._defaultPaymentMethod; }
            set
            {
                if (this._defaultPaymentMethod != value)
                {
                    this.IsDirty = true;
                    this._defaultPaymentMethod = value;
                    OnPropertyChanged(() => DefaultPaymentMethod);
                    PropertyChangedCompleted(() => DefaultPaymentMethod);
                }
            }
        }

        protected Nullable<short> _defaultSaleTaxLocation;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the DefaultSaleTaxLocation</param>
        /// </summary>
        public Nullable<short> DefaultSaleTaxLocation
        {
            get { return this._defaultSaleTaxLocation; }
            set
            {
                if (this._defaultSaleTaxLocation != value)
                {
                    this.IsDirty = true;
                    this._defaultSaleTaxLocation = value;
                    OnPropertyChanged(() => DefaultSaleTaxLocation);
                    PropertyChangedCompleted(() => DefaultSaleTaxLocation);
                }
            }
        }

        protected string _defaultTaxCodeNewDepartment;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the DefaultTaxCodeNewDepartment</param>
        /// </summary>
        public string DefaultTaxCodeNewDepartment
        {
            get { return this._defaultTaxCodeNewDepartment; }
            set
            {
                if (this._defaultTaxCodeNewDepartment != value)
                {
                    this.IsDirty = true;
                    this._defaultTaxCodeNewDepartment = value;
                    OnPropertyChanged(() => DefaultTaxCodeNewDepartment);
                    PropertyChangedCompleted(() => DefaultTaxCodeNewDepartment);
                }
            }
        }

        protected string _defautlImagePath;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the DefautlImagePath</param>
        /// </summary>
        public string DefautlImagePath
        {
            get { return this._defautlImagePath; }
            set
            {
                if (this._defautlImagePath != value)
                {
                    this.IsDirty = true;
                    this._defautlImagePath = value;
                    OnPropertyChanged(() => DefautlImagePath);
                    PropertyChangedCompleted(() => DefautlImagePath);
                }
            }
        }

        protected int _defautlDiscountScheduleTime;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the DefautlDiscountScheduleTime</param>
        /// </summary>
        public int DefautlDiscountScheduleTime
        {
            get { return this._defautlDiscountScheduleTime; }
            set
            {
                if (this._defautlDiscountScheduleTime != value)
                {
                    this.IsDirty = true;
                    this._defautlDiscountScheduleTime = value;
                    OnPropertyChanged(() => DefautlDiscountScheduleTime);
                    PropertyChangedCompleted(() => DefautlDiscountScheduleTime);
                }
            }
        }

        protected Nullable<System.DateTime> _dateCreated;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the DateCreated</param>
        /// </summary>
        public Nullable<System.DateTime> DateCreated
        {
            get { return this._dateCreated; }
            set
            {
                if (this._dateCreated != value)
                {
                    this.IsDirty = true;
                    this._dateCreated = value;
                    OnPropertyChanged(() => DateCreated);
                    PropertyChangedCompleted(() => DateCreated);
                }
            }
        }

        protected string _userCreated;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the UserCreated</param>
        /// </summary>
        public string UserCreated
        {
            get { return this._userCreated; }
            set
            {
                if (this._userCreated != value)
                {
                    this.IsDirty = true;
                    this._userCreated = value;
                    OnPropertyChanged(() => UserCreated);
                    PropertyChangedCompleted(() => UserCreated);
                }
            }
        }

        protected Nullable<short> _totalStore;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the TotalStore</param>
        /// </summary>
        public Nullable<short> TotalStore
        {
            get { return this._totalStore; }
            set
            {
                if (this._totalStore != value)
                {
                    this.IsDirty = true;
                    this._totalStore = value;
                    OnPropertyChanged(() => TotalStore);
                    PropertyChangedCompleted(() => TotalStore);
                }
            }
        }

        protected Nullable<bool> _isRequirePromotionCode;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the IsRequirePromotionCode</param>
        /// </summary>
        public Nullable<bool> IsRequirePromotionCode
        {
            get { return this._isRequirePromotionCode; }
            set
            {
                if (this._isRequirePromotionCode != value)
                {
                    this.IsDirty = true;
                    this._isRequirePromotionCode = value;
                    OnPropertyChanged(() => IsRequirePromotionCode);
                    PropertyChangedCompleted(() => IsRequirePromotionCode);
                }
            }
        }

        protected short _defaultDiscountType;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the DefaultDiscountType</param>
        /// </summary>
        public short DefaultDiscountType
        {
            get { return this._defaultDiscountType; }
            set
            {
                if (this._defaultDiscountType != value)
                {
                    this.IsDirty = true;
                    this._defaultDiscountType = value;
                    OnPropertyChanged(() => DefaultDiscountType);
                    PropertyChangedCompleted(() => DefaultDiscountType);
                }
            }
        }

        protected short _defaultDiscountStatus;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the DefaultDiscountStatus</param>
        /// </summary>
        public short DefaultDiscountStatus
        {
            get { return this._defaultDiscountStatus; }
            set
            {
                if (this._defaultDiscountStatus != value)
                {
                    this.IsDirty = true;
                    this._defaultDiscountStatus = value;
                    OnPropertyChanged(() => DefaultDiscountStatus);
                    PropertyChangedCompleted(() => DefaultDiscountStatus);
                }
            }
        }

        protected Nullable<short> _loginAllow;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the LoginAllow</param>
        /// </summary>
        public Nullable<short> LoginAllow
        {
            get { return this._loginAllow; }
            set
            {
                if (this._loginAllow != value)
                {
                    this.IsDirty = true;
                    this._loginAllow = value;
                    OnPropertyChanged(() => LoginAllow);
                    PropertyChangedCompleted(() => LoginAllow);
                }
            }
        }

        protected byte[] _logo;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Logo</param>
        /// </summary>
        public byte[] Logo
        {
            get { return this._logo; }
            set
            {
                if (this._logo != value)
                {
                    this.IsDirty = true;
                    this._logo = value;
                    OnPropertyChanged(() => Logo);
                    PropertyChangedCompleted(() => Logo);
                }
            }
        }

        protected Nullable<short> _defaultScanMethod;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the DefaultScanMethod</param>
        /// </summary>
        public Nullable<short> DefaultScanMethod
        {
            get { return this._defaultScanMethod; }
            set
            {
                if (this._defaultScanMethod != value)
                {
                    this.IsDirty = true;
                    this._defaultScanMethod = value;
                    OnPropertyChanged(() => DefaultScanMethod);
                    PropertyChangedCompleted(() => DefaultScanMethod);
                }
            }
        }

        protected decimal _tipPercent;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the TipPercent</param>
        /// </summary>
        public decimal TipPercent
        {
            get { return this._tipPercent; }
            set
            {
                if (this._tipPercent != value)
                {
                    this.IsDirty = true;
                    this._tipPercent = value;
                    OnPropertyChanged(() => TipPercent);
                    PropertyChangedCompleted(() => TipPercent);
                }
            }
        }

        protected Nullable<int> _acceptedPaymentMethod;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the AcceptedPaymentMethod</param>
        /// </summary>
        public Nullable<int> AcceptedPaymentMethod
        {
            get { return this._acceptedPaymentMethod; }
            set
            {
                if (this._acceptedPaymentMethod != value)
                {
                    this.IsDirty = true;
                    this._acceptedPaymentMethod = value;
                    OnPropertyChanged(() => AcceptedPaymentMethod);
                    PropertyChangedCompleted(() => AcceptedPaymentMethod);
                }
            }
        }

        protected Nullable<int> _acceptedCardType;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the AcceptedCardType</param>
        /// </summary>
        public Nullable<int> AcceptedCardType
        {
            get { return this._acceptedCardType; }
            set
            {
                if (this._acceptedCardType != value)
                {
                    this.IsDirty = true;
                    this._acceptedCardType = value;
                    OnPropertyChanged(() => AcceptedCardType);
                    PropertyChangedCompleted(() => AcceptedCardType);
                }
            }
        }

        protected Nullable<bool> _isRequireDiscountReason;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the IsRequireDiscountReason</param>
        /// </summary>
        public Nullable<bool> IsRequireDiscountReason
        {
            get { return this._isRequireDiscountReason; }
            set
            {
                if (this._isRequireDiscountReason != value)
                {
                    this.IsDirty = true;
                    this._isRequireDiscountReason = value;
                    OnPropertyChanged(() => IsRequireDiscountReason);
                    PropertyChangedCompleted(() => IsRequireDiscountReason);
                }
            }
        }

        protected short _workHour;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the WorkHour</param>
        /// </summary>
        public short WorkHour
        {
            get { return this._workHour; }
            set
            {
                if (this._workHour != value)
                {
                    this.IsDirty = true;
                    this._workHour = value;
                    OnPropertyChanged(() => WorkHour);
                    PropertyChangedCompleted(() => WorkHour);
                }
            }
        }

        protected int _id;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Id</param>
        /// </summary>
        public int Id
        {
            get { return this._id; }
            set
            {
                if (this._id != value)
                {
                    this.IsDirty = true;
                    this._id = value;
                    OnPropertyChanged(() => Id);
                    PropertyChangedCompleted(() => Id);
                }
            }
        }

        protected Nullable<short> _defaultShipUnit;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the DefaultShipUnit</param>
        /// </summary>
        public Nullable<short> DefaultShipUnit
        {
            get { return this._defaultShipUnit; }
            set
            {
                if (this._defaultShipUnit != value)
                {
                    this.IsDirty = true;
                    this._defaultShipUnit = value;
                    OnPropertyChanged(() => DefaultShipUnit);
                    PropertyChangedCompleted(() => DefaultShipUnit);
                }
            }
        }

        protected Nullable<bool> _defaultCashiedUserName;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the DefaultCashiedUserName</param>
        /// </summary>
        public Nullable<bool> DefaultCashiedUserName
        {
            get { return this._defaultCashiedUserName; }
            set
            {
                if (this._defaultCashiedUserName != value)
                {
                    this.IsDirty = true;
                    this._defaultCashiedUserName = value;
                    OnPropertyChanged(() => DefaultCashiedUserName);
                    PropertyChangedCompleted(() => DefaultCashiedUserName);
                }
            }
        }

        protected Nullable<short> _keepLog;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the KeepLog</param>
        /// </summary>
        public Nullable<short> KeepLog
        {
            get { return this._keepLog; }
            set
            {
                if (this._keepLog != value)
                {
                    this.IsDirty = true;
                    this._keepLog = value;
                    OnPropertyChanged(() => KeepLog);
                    PropertyChangedCompleted(() => KeepLog);
                }
            }
        }

        protected bool _isAllowShift;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the IsAllowShift</param>
        /// </summary>
        public bool IsAllowShift
        {
            get { return this._isAllowShift; }
            set
            {
                if (this._isAllowShift != value)
                {
                    this.IsDirty = true;
                    this._isAllowShift = value;
                    OnPropertyChanged(() => IsAllowShift);
                    PropertyChangedCompleted(() => IsAllowShift);
                }
            }
        }

        protected string _defaultLanguage;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the DefaultLanguage</param>
        /// </summary>
        public string DefaultLanguage
        {
            get { return this._defaultLanguage; }
            set
            {
                if (this._defaultLanguage != value)
                {
                    this.IsDirty = true;
                    this._defaultLanguage = value;
                    OnPropertyChanged(() => DefaultLanguage);
                    PropertyChangedCompleted(() => DefaultLanguage);
                }
            }
        }

        protected Nullable<int> _timeOutMinute;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the TimeOutMinute</param>
        /// </summary>
        public Nullable<int> TimeOutMinute
        {
            get { return this._timeOutMinute; }
            set
            {
                if (this._timeOutMinute != value)
                {
                    this.IsDirty = true;
                    this._timeOutMinute = value;
                    OnPropertyChanged(() => TimeOutMinute);
                    PropertyChangedCompleted(() => TimeOutMinute);
                }
            }
        }

        protected Nullable<bool> _isAutoLogout;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the IsAutoLogout</param>
        /// </summary>
        public Nullable<bool> IsAutoLogout
        {
            get { return this._isAutoLogout; }
            set
            {
                if (this._isAutoLogout != value)
                {
                    this.IsDirty = true;
                    this._isAutoLogout = value;
                    OnPropertyChanged(() => IsAutoLogout);
                    PropertyChangedCompleted(() => IsAutoLogout);
                }
            }
        }

        protected Nullable<bool> _isBackupWhenExit;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the IsBackupWhenExit</param>
        /// </summary>
        public Nullable<bool> IsBackupWhenExit
        {
            get { return this._isBackupWhenExit; }
            set
            {
                if (this._isBackupWhenExit != value)
                {
                    this.IsDirty = true;
                    this._isBackupWhenExit = value;
                    OnPropertyChanged(() => IsBackupWhenExit);
                    PropertyChangedCompleted(() => IsBackupWhenExit);
                }
            }
        }

        protected Nullable<int> _backupEvery;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the BackupEvery</param>
        /// </summary>
        public Nullable<int> BackupEvery
        {
            get { return this._backupEvery; }
            set
            {
                if (this._backupEvery != value)
                {
                    this.IsDirty = true;
                    this._backupEvery = value;
                    OnPropertyChanged(() => BackupEvery);
                    PropertyChangedCompleted(() => BackupEvery);
                }
            }
        }

        protected string _backupPath;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the BackupPath</param>
        /// </summary>
        public string BackupPath
        {
            get { return this._backupPath; }
            set
            {
                if (this._backupPath != value)
                {
                    this.IsDirty = true;
                    this._backupPath = value;
                    OnPropertyChanged(() => BackupPath);
                    PropertyChangedCompleted(() => BackupPath);
                }
            }
        }

        protected Nullable<bool> _isAllowRGO;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the IsAllowRGO</param>
        /// </summary>
        public Nullable<bool> IsAllowRGO
        {
            get { return this._isAllowRGO; }
            set
            {
                if (this._isAllowRGO != value)
                {
                    this.IsDirty = true;
                    this._isAllowRGO = value;
                    OnPropertyChanged(() => IsAllowRGO);
                    PropertyChangedCompleted(() => IsAllowRGO);
                }
            }
        }

        protected Nullable<bool> _isAllowChangeOrder;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the IsAllowChangeOrder</param>
        /// </summary>
        public Nullable<bool> IsAllowChangeOrder
        {
            get { return this._isAllowChangeOrder; }
            set
            {
                if (this._isAllowChangeOrder != value)
                {
                    this.IsDirty = true;
                    this._isAllowChangeOrder = value;
                    OnPropertyChanged(() => IsAllowChangeOrder);
                    PropertyChangedCompleted(() => IsAllowChangeOrder);
                }
            }
        }

        protected Nullable<bool> _isAllowNegativeStore;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the IsAllowNegativeStore</param>
        /// </summary>
        public Nullable<bool> IsAllowNegativeStore
        {
            get { return this._isAllowNegativeStore; }
            set
            {
                if (this._isAllowNegativeStore != value)
                {
                    this.IsDirty = true;
                    this._isAllowNegativeStore = value;
                    OnPropertyChanged(() => IsAllowNegativeStore);
                    PropertyChangedCompleted(() => IsAllowNegativeStore);
                }
            }
        }

        protected bool _isRewardOnTax;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the IsRewardOnTax</param>
        /// </summary>
        public bool IsRewardOnTax
        {
            get { return this._isRewardOnTax; }
            set
            {
                if (this._isRewardOnTax != value)
                {
                    this.IsDirty = true;
                    this._isRewardOnTax = value;
                    OnPropertyChanged(() => IsRewardOnTax);
                    PropertyChangedCompleted(() => IsRewardOnTax);
                }
            }
        }

        protected bool _isRewardOnMultiPayment;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the IsRewardOnMultiPayment</param>
        /// </summary>
        public bool IsRewardOnMultiPayment
        {
            get { return this._isRewardOnMultiPayment; }
            set
            {
                if (this._isRewardOnMultiPayment != value)
                {
                    this.IsDirty = true;
                    this._isRewardOnMultiPayment = value;
                    OnPropertyChanged(() => IsRewardOnMultiPayment);
                    PropertyChangedCompleted(() => IsRewardOnMultiPayment);
                }
            }
        }

        protected bool _isIncludeReturnFee;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the IsIncludeReturnFee</param>
        /// </summary>
        public bool IsIncludeReturnFee
        {
            get { return this._isIncludeReturnFee; }
            set
            {
                if (this._isIncludeReturnFee != value)
                {
                    this.IsDirty = true;
                    this._isIncludeReturnFee = value;
                    OnPropertyChanged(() => IsIncludeReturnFee);
                    PropertyChangedCompleted(() => IsIncludeReturnFee);
                }
            }
        }

        protected decimal _returnFeePercent;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the ReturnFeePercent</param>
        /// </summary>
        public decimal ReturnFeePercent
        {
            get { return this._returnFeePercent; }
            set
            {
                if (this._returnFeePercent != value)
                {
                    this.IsDirty = true;
                    this._returnFeePercent = value;
                    OnPropertyChanged(() => ReturnFeePercent);
                    PropertyChangedCompleted(() => ReturnFeePercent);
                }
            }
        }

        protected bool _isRewardLessThanDiscount;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the IsRewardLessThanDiscount</param>
        /// </summary>
        public bool IsRewardLessThanDiscount
        {
            get { return this._isRewardLessThanDiscount; }
            set
            {
                if (this._isRewardLessThanDiscount != value)
                {
                    this.IsDirty = true;
                    this._isRewardLessThanDiscount = value;
                    OnPropertyChanged(() => IsRewardLessThanDiscount);
                    PropertyChangedCompleted(() => IsRewardLessThanDiscount);
                }
            }
        }

        protected string _currencySymbol;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the CurrencySymbol</param>
        /// </summary>
        public string CurrencySymbol
        {
            get { return this._currencySymbol; }
            set
            {
                if (this._currencySymbol != value)
                {
                    this.IsDirty = true;
                    this._currencySymbol = value;
                    OnPropertyChanged(() => CurrencySymbol);
                    PropertyChangedCompleted(() => CurrencySymbol);
                }
            }
        }

        protected Nullable<short> _decimalPlaces;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the DecimalPlaces</param>
        /// </summary>
        public Nullable<short> DecimalPlaces
        {
            get { return this._decimalPlaces; }
            set
            {
                if (this._decimalPlaces != value)
                {
                    this.IsDirty = true;
                    this._decimalPlaces = value;
                    OnPropertyChanged(() => DecimalPlaces);
                    PropertyChangedCompleted(() => DecimalPlaces);
                }
            }
        }

        protected string _fomartCurrency;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the FomartCurrency</param>
        /// </summary>
        public string FomartCurrency
        {
            get { return this._fomartCurrency; }
            set
            {
                if (this._fomartCurrency != value)
                {
                    this.IsDirty = true;
                    this._fomartCurrency = value;
                    OnPropertyChanged(() => FomartCurrency);
                    PropertyChangedCompleted(() => FomartCurrency);
                }
            }
        }

        protected string _passwordFormat;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the PasswordFormat</param>
        /// </summary>
        public string PasswordFormat
        {
            get { return this._passwordFormat; }
            set
            {
                if (this._passwordFormat != value)
                {
                    this.IsDirty = true;
                    this._passwordFormat = value;
                    OnPropertyChanged(() => PasswordFormat);
                    PropertyChangedCompleted(() => PasswordFormat);
                }
            }
        }

        protected Nullable<int> _keepBackUp;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the KeepBackUp</param>
        /// </summary>
        public Nullable<int> KeepBackUp
        {
            get { return this._keepBackUp; }
            set
            {
                if (this._keepBackUp != value)
                {
                    this.IsDirty = true;
                    this._keepBackUp = value;
                    OnPropertyChanged(() => KeepBackUp);
                    PropertyChangedCompleted(() => KeepBackUp);
                }
            }
        }

        protected Nullable<short> _costMethod;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the CostMethod</param>
        /// </summary>
        public Nullable<short> CostMethod
        {
            get { return this._costMethod; }
            set
            {
                if (this._costMethod != value)
                {
                    this.IsDirty = true;
                    this._costMethod = value;
                    OnPropertyChanged(() => CostMethod);
                    PropertyChangedCompleted(() => CostMethod);
                }
            }
        }

        protected Nullable<System.DateTime> _genDate;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the GenDate</param>
        /// </summary>
        public Nullable<System.DateTime> GenDate
        {
            get { return this._genDate; }
            set
            {
                if (this._genDate != value)
                {
                    this.IsDirty = true;
                    this._genDate = value;
                    OnPropertyChanged(() => GenDate);
                    PropertyChangedCompleted(() => GenDate);
                }
            }
        }

        protected string _regNo;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the RegNo</param>
        /// </summary>
        public string RegNo
        {
            get { return this._regNo; }
            set
            {
                if (this._regNo != value)
                {
                    this.IsDirty = true;
                    this._regNo = value;
                    OnPropertyChanged(() => RegNo);
                    PropertyChangedCompleted(() => RegNo);
                }
            }
        }

        protected string _mD5Lic;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the MD5Lic</param>
        /// </summary>
        public string MD5Lic
        {
            get { return this._mD5Lic; }
            set
            {
                if (this._mD5Lic != value)
                {
                    this.IsDirty = true;
                    this._mD5Lic = value;
                    OnPropertyChanged(() => MD5Lic);
                    PropertyChangedCompleted(() => MD5Lic);
                }
            }
        }

        protected string _storeFolder;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the StoreFolder</param>
        /// </summary>
        public string StoreFolder
        {
            get { return this._storeFolder; }
            set
            {
                if (this._storeFolder != value)
                {
                    this.IsDirty = true;
                    this._storeFolder = value;
                    OnPropertyChanged(() => StoreFolder);
                    PropertyChangedCompleted(() => StoreFolder);
                }
            }
        }

        protected Nullable<System.TimeSpan> _synSchedule;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the SynSchedule</param>
        /// </summary>
        public Nullable<System.TimeSpan> SynSchedule
        {
            get { return this._synSchedule; }
            set
            {
                if (this._synSchedule != value)
                {
                    this.IsDirty = true;
                    this._synSchedule = value;
                    OnPropertyChanged(() => SynSchedule);
                    PropertyChangedCompleted(() => SynSchedule);
                }
            }
        }

        protected Nullable<short> _storeCode;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the StoreCode</param>
        /// </summary>
        public Nullable<short> StoreCode
        {
            get { return this._storeCode; }
            set
            {
                if (this._storeCode != value)
                {
                    this.IsDirty = true;
                    this._storeCode = value;
                    OnPropertyChanged(() => StoreCode);
                    PropertyChangedCompleted(() => StoreCode);
                }
            }
        }

        protected Nullable<bool> _isLive;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the IsLive</param>
        /// </summary>
        public Nullable<bool> IsLive
        {
            get { return this._isLive; }
            set
            {
                if (this._isLive != value)
                {
                    this.IsDirty = true;
                    this._isLive = value;
                    OnPropertyChanged(() => IsLive);
                    PropertyChangedCompleted(() => IsLive);
                }
            }
        }

        protected string _pOSId;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the POSId</param>
        /// </summary>
        public string POSId
        {
            get { return this._pOSId; }
            set
            {
                if (this._pOSId != value)
                {
                    this.IsDirty = true;
                    this._pOSId = value;
                    OnPropertyChanged(() => POSId);
                    PropertyChangedCompleted(() => POSId);
                }
            }
        }

        protected Nullable<int> _expireDate;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the ExpireDate</param>
        /// </summary>
        public Nullable<int> ExpireDate
        {
            get { return this._expireDate; }
            set
            {
                if (this._expireDate != value)
                {
                    this.IsDirty = true;
                    this._expireDate = value;
                    OnPropertyChanged(() => ExpireDate);
                    PropertyChangedCompleted(() => ExpireDate);
                }
            }
        }

        protected Nullable<bool> _isRewardOnDiscount;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the IsRewardOnDiscount</param>
        /// </summary>
        public Nullable<bool> IsRewardOnDiscount
        {
            get { return this._isRewardOnDiscount; }
            set
            {
                if (this._isRewardOnDiscount != value)
                {
                    this.IsDirty = true;
                    this._isRewardOnDiscount = value;
                    OnPropertyChanged(() => IsRewardOnDiscount);
                    PropertyChangedCompleted(() => IsRewardOnDiscount);
                }
            }
        }

        protected bool _isCalRewardAfterRedeem;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the IsCalRewardAfterRedeem</param>
        /// </summary>
        public bool IsCalRewardAfterRedeem
        {
            get { return this._isCalRewardAfterRedeem; }
            set
            {
                if (this._isCalRewardAfterRedeem != value)
                {
                    this.IsDirty = true;
                    this._isCalRewardAfterRedeem = value;
                    OnPropertyChanged(() => IsCalRewardAfterRedeem);
                    PropertyChangedCompleted(() => IsCalRewardAfterRedeem);
                }
            }
        }

        protected bool _isRewardOnRetailer;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the IsRewardOnRetailer</param>
        /// </summary>
        public bool IsRewardOnRetailer
        {
            get { return this._isRewardOnRetailer; }
            set
            {
                if (this._isRewardOnRetailer != value)
                {
                    this.IsDirty = true;
                    this._isRewardOnRetailer = value;
                    OnPropertyChanged(() => IsRewardOnRetailer);
                    PropertyChangedCompleted(() => IsRewardOnRetailer);
                }
            }
        }

        protected string _receiptMessage;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the ReceiptMessage</param>
        /// </summary>
        public string ReceiptMessage
        {
            get { return this._receiptMessage; }
            set
            {
                if (this._receiptMessage != value)
                {
                    this.IsDirty = true;
                    this._receiptMessage = value;
                    OnPropertyChanged(() => ReceiptMessage);
                    PropertyChangedCompleted(() => ReceiptMessage);
                }
            }
        }

        protected short _negativeNumber;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the NegativeNumber</param>
        /// </summary>
        public short NegativeNumber
        {
            get { return this._negativeNumber; }
            set
            {
                if (this._negativeNumber != value)
                {
                    this.IsDirty = true;
                    this._negativeNumber = value;
                    OnPropertyChanged(() => NegativeNumber);
                    PropertyChangedCompleted(() => NegativeNumber);
                }
            }
        }

        protected short _textNumberAlign;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the TextNumberAlign</param>
        /// </summary>
        public short TextNumberAlign
        {
            get { return this._textNumberAlign; }
            set
            {
                if (this._textNumberAlign != value)
                {
                    this.IsDirty = true;
                    this._textNumberAlign = value;
                    OnPropertyChanged(() => TextNumberAlign);
                    PropertyChangedCompleted(() => TextNumberAlign);
                }
            }
        }

        protected bool _isAUPPG;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the IsAUPPG</param>
        /// </summary>
        public bool IsAUPPG
        {
            get { return this._isAUPPG; }
            set
            {
                if (this._isAUPPG != value)
                {
                    this.IsDirty = true;
                    this._isAUPPG = value;
                    OnPropertyChanged(() => IsAUPPG);
                    PropertyChangedCompleted(() => IsAUPPG);
                }
            }
        }

        protected bool _isStateCode;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the IsStateCode</param>
        /// </summary>
        public bool IsStateCode
        {
            get { return this._isStateCode; }
            set
            {
                if (this._isStateCode != value)
                {
                    this.IsDirty = true;
                    this._isStateCode = value;
                    OnPropertyChanged(() => IsStateCode);
                    PropertyChangedCompleted(() => IsStateCode);
                }
            }
        }

        protected bool _isManualGenerate;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the IsManualGenerate</param>
        /// </summary>
        public bool IsManualGenerate
        {
            get { return this._isManualGenerate; }
            set
            {
                if (this._isManualGenerate != value)
                {
                    this.IsDirty = true;
                    this._isManualGenerate = value;
                    OnPropertyChanged(() => IsManualGenerate);
                    PropertyChangedCompleted(() => IsManualGenerate);
                }
            }
        }

        protected bool _isAllowFirstCap;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the IsAllowFirstCap</param>
        /// </summary>
        public bool IsAllowFirstCap
        {
            get { return this._isAllowFirstCap; }
            set
            {
                if (this._isAllowFirstCap != value)
                {
                    this.IsDirty = true;
                    this._isAllowFirstCap = value;
                    OnPropertyChanged(() => IsAllowFirstCap);
                    PropertyChangedCompleted(() => IsAllowFirstCap);
                }
            }
        }

        protected string _dataSource;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the DataSource</param>
        /// </summary>
        public string DataSource
        {
            get { return this._dataSource; }
            set
            {
                if (this._dataSource != value)
                {
                    this.IsDirty = true;
                    this._dataSource = value;
                    OnPropertyChanged(() => DataSource);
                    PropertyChangedCompleted(() => DataSource);
                }
            }
        }

        protected bool _isSendEmailCustomer;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the IsSendEmailCustomer</param>
        /// </summary>
        public bool IsSendEmailCustomer
        {
            get { return this._isSendEmailCustomer; }
            set
            {
                if (this._isSendEmailCustomer != value)
                {
                    this.IsDirty = true;
                    this._isSendEmailCustomer = value;
                    OnPropertyChanged(() => IsSendEmailCustomer);
                    PropertyChangedCompleted(() => IsSendEmailCustomer);
                }
            }
        }

        protected bool _isAllowAntiExemptionTax;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the IsAllowAntiExemptionTax</param>
        /// </summary>
        public bool IsAllowAntiExemptionTax
        {
            get { return this._isAllowAntiExemptionTax; }
            set
            {
                if (this._isAllowAntiExemptionTax != value)
                {
                    this.IsDirty = true;
                    this._isAllowAntiExemptionTax = value;
                    OnPropertyChanged(() => IsAllowAntiExemptionTax);
                    PropertyChangedCompleted(() => IsAllowAntiExemptionTax);
                }
            }
        }

        protected bool _isManualPriceCalculation;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the IsManualPriceCalculation</param>
        /// </summary>
        public bool IsManualPriceCalculation
        {
            get { return this._isManualPriceCalculation; }
            set
            {
                if (this._isManualPriceCalculation != value)
                {
                    this.IsDirty = true;
                    this._isManualPriceCalculation = value;
                    OnPropertyChanged(() => IsManualPriceCalculation);
                    PropertyChangedCompleted(() => IsManualPriceCalculation);
                }
            }
        }

        protected bool _isAllowPayMultiReward;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the IsAllowPayMultiReward</param>
        /// </summary>
        public bool IsAllowPayMultiReward
        {
            get { return this._isAllowPayMultiReward; }
            set
            {
                if (this._isAllowPayMultiReward != value)
                {
                    this.IsDirty = true;
                    this._isAllowPayMultiReward = value;
                    OnPropertyChanged(() => IsAllowPayMultiReward);
                    PropertyChangedCompleted(() => IsAllowPayMultiReward);
                }
            }
        }

        protected bool _isSumCashReward;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the IsSumCashReward</param>
        /// </summary>
        public bool IsSumCashReward
        {
            get { return this._isSumCashReward; }
            set
            {
                if (this._isSumCashReward != value)
                {
                    this.IsDirty = true;
                    this._isSumCashReward = value;
                    OnPropertyChanged(() => IsSumCashReward);
                    PropertyChangedCompleted(() => IsSumCashReward);
                }
            }
        }

        protected bool _isAllwayCommision;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the IsAllwayCommision</param>
        /// </summary>
        public bool IsAllwayCommision
        {
            get { return this._isAllwayCommision; }
            set
            {
                if (this._isAllwayCommision != value)
                {
                    this.IsDirty = true;
                    this._isAllwayCommision = value;
                    OnPropertyChanged(() => IsAllwayCommision);
                    PropertyChangedCompleted(() => IsAllwayCommision);
                }
            }
        }

        protected short _reminderDay;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the ReminderDay</param>
        /// </summary>
        public short ReminderDay
        {
            get { return this._reminderDay; }
            set
            {
                if (this._reminderDay != value)
                {
                    this.IsDirty = true;
                    this._reminderDay = value;
                    OnPropertyChanged(() => ReminderDay);
                    PropertyChangedCompleted(() => ReminderDay);
                }
            }
        }

        protected int _weekHour;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the WeekHour</param>
        /// </summary>
        public int WeekHour
        {
            get { return this._weekHour; }
            set
            {
                if (this._weekHour != value)
                {
                    this.IsDirty = true;
                    this._weekHour = value;
                    OnPropertyChanged(() => WeekHour);
                    PropertyChangedCompleted(() => WeekHour);
                }
            }
        }

        protected decimal _refundVoucherThresHold;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the RefundVoucherThresHold</param>
        /// </summary>
        public decimal RefundVoucherThresHold
        {
            get { return this._refundVoucherThresHold; }
            set
            {
                if (this._refundVoucherThresHold != value)
                {
                    this.IsDirty = true;
                    this._refundVoucherThresHold = value;
                    OnPropertyChanged(() => RefundVoucherThresHold);
                    PropertyChangedCompleted(() => RefundVoucherThresHold);
                }
            }
        }

        protected System.DateTime _sysDate;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the SysDate</param>
        /// </summary>
        public System.DateTime SysDate
        {
            get { return this._sysDate; }
            set
            {
                if (this._sysDate != value)
                {
                    this.IsDirty = true;
                    this._sysDate = value;
                    OnPropertyChanged(() => SysDate);
                    PropertyChangedCompleted(() => SysDate);
                }
            }
        }

        protected bool _isAutoSearch;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the IsAutoSearch</param>
        /// </summary>
        public bool IsAutoSearch
        {
            get { return this._isAutoSearch; }
            set
            {
                if (this._isAutoSearch != value)
                {
                    this.IsDirty = true;
                    this._isAutoSearch = value;
                    OnPropertyChanged(() => IsAutoSearch);
                    PropertyChangedCompleted(() => IsAutoSearch);
                }
            }
        }

        #endregion

        #region Public Methods

        /// <summary>
        /// <param>Public Method</param>
        /// Method for set IsNew & IsDirty = false;
        /// </summary>
        public void EndUpdate()
        {
            this.IsNew = false;
            this.IsDirty = false;
        }

        /// <summary>
        /// Public Method
        /// <param>Method for set PropertyModel to Entity</param>
        /// </summary>
        public void ToEntity()
        {
            if (IsNew)
                this.base_Configuration.Id = this.Id;
            if (this.CompanyName != null)
                this.base_Configuration.CompanyName = this.CompanyName.Trim();
            if (this.Address != null)
                this.base_Configuration.Address = this.Address.Trim();
            if (this.City != null)
                this.base_Configuration.City = this.City.Trim();
            this.base_Configuration.State = this.State;
            if (this.ZipCode != null)
                this.base_Configuration.ZipCode = this.ZipCode.Trim();
            this.base_Configuration.CountryId = this.CountryId;
            if (this.Phone != null)
                this.base_Configuration.Phone = this.Phone.Trim();
            if (this.Fax != null)
                this.base_Configuration.Fax = this.Fax.Trim();
            if (this.Email != null)
                this.base_Configuration.Email = this.Email.Trim();
            if (this.Website != null)
                this.base_Configuration.Website = this.Website.Trim();
            if (this.EmailPop3Server != null)
                this.base_Configuration.EmailPop3Server = this.EmailPop3Server.Trim();
            this.base_Configuration.EmailPop3Port = this.EmailPop3Port;
            if (this.EmailAccount != null)
                this.base_Configuration.EmailAccount = this.EmailAccount.Trim();
            if (this.EmailPassword != null)
                this.base_Configuration.EmailPassword = this.EmailPassword.Trim();
            this.base_Configuration.IsBarcodeScannerAttached = this.IsBarcodeScannerAttached;
            this.base_Configuration.IsEnableTouchScreenLayout = this.IsEnableTouchScreenLayout;
            this.base_Configuration.IsAllowTimeClockAttached = this.IsAllowTimeClockAttached;
            this.base_Configuration.IsAllowCollectTipCreditCard = this.IsAllowCollectTipCreditCard;
            this.base_Configuration.IsAllowMutilUOM = this.IsAllowMutilUOM;
            this.base_Configuration.DefaultMaximumSticky = this.DefaultMaximumSticky;
            this.base_Configuration.DefaultPriceSchema = this.DefaultPriceSchema;
            this.base_Configuration.DefaultPaymentMethod = this.DefaultPaymentMethod;
            this.base_Configuration.DefaultSaleTaxLocation = this.DefaultSaleTaxLocation;
            if (this.DefaultTaxCodeNewDepartment != null)
                this.base_Configuration.DefaultTaxCodeNewDepartment = this.DefaultTaxCodeNewDepartment.Trim();
            if (this.DefautlImagePath != null)
                this.base_Configuration.DefautlImagePath = this.DefautlImagePath.Trim();
            this.base_Configuration.DefautlDiscountScheduleTime = this.DefautlDiscountScheduleTime;
            this.base_Configuration.DateCreated = this.DateCreated;
            if (this.UserCreated != null)
                this.base_Configuration.UserCreated = this.UserCreated.Trim();
            this.base_Configuration.TotalStore = this.TotalStore;
            this.base_Configuration.IsRequirePromotionCode = this.IsRequirePromotionCode;
            this.base_Configuration.DefaultDiscountType = this.DefaultDiscountType;
            this.base_Configuration.DefaultDiscountStatus = this.DefaultDiscountStatus;
            this.base_Configuration.LoginAllow = this.LoginAllow;
            this.base_Configuration.Logo = this.Logo;
            this.base_Configuration.DefaultScanMethod = this.DefaultScanMethod;
            this.base_Configuration.TipPercent = this.TipPercent;
            this.base_Configuration.AcceptedPaymentMethod = this.AcceptedPaymentMethod;
            this.base_Configuration.AcceptedCardType = this.AcceptedCardType;
            this.base_Configuration.IsRequireDiscountReason = this.IsRequireDiscountReason;
            this.base_Configuration.WorkHour = this.WorkHour;
            this.base_Configuration.DefaultShipUnit = this.DefaultShipUnit;
            this.base_Configuration.DefaultCashiedUserName = this.DefaultCashiedUserName;
            this.base_Configuration.KeepLog = this.KeepLog;
            this.base_Configuration.IsAllowShift = this.IsAllowShift;
            if (this.DefaultLanguage != null)
                this.base_Configuration.DefaultLanguage = this.DefaultLanguage.Trim();
            this.base_Configuration.TimeOutMinute = this.TimeOutMinute;
            this.base_Configuration.IsAutoLogout = this.IsAutoLogout;
            this.base_Configuration.IsBackupWhenExit = this.IsBackupWhenExit;
            this.base_Configuration.BackupEvery = this.BackupEvery;
            if (this.BackupPath != null)
                this.base_Configuration.BackupPath = this.BackupPath.Trim();
            this.base_Configuration.IsAllowRGO = this.IsAllowRGO;
            this.base_Configuration.IsAllowChangeOrder = this.IsAllowChangeOrder;
            this.base_Configuration.IsAllowNegativeStore = this.IsAllowNegativeStore;
            this.base_Configuration.IsRewardOnTax = this.IsRewardOnTax;
            this.base_Configuration.IsRewardOnMultiPayment = this.IsRewardOnMultiPayment;
            this.base_Configuration.IsIncludeReturnFee = this.IsIncludeReturnFee;
            this.base_Configuration.ReturnFeePercent = this.ReturnFeePercent;
            this.base_Configuration.IsRewardLessThanDiscount = this.IsRewardLessThanDiscount;
            if (this.CurrencySymbol != null)
                this.base_Configuration.CurrencySymbol = this.CurrencySymbol.Trim();
            this.base_Configuration.DecimalPlaces = this.DecimalPlaces;
            if (this.FomartCurrency != null)
                this.base_Configuration.FomartCurrency = this.FomartCurrency.Trim();
            if (this.PasswordFormat != null)
                this.base_Configuration.PasswordFormat = this.PasswordFormat.Trim();
            this.base_Configuration.KeepBackUp = this.KeepBackUp;
            this.base_Configuration.CostMethod = this.CostMethod;
            this.base_Configuration.GenDate = this.GenDate;
            if (this.RegNo != null)
                this.base_Configuration.RegNo = this.RegNo.Trim();
            if (this.MD5Lic != null)
                this.base_Configuration.MD5Lic = this.MD5Lic.Trim();
            if (this.StoreFolder != null)
                this.base_Configuration.StoreFolder = this.StoreFolder.Trim();
            this.base_Configuration.SynSchedule = this.SynSchedule;
            this.base_Configuration.StoreCode = this.StoreCode;
            this.base_Configuration.IsLive = this.IsLive;
            if (this.POSId != null)
                this.base_Configuration.POSId = this.POSId.Trim();
            this.base_Configuration.ExpireDate = this.ExpireDate;
            this.base_Configuration.IsRewardOnDiscount = this.IsRewardOnDiscount;
            this.base_Configuration.IsCalRewardAfterRedeem = this.IsCalRewardAfterRedeem;
            this.base_Configuration.IsRewardOnRetailer = this.IsRewardOnRetailer;
            if (this.ReceiptMessage != null)
                this.base_Configuration.ReceiptMessage = this.ReceiptMessage.Trim();
            this.base_Configuration.NegativeNumber = this.NegativeNumber;
            this.base_Configuration.TextNumberAlign = this.TextNumberAlign;
            this.base_Configuration.IsAUPPG = this.IsAUPPG;
            this.base_Configuration.IsStateCode = this.IsStateCode;
            this.base_Configuration.IsManualGenerate = this.IsManualGenerate;
            this.base_Configuration.IsAllowFirstCap = this.IsAllowFirstCap;
            if (this.DataSource != null)
                this.base_Configuration.DataSource = this.DataSource.Trim();
            this.base_Configuration.IsSendEmailCustomer = this.IsSendEmailCustomer;
            this.base_Configuration.IsAllowAntiExemptionTax = this.IsAllowAntiExemptionTax;
            this.base_Configuration.IsManualPriceCalculation = this.IsManualPriceCalculation;
            this.base_Configuration.IsAllowPayMultiReward = this.IsAllowPayMultiReward;
            this.base_Configuration.IsSumCashReward = this.IsSumCashReward;
            this.base_Configuration.IsAllwayCommision = this.IsAllwayCommision;
            this.base_Configuration.ReminderDay = this.ReminderDay;
            this.base_Configuration.WeekHour = this.WeekHour;
            this.base_Configuration.RefundVoucherThresHold = this.RefundVoucherThresHold;
            this.base_Configuration.SysDate = this.SysDate;
            this.base_Configuration.IsAutoSearch = this.IsAutoSearch;
        }

        /// <summary>
        /// Public Method
        /// <param>Method for set Entity to PropertyModel</param>
        /// </summary
        public void ToModel()
        {
            this._companyName = this.base_Configuration.CompanyName;
            this._address = this.base_Configuration.Address;
            this._city = this.base_Configuration.City;
            this._state = this.base_Configuration.State;
            this._zipCode = this.base_Configuration.ZipCode;
            this._countryId = this.base_Configuration.CountryId;
            this._phone = this.base_Configuration.Phone;
            this._fax = this.base_Configuration.Fax;
            this._email = this.base_Configuration.Email;
            this._website = this.base_Configuration.Website;
            this._emailPop3Server = this.base_Configuration.EmailPop3Server;
            this._emailPop3Port = this.base_Configuration.EmailPop3Port;
            this._emailAccount = this.base_Configuration.EmailAccount;
            this._emailPassword = this.base_Configuration.EmailPassword;
            this._isBarcodeScannerAttached = this.base_Configuration.IsBarcodeScannerAttached;
            this._isEnableTouchScreenLayout = this.base_Configuration.IsEnableTouchScreenLayout;
            this._isAllowTimeClockAttached = this.base_Configuration.IsAllowTimeClockAttached;
            this._isAllowCollectTipCreditCard = this.base_Configuration.IsAllowCollectTipCreditCard;
            this._isAllowMutilUOM = this.base_Configuration.IsAllowMutilUOM;
            this._defaultMaximumSticky = this.base_Configuration.DefaultMaximumSticky;
            this._defaultPriceSchema = this.base_Configuration.DefaultPriceSchema;
            this._defaultPaymentMethod = this.base_Configuration.DefaultPaymentMethod;
            this._defaultSaleTaxLocation = this.base_Configuration.DefaultSaleTaxLocation;
            this._defaultTaxCodeNewDepartment = this.base_Configuration.DefaultTaxCodeNewDepartment;
            this._defautlImagePath = this.base_Configuration.DefautlImagePath;
            this._defautlDiscountScheduleTime = this.base_Configuration.DefautlDiscountScheduleTime;
            this._dateCreated = this.base_Configuration.DateCreated;
            this._userCreated = this.base_Configuration.UserCreated;
            this._totalStore = this.base_Configuration.TotalStore;
            this._isRequirePromotionCode = this.base_Configuration.IsRequirePromotionCode;
            this._defaultDiscountType = this.base_Configuration.DefaultDiscountType;
            this._defaultDiscountStatus = this.base_Configuration.DefaultDiscountStatus;
            this._loginAllow = this.base_Configuration.LoginAllow;
            this._logo = this.base_Configuration.Logo;
            this._defaultScanMethod = this.base_Configuration.DefaultScanMethod;
            this._tipPercent = this.base_Configuration.TipPercent;
            this._acceptedPaymentMethod = this.base_Configuration.AcceptedPaymentMethod;
            this._acceptedCardType = this.base_Configuration.AcceptedCardType;
            this._isRequireDiscountReason = this.base_Configuration.IsRequireDiscountReason;
            this._workHour = this.base_Configuration.WorkHour;
            this._id = this.base_Configuration.Id;
            this._defaultShipUnit = this.base_Configuration.DefaultShipUnit;
            this._defaultCashiedUserName = this.base_Configuration.DefaultCashiedUserName;
            this._keepLog = this.base_Configuration.KeepLog;
            this._isAllowShift = this.base_Configuration.IsAllowShift;
            this._defaultLanguage = this.base_Configuration.DefaultLanguage;
            this._timeOutMinute = this.base_Configuration.TimeOutMinute;
            this._isAutoLogout = this.base_Configuration.IsAutoLogout;
            this._isBackupWhenExit = this.base_Configuration.IsBackupWhenExit;
            this._backupEvery = this.base_Configuration.BackupEvery;
            this._backupPath = this.base_Configuration.BackupPath;
            this._isAllowRGO = this.base_Configuration.IsAllowRGO;
            this._isAllowChangeOrder = this.base_Configuration.IsAllowChangeOrder;
            this._isAllowNegativeStore = this.base_Configuration.IsAllowNegativeStore;
            this._isRewardOnTax = this.base_Configuration.IsRewardOnTax;
            this._isRewardOnMultiPayment = this.base_Configuration.IsRewardOnMultiPayment;
            this._isIncludeReturnFee = this.base_Configuration.IsIncludeReturnFee;
            this._returnFeePercent = this.base_Configuration.ReturnFeePercent;
            this._isRewardLessThanDiscount = this.base_Configuration.IsRewardLessThanDiscount;
            this._currencySymbol = this.base_Configuration.CurrencySymbol;
            this._decimalPlaces = this.base_Configuration.DecimalPlaces;
            this._fomartCurrency = this.base_Configuration.FomartCurrency;
            this._passwordFormat = this.base_Configuration.PasswordFormat;
            this._keepBackUp = this.base_Configuration.KeepBackUp;
            this._costMethod = this.base_Configuration.CostMethod;
            this._genDate = this.base_Configuration.GenDate;
            this._regNo = this.base_Configuration.RegNo;
            this._mD5Lic = this.base_Configuration.MD5Lic;
            this._storeFolder = this.base_Configuration.StoreFolder;
            this._synSchedule = this.base_Configuration.SynSchedule;
            this._storeCode = this.base_Configuration.StoreCode;
            this._isLive = this.base_Configuration.IsLive;
            this._pOSId = this.base_Configuration.POSId;
            this._expireDate = this.base_Configuration.ExpireDate;
            this._isRewardOnDiscount = this.base_Configuration.IsRewardOnDiscount;
            this._isCalRewardAfterRedeem = this.base_Configuration.IsCalRewardAfterRedeem;
            this._isRewardOnRetailer = this.base_Configuration.IsRewardOnRetailer;
            this._receiptMessage = this.base_Configuration.ReceiptMessage;
            this._negativeNumber = this.base_Configuration.NegativeNumber;
            this._textNumberAlign = this.base_Configuration.TextNumberAlign;
            this._isAUPPG = this.base_Configuration.IsAUPPG;
            this._isStateCode = this.base_Configuration.IsStateCode;
            this._isManualGenerate = this.base_Configuration.IsManualGenerate;
            this._isAllowFirstCap = this.base_Configuration.IsAllowFirstCap;
            this._dataSource = this.base_Configuration.DataSource;
            this._isSendEmailCustomer = this.base_Configuration.IsSendEmailCustomer;
            this._isAllowAntiExemptionTax = this.base_Configuration.IsAllowAntiExemptionTax;
            this._isManualPriceCalculation = this.base_Configuration.IsManualPriceCalculation;
            this._isAllowPayMultiReward = this.base_Configuration.IsAllowPayMultiReward;
            this._isSumCashReward = this.base_Configuration.IsSumCashReward;
            this._isAllwayCommision = this.base_Configuration.IsAllwayCommision;
            this._reminderDay = this.base_Configuration.ReminderDay;
            this._weekHour = this.base_Configuration.WeekHour;
            this._refundVoucherThresHold = this.base_Configuration.RefundVoucherThresHold;
            this._sysDate = this.base_Configuration.SysDate;
            this._isAutoSearch = this.base_Configuration.IsAutoSearch;
        }

        /// <summary>
        /// Public Method
        /// <param>Method for set Entity to PropertyModel</param>
        /// </summary
        public void ToModelAndRaise()
        {
            this.CompanyName = this.base_Configuration.CompanyName;
            this.Address = this.base_Configuration.Address;
            this.City = this.base_Configuration.City;
            this.State = this.base_Configuration.State;
            this.ZipCode = this.base_Configuration.ZipCode;
            this.CountryId = this.base_Configuration.CountryId;
            this.Phone = this.base_Configuration.Phone;
            this.Fax = this.base_Configuration.Fax;
            this.Email = this.base_Configuration.Email;
            this.Website = this.base_Configuration.Website;
            this.EmailPop3Server = this.base_Configuration.EmailPop3Server;
            this.EmailPop3Port = this.base_Configuration.EmailPop3Port;
            this.EmailAccount = this.base_Configuration.EmailAccount;
            this.EmailPassword = this.base_Configuration.EmailPassword;
            this.IsBarcodeScannerAttached = this.base_Configuration.IsBarcodeScannerAttached;
            this.IsEnableTouchScreenLayout = this.base_Configuration.IsEnableTouchScreenLayout;
            this.IsAllowTimeClockAttached = this.base_Configuration.IsAllowTimeClockAttached;
            this.IsAllowCollectTipCreditCard = this.base_Configuration.IsAllowCollectTipCreditCard;
            this.IsAllowMutilUOM = this.base_Configuration.IsAllowMutilUOM;
            this.DefaultMaximumSticky = this.base_Configuration.DefaultMaximumSticky;
            this.DefaultPriceSchema = this.base_Configuration.DefaultPriceSchema;
            this.DefaultPaymentMethod = this.base_Configuration.DefaultPaymentMethod;
            this.DefaultSaleTaxLocation = this.base_Configuration.DefaultSaleTaxLocation;
            this.DefaultTaxCodeNewDepartment = this.base_Configuration.DefaultTaxCodeNewDepartment;
            this.DefautlImagePath = this.base_Configuration.DefautlImagePath;
            this.DefautlDiscountScheduleTime = this.base_Configuration.DefautlDiscountScheduleTime;
            this.DateCreated = this.base_Configuration.DateCreated;
            this.UserCreated = this.base_Configuration.UserCreated;
            this.TotalStore = this.base_Configuration.TotalStore;
            this.IsRequirePromotionCode = this.base_Configuration.IsRequirePromotionCode;
            this.DefaultDiscountType = this.base_Configuration.DefaultDiscountType;
            this.DefaultDiscountStatus = this.base_Configuration.DefaultDiscountStatus;
            this.LoginAllow = this.base_Configuration.LoginAllow;
            this.Logo = this.base_Configuration.Logo;
            this.DefaultScanMethod = this.base_Configuration.DefaultScanMethod;
            this.TipPercent = this.base_Configuration.TipPercent;
            this.AcceptedPaymentMethod = this.base_Configuration.AcceptedPaymentMethod;
            this.AcceptedCardType = this.base_Configuration.AcceptedCardType;
            this.IsRequireDiscountReason = this.base_Configuration.IsRequireDiscountReason;
            this.WorkHour = this.base_Configuration.WorkHour;
            this.Id = this.base_Configuration.Id;
            this.DefaultShipUnit = this.base_Configuration.DefaultShipUnit;
            this.DefaultCashiedUserName = this.base_Configuration.DefaultCashiedUserName;
            this.KeepLog = this.base_Configuration.KeepLog;
            this.IsAllowShift = this.base_Configuration.IsAllowShift;
            this.DefaultLanguage = this.base_Configuration.DefaultLanguage;
            this.TimeOutMinute = this.base_Configuration.TimeOutMinute;
            this.IsAutoLogout = this.base_Configuration.IsAutoLogout;
            this.IsBackupWhenExit = this.base_Configuration.IsBackupWhenExit;
            this.BackupEvery = this.base_Configuration.BackupEvery;
            this.BackupPath = this.base_Configuration.BackupPath;
            this.IsAllowRGO = this.base_Configuration.IsAllowRGO;
            this.IsAllowChangeOrder = this.base_Configuration.IsAllowChangeOrder;
            this.IsAllowNegativeStore = this.base_Configuration.IsAllowNegativeStore;
            this.IsRewardOnTax = this.base_Configuration.IsRewardOnTax;
            this.IsRewardOnMultiPayment = this.base_Configuration.IsRewardOnMultiPayment;
            this.IsIncludeReturnFee = this.base_Configuration.IsIncludeReturnFee;
            this.ReturnFeePercent = this.base_Configuration.ReturnFeePercent;
            this.IsRewardLessThanDiscount = this.base_Configuration.IsRewardLessThanDiscount;
            this.CurrencySymbol = this.base_Configuration.CurrencySymbol;
            this.DecimalPlaces = this.base_Configuration.DecimalPlaces;
            this.FomartCurrency = this.base_Configuration.FomartCurrency;
            this.PasswordFormat = this.base_Configuration.PasswordFormat;
            this.KeepBackUp = this.base_Configuration.KeepBackUp;
            this.CostMethod = this.base_Configuration.CostMethod;
            this.GenDate = this.base_Configuration.GenDate;
            this.RegNo = this.base_Configuration.RegNo;
            this.MD5Lic = this.base_Configuration.MD5Lic;
            this.StoreFolder = this.base_Configuration.StoreFolder;
            this.SynSchedule = this.base_Configuration.SynSchedule;
            this.StoreCode = this.base_Configuration.StoreCode;
            this.IsLive = this.base_Configuration.IsLive;
            this.POSId = this.base_Configuration.POSId;
            this.ExpireDate = this.base_Configuration.ExpireDate;
            this.IsRewardOnDiscount = this.base_Configuration.IsRewardOnDiscount;
            this.IsCalRewardAfterRedeem = this.base_Configuration.IsCalRewardAfterRedeem;
            this.IsRewardOnRetailer = this.base_Configuration.IsRewardOnRetailer;
            this.ReceiptMessage = this.base_Configuration.ReceiptMessage;
            this.NegativeNumber = this.base_Configuration.NegativeNumber;
            this.TextNumberAlign = this.base_Configuration.TextNumberAlign;
            this.IsAUPPG = this.base_Configuration.IsAUPPG;
            this.IsStateCode = this.base_Configuration.IsStateCode;
            this.IsManualGenerate = this.base_Configuration.IsManualGenerate;
            this.IsAllowFirstCap = this.base_Configuration.IsAllowFirstCap;
            this.DataSource = this.base_Configuration.DataSource;
            this.IsSendEmailCustomer = this.base_Configuration.IsSendEmailCustomer;
            this.IsAllowAntiExemptionTax = this.base_Configuration.IsAllowAntiExemptionTax;
            this.IsManualPriceCalculation = this.base_Configuration.IsManualPriceCalculation;
            this.IsAllowPayMultiReward = this.base_Configuration.IsAllowPayMultiReward;
            this.IsSumCashReward = this.base_Configuration.IsSumCashReward;
            this.IsAllwayCommision = this.base_Configuration.IsAllwayCommision;
            this.ReminderDay = this.base_Configuration.ReminderDay;
            this.WeekHour = this.base_Configuration.WeekHour;
            this.RefundVoucherThresHold = this.base_Configuration.RefundVoucherThresHold;
            this.SysDate = this.base_Configuration.SysDate;
            this.IsAutoSearch = this.base_Configuration.IsAutoSearch;
        }

        #endregion

        #region Custom Code

        #region Fields

        /// <summary>
        /// Length of Zipcode (5).
        /// </summary>
        private readonly short _outZipCodeLength1 = 5;

        /// <summary>
        /// Length of Zipcode (9).
        /// </summary>
        private readonly short _outZipCodeLength2 = 9;

        /// <summary>
        /// Not select in ComboBox.
        /// </summary>
        private readonly short _notSelect = 0;

        #endregion

        #region Properties

        #region IsGeneralDirty

        private bool _isGeneralDirty;
        /// <summary>
        /// Gets or sets value whether general setup is dirty.
        /// </summary>
        public bool IsGeneralDirty
        {
            get
            {
                return _isGeneralDirty;
            }
            set
            {
                if (_isGeneralDirty != value)
                {
                    _isGeneralDirty = value;
                    OnPropertyChanged(() => IsGeneralDirty);
                }
            }
        }

        #endregion

        #region IsStoreInfoDirty

        private bool _isStoreInfoDirty;
        /// <summary>
        /// Gets or sets value whether company information is dirty.
        /// </summary>
        public bool IsStoreInfoDirty
        {
            get
            {
                return _isStoreInfoDirty;
            }
            set
            {
                if (_isStoreInfoDirty != value)
                {
                    _isStoreInfoDirty = value;
                    OnPropertyChanged(() => IsStoreInfoDirty);
                }
            }
        }

        #endregion

        #region IsInventoryDirty

        private bool _isInventoryDirty;
        /// <summary>
        /// Gets or sets value whether inventory setup is dirty.
        /// </summary>
        public bool IsInventoryDirty
        {
            get
            {
                return _isInventoryDirty;
            }
            set
            {
                if (_isInventoryDirty != value)
                {
                    _isInventoryDirty = value;
                    OnPropertyChanged(() => IsInventoryDirty);
                }
            }
        }

        #endregion

        #region IsUnitOfMeasureDirty

        private bool _isUnitOfMeasureDirty;
        /// <summary>
        /// Gets or sets value whether unit information is dirty.
        /// </summary>
        public bool IsUnitOfMeasureDirty
        {
            get
            {
                return _isUnitOfMeasureDirty;
            }
            set
            {
                if (_isUnitOfMeasureDirty != value)
                {
                    _isUnitOfMeasureDirty = value;
                    OnPropertyChanged(() => IsUnitOfMeasureDirty);
                }
            }
        }

        #endregion

        #region IsPricingDirty

        private bool _isPricingDirty;
        /// <summary>
        /// Gets or sets value whether pricing information is dirty.
        /// </summary>
        public bool IsPricingDirty
        {
            get
            {
                return _isPricingDirty;
            }
            set
            {
                if (_isPricingDirty != value)
                {
                    _isPricingDirty = value;
                    OnPropertyChanged(() => IsPricingDirty);
                }
            }
        }

        #endregion

        #region IsSalesDirty

        private bool _isSalesDirty;
        /// <summary>
        /// Gets or sets value whether sales information is dirty.
        /// </summary>
        public bool IsSalesDirty
        {
            get
            {
                return _isSalesDirty;
            }
            set
            {
                if (_isSalesDirty != value)
                {
                    _isSalesDirty = value;
                    OnPropertyChanged(() => IsSalesDirty);
                }
            }
        }

        #endregion

        #region IsDiscountDirty

        private bool _isDiscountDirty;
        /// <summary>
        /// Gets or sets value whether discount information is dirty.
        /// </summary>
        public bool IsDiscountDirty
        {
            get
            {
                return _isDiscountDirty;
            }
            set
            {
                if (_isDiscountDirty != value)
                {
                    _isDiscountDirty = value;
                    OnPropertyChanged(() => IsDiscountDirty);
                }
            }
        }

        #endregion

        #region IsShippingDirty

        private bool _isShippingDirty;
        /// <summary>
        /// Gets or sets value whether shipping information is dirty.
        /// </summary>
        public bool IsShippingDirty
        {
            get
            {
                return _isShippingDirty;
            }
            set
            {
                if (_isShippingDirty != value)
                {
                    _isShippingDirty = value;
                    OnPropertyChanged(() => IsShippingDirty);
                }
            }
        }

        #endregion

        #region IsRewardDirty

        private bool _isRewardDirty;
        /// <summary>
        /// Gets or sets value whether reward information is dirty.
        /// </summary>
        public bool IsRewardDirty
        {
            get
            {
                return _isRewardDirty;
            }
            set
            {
                if (_isRewardDirty != value)
                {
                    _isRewardDirty = value;
                    OnPropertyChanged(() => IsRewardDirty);
                }
            }
        }

        #endregion

        #region IsReturnDirty

        private bool _isReturnDirty;
        /// <summary>
        /// Gets or sets value whether return information is dirty.
        /// </summary>
        public bool IsReturnDirty
        {
            get
            {
                return _isReturnDirty;
            }
            set
            {
                if (_isReturnDirty != value)
                {
                    _isReturnDirty = value;
                    OnPropertyChanged(() => IsReturnDirty);
                }
            }
        }

        #endregion

        #region IsEmailSetupDirty

        private bool _isEmailSetupDirty;
        /// <summary>
        /// Gets or sets value whether email setup is dirty.
        /// </summary>
        public bool IsEmailSetupDirty
        {
            get
            {
                return _isEmailSetupDirty;
            }
            set
            {
                if (_isEmailSetupDirty != value)
                {
                    _isEmailSetupDirty = value;
                    OnPropertyChanged(() => IsEmailSetupDirty);
                }
            }
        }

        #endregion

        #region IsPurchaseOrderDirty

        private bool _isPurchaseOrderDirty;
        /// <summary>
        /// Gets or sets value whether purchase order information is dirty.
        /// </summary>
        public bool IsPurchaseOrderDirty
        {
            get
            {
                return _isPurchaseOrderDirty;
            }
            set
            {
                if (_isPurchaseOrderDirty != value)
                {
                    _isPurchaseOrderDirty = value;
                    OnPropertyChanged(() => IsPurchaseOrderDirty);
                }
            }
        }

        #endregion

        #region IsTimeClockDirty

        private bool _isTimeClockDirty;
        /// <summary>
        /// Gets or sets value whether time clock setup is dirty.
        /// </summary>
        public bool IsTimeClockDirty
        {
            get
            {
                return _isTimeClockDirty;
            }
            set
            {
                if (_isTimeClockDirty != value)
                {
                    _isTimeClockDirty = value;
                    OnPropertyChanged(() => IsTimeClockDirty);
                }
            }
        }

        #endregion

        #region IsBackupDirty

        private bool _isBackupDirty;
        /// <summary>
        /// Gets or sets value whether backup setup is dirty.
        /// </summary>
        public bool IsBackupDirty
        {
            get
            {
                return _isBackupDirty;
            }
            set
            {
                if (_isBackupDirty != value)
                {
                    _isBackupDirty = value;
                    OnPropertyChanged(() => IsBackupDirty);
                }
            }
        }

        #endregion

        #region IsVoucherDirty

        private bool _isVoucherDirty;
        /// <summary>
        /// Gets or sets value whether voucher information is dirty.
        /// </summary>
        public bool IsVoucherDirty
        {
            get
            {
                return _isVoucherDirty;
            }
            set
            {
                if (_isVoucherDirty != value)
                {
                    _isVoucherDirty = value;
                    OnPropertyChanged(() => IsVoucherDirty);
                }
            }
        }

        #endregion

        #region HasError

        /// <summary>
        /// Gets value indicate that this object has error or not.
        /// </summary>
        public bool HasError
        {
            get
            {
                return !string.IsNullOrWhiteSpace(Error);
            }
        }

        #endregion

        #region HasState

        /// <summary>
        /// Gets value indicate that this object has state or not.
        /// </summary>
        public bool HasState
        {
            get
            {
                ComboItem item = Common.Countries.FirstOrDefault(x => x.Value == _countryId);
                return item == null ? false : item.HasState;
            }
        }

        #endregion

        #region RetypeEmailPassword

        private string _retypeEmailPassword;
        /// <summary>
        /// Gets or sets RetypePassword.
        /// </summary>
        public string RetypeEmailPassword
        {
            get
            {
                return _retypeEmailPassword;
            }
            set
            {
                if (_retypeEmailPassword != value)
                {
                    _isDirty = true;
                    _retypeEmailPassword = value;
                    OnPropertyChanged(() => RetypeEmailPassword);
                    PropertyChangedCompleted(() => RetypeEmailPassword);
                }
            }
        }

        #endregion

        #region SettingParts

        private SettingParts _settingParts;
        /// <summary>
        /// Gets or sets item's SettingParts.
        /// </summary>
        public SettingParts SettingParts
        {
            get
            {
                return _settingParts;
            }
            set
            {
                if (_settingParts != value)
                {
                    _settingParts = value;
                    OnPropertyChanged(() => SettingParts);
                    PropertyChangedCompleted(() => SettingParts);
                }
            }
        }

        #endregion

        #region IsThresholdCashRefund

        private bool _isThresholdCashRefund;
        public bool IsThresholdCashRefund
        {
            get
            {
                return _isThresholdCashRefund;
            }
            set
            {
                if (_isThresholdCashRefund != value)
                {
                    _isThresholdCashRefund = value;
                    OnPropertyChanged(() => IsThresholdCashRefund);
                    PropertyChangedCompleted(() => IsThresholdCashRefund);
                }
            }
        }

        #endregion

        #region PhotoCollection

        /// <summary>
        /// Gets the PhotoCollection.
        /// </summary>
        public CollectionBase<base_ResourcePhotoModel> _photoCollection = new CollectionBase<base_ResourcePhotoModel>();
        public CollectionBase<base_ResourcePhotoModel> PhotoCollection
        {
            get
            {
                if (_photoCollection == null)
                {
                    if (_logo != null)
                    {
                        _photoCollection = new CollectionBase<base_ResourcePhotoModel>
                        {
                            new base_ResourcePhotoModel{ ImageBinary = Logo, IsNew = false, IsDirty = false }
                        };
                    }
                    else
                    {
                        _photoCollection = new CollectionBase<base_ResourcePhotoModel>();
                    }
                }
                return _photoCollection;
            }
        }

        #endregion


        #region DefaultScanMethodType

        /// <summary>
        /// Default Scan Method from config
        /// if null default type :BarcodeLib.TYPE.EAN13
        /// </summary>
        public BarcodeLib.TYPE DefaultScanMethodType
        {
            get { return GetBarcodeScanCodeDefault(); }
        }
        #endregion

        #endregion

        #region Methods

        #region ShallowClone

        /// <summary>
        /// Creates a shallow copy of this object.
        /// </summary>
        /// <returns>A shallow copy of this object.</returns>
        public base_ConfigurationModel ShallowClone()
        {
            return (base_ConfigurationModel)this.MemberwiseClone();
        }

        #endregion

        #region Restore

        /// <summary>
        /// Restore this object.
        /// </summary>
        public void Restore()
        {
            ToModelAndRaise();

            if (!_countryId.HasValue)
            {
                CountryId = 0;
            }
            if (!_state.HasValue)
            {
                State = 0;
            }
            if (base_Configuration != null && !string.IsNullOrWhiteSpace(base_Configuration.EmailPassword))
            {
                EmailPassword = Define.PasswordTemp;
                RetypeEmailPassword = Define.PasswordTemp;
            }
            else
            {
                EmailPassword = null;
                RetypeEmailPassword = null;
            }

            _photoCollection = null;
            OnPropertyChanged(() => PhotoCollection);

            IsThresholdCashRefund = _refundVoucherThresHold > 0;

            IsDirty = false;
            IsGeneralDirty = false;
            IsStoreInfoDirty = false;
            IsInventoryDirty = false;
            IsUnitOfMeasureDirty = false;
            IsPricingDirty = false;
            IsSalesDirty = false;
            IsDiscountDirty = false;
            IsShippingDirty = false;
            IsRewardDirty = false;
            IsReturnDirty = false;
            IsEmailSetupDirty = false;
            IsPurchaseOrderDirty = false;
            IsTimeClockDirty = false;
            IsBackupDirty = false;
            IsVoucherDirty = false;
        }

        #endregion

        #region RaiseDefaultPaymentMethodChanged

        /// <summary>
        /// Raise DefaultPaymentMethod property changed.
        /// </summary>
        public void RaiseDefaultPaymentMethodChanged()
        {
            OnPropertyChanged(() => DefaultPaymentMethod);
        }

        #endregion


        #region Get Barcode scan default
        private BarcodeLib.TYPE GetBarcodeScanCodeDefault()
        {
            BarcodeLib.TYPE result = BarcodeLib.TYPE.EAN13;

            if (DefaultScanMethod.HasValue)
            {
                switch (DefaultScanMethod.Value)
                {
                    case 1: // UPC-A  (Length == 11 or Length== 12)
                        result = BarcodeLib.TYPE.UPCA;
                        break;
                    case 2: // EAN-13 (Length >= 12)
                        result = BarcodeLib.TYPE.EAN13;
                        break;
                    case 3: // Code 128 (Length >= 1)
                        result = BarcodeLib.TYPE.CODE128;
                        break;
                }
            }
            return result;
        }
        #endregion


        #endregion

        #region Override Methods

        #region PropertyChangedCompleted

        protected override void PropertyChangedCompleted(string propertyName)
        {
            switch (propertyName)
            {
                #region CompanyName...

                case "CompanyName":
                case "Address":
                case "City":
                case "State":
                case "ZipCode":
                case "Fax":
                case "Phone":
                case "Email":
                case "Website":
                case "Logo":

                    IsStoreInfoDirty = true;

                    break;

                #endregion

                #region CountryId

                case "CountryId":

                    IsStoreInfoDirty = true;

                    // Validates again.
                    OnPropertyChanged(() => State);
                    OnPropertyChanged(() => ZipCode);

                    break;

                #endregion

                #region IsAllowMutilUOM

                case "IsAllowMutilUOM":

                    IsUnitOfMeasureDirty = true;

                    break;

                #endregion

                #region DefaultPriceSchema
                case "IsManualPriceCalculation":
                case "DefaultPriceSchema":

                    IsPricingDirty = true;
                    break;

                #endregion

                #region AcceptedPaymentMethod...

                case "AcceptedPaymentMethod":
                case "AcceptedCardType":
                case "DefaultPaymentMethod":
                case "TipPercent":
                case "AcceptedGiftCardMethod":
                case "IsAllowAntiExemptionTax":

                    IsSalesDirty = true;

                    break;

                #endregion

                #region IsAllowCollectTipCreditCard

                case "IsAllowCollectTipCreditCard":

                    if (_isAllowCollectTipCreditCard == false)
                    {
                        TipPercent = 0;
                    }

                    IsSalesDirty = true;

                    break;

                #endregion

                #region EmailPop3Server...

                case "EmailPop3Server":
                case "EmailPop3Port":
                case "EmailAccount":

                    IsEmailSetupDirty = true;

                    break;

                #endregion

                #region EmailPassword

                case "EmailPassword":

                    IsEmailSetupDirty = true;

                    // Validates again.
                    OnPropertyChanged(() => RetypeEmailPassword);

                    break;

                #endregion

                #region RetypeEmailPassword

                case "RetypeEmailPassword":

                    IsEmailSetupDirty = true;

                    // Validates again.
                    OnPropertyChanged(() => EmailPassword);

                    break;

                #endregion

                #region IsAllowNegativeStore...

                case "IsAllowNegativeStore":
                case "IsAUPPG":

                    IsInventoryDirty = true;

                    break;

                #endregion

                #region IsRewardOnTax...

                case "IsRewardOnTax":
                case "IsRewardLessThanDiscount":
                case "IsRewardOnDiscount":
                case "IsCalRewardAfterRedeem":
                case "IsAllowRewardByCash":
                case "IsSumCashReward":

                    IsRewardDirty = true;

                    break;

                #endregion

                #region IsIncludeReturnFee...

                case "IsIncludeReturnFee":
                case "ReturnFeePercent":

                    IsReturnDirty = true;

                    break;

                #endregion

                #region DefaultDiscountType...

                case "DefaultDiscountType":
                case "DefaultDiscountStatus":
                case "IsRequireDiscountReason":

                    IsDiscountDirty = true;

                    break;

                #endregion

                #region IsAllowChangeOrder

                case "IsAllowChangeOrder":

                    IsShippingDirty = true;

                    break;

                #endregion

                #region IsAllowRGO

                case "IsAllowRGO":

                    IsPurchaseOrderDirty = true;

                    break;

                #endregion

                #region WorkHour

                case "WorkHour":
                case "WeekHour":

                    IsTimeClockDirty = true;

                    break;

                #endregion

                #region DefaultMaximumSticky...

                case "DefaultMaximumSticky":
                case "DefaultShipUnit":
                case "DefautlImagePath":
                case "DefaultLanguage":
                case "IsAllowShift":
                case "DefaultCashiedUserName":
                case "IsRequirePromotionCode":
                case "KeepLog":
                case "CurrencySymbol":
                case "DecimalPlaces":
                case "PasswordFormat":
                case "IsAutoLogout":
                case "TimeOutMinute":
                case "NegativeNumber":
                case "TextNumberAlign":
                case "IsStateCode":
                case "IsManualGenerate":
                case "IsAllowFirstCap":
                case "IsSendEmailCustomer":
                case "IsAutoSearch":
                    IsGeneralDirty = true;

                    break;

                #endregion

                #region IsBackupWhenExit...

                case "IsBackupWhenExit":
                case "BackupEvery":
                case "KeepBackUp":
                case "BackupPath":

                    IsBackupDirty = true;

                    break;

                #endregion

                #region FomartCurrency

                case "FomartCurrency":

                    // Update symbol.
                    ComboItem item = Common.Currency.FirstOrDefault(x => x.CultureInfo.Name == _fomartCurrency);
                    if (item != null)
                    {
                        _currencySymbol = item.Symbol;
                    }

                    IsGeneralDirty = true;

                    break;

                #endregion

                #region SettingParts

                case "SettingParts":

                    // Validates again on StoreInfo.
                    OnPropertyChanged(() => CompanyName);
                    OnPropertyChanged(() => Address);
                    OnPropertyChanged(() => CountryId);
                    OnPropertyChanged(() => City);
                    OnPropertyChanged(() => State);
                    OnPropertyChanged(() => ZipCode);
                    OnPropertyChanged(() => Fax);
                    OnPropertyChanged(() => Phone);
                    OnPropertyChanged(() => Email);

                    // Validates again on Email.
                    OnPropertyChanged(() => EmailAccount);
                    OnPropertyChanged(() => EmailPassword);
                    OnPropertyChanged(() => RetypeEmailPassword);

                    break;

                #endregion

                #region IsThresholdCashRefund

                case "IsThresholdCashRefund":

                    IsVoucherDirty = true;
                    // Validate.
                    OnPropertyChanged(() => RefundVoucherThresHold);

                    break;

                #endregion

                #region RefundVoucherThresHold

                case "RefundVoucherThresHold":

                    IsVoucherDirty = true;

                    break;

                #endregion

                #region DefaultScanMethod
                 case "DefaultScanMethod":
                    IsInventoryDirty = true;
                    break;

                #endregion
            }
        }

        #endregion

        #endregion

        #region IDataErrorInfo Members

        public string Error
        {
            get
            {
                List<string> errors = new List<string>();
                PropertyDescriptorCollection props = TypeDescriptor.GetProperties(this);
                foreach (PropertyDescriptor prop in props)
                {
                    string msg = this[prop.Name];
                    if (!string.IsNullOrWhiteSpace(msg))
                    {
                        errors.Add(msg);
                    }
                }

                return string.Join(Environment.NewLine, errors);
            }
        }

        public string this[string columnName]
        {
            get
            {
                string message = null;

                switch (_settingParts)
                {
                    case SettingParts.General:
                        break;

                    #region StoreInfo

                    case SettingParts.StoreInfo:

                        switch (columnName)
                        {
                            case "CompanyName":

                                if (string.IsNullOrEmpty(_companyName))
                                {
                                    message = Language.Error6;
                                }

                                break;

                            case "Address":

                                if (string.IsNullOrEmpty(_address))
                                {
                                    message = Language.Error7;
                                }

                                break;

                            case "CountryId":

                                if (_countryId == _notSelect)
                                {
                                    message = Language.Error8;
                                }

                                break;

                            case "City":

                                if (string.IsNullOrEmpty(_city))
                                {
                                    message = Language.Error9;
                                }

                                break;

                            case "State":

                                if (HasState && _state == _notSelect)
                                {
                                    message = Language.Error10;
                                }

                                break;

                            case "ZipCode":

                                if (HasState && (string.IsNullOrEmpty(_zipCode) || (_zipCode.Length > _outZipCodeLength1 && _zipCode.Length < _outZipCodeLength2)))
                                {
                                    message = Language.Error11;
                                }

                                break;

                            case "Fax":

                                if (string.IsNullOrEmpty(_fax))
                                {
                                    message = Language.Error12;
                                }

                                break;

                            case "Phone":

                                if (string.IsNullOrEmpty(_phone))
                                {
                                    message = Language.Error13;
                                }

                                break;

                            case "Email":

                                if (string.IsNullOrEmpty(_email))
                                {
                                    message = Language.Error14;
                                }

                                break;
                        }

                        break;

                    #endregion

                    case SettingParts.Inventory:
                        break;

                    case SettingParts.UnitOfMeasure:
                        break;

                    #region Email

                    case SettingParts.Email:

                        switch (columnName)
                        {
                            case "EmailAccount":

                                if (string.IsNullOrEmpty(_emailAccount))
                                {
                                    message = Language.Error14;
                                }

                                break;

                            case "EmailPassword":
                            case "RetypeEmailPassword":

                                if (string.Compare(_emailPassword, _retypeEmailPassword, false) != 0)
                                {
                                    message = Language.Error15;
                                }

                                break;
                        }

                        break;

                    #endregion

                    case SettingParts.Voucher:

                        switch (columnName)
                        {
                            case "RefundVoucherThresHold":

                                if (_isThresholdCashRefund && _refundVoucherThresHold <= 0)
                                {
                                    message = "Required greater than 0";
                                }

                                break;
                        }

                        break;
                }


                return message;
            }
        }

        #endregion

        #endregion
    }
}

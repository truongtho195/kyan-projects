//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Linq;
using System.Linq.Expressions;
using CPC.Helper;
using CPC.POS.Database;
using CPC.Toolkit.Base;

namespace CPC.POS.Model
{
    /// <summary>
    /// Model for table base_PurchaseOrder
    /// </summary>
    [Serializable]
    public partial class base_PurchaseOrderModel : ModelBase, IDataErrorInfo
    {
        #region Constructor

        // Default constructor
        public base_PurchaseOrderModel()
        {
            this.IsNew = true;
            this.base_PurchaseOrder = new base_PurchaseOrder();
        }

        // Default constructor that set entity to field
        public base_PurchaseOrderModel(base_PurchaseOrder base_purchaseorder, bool isRaiseProperties = false)
        {
            this.base_PurchaseOrder = base_purchaseorder;
            if (!isRaiseProperties)
                this.ToModel();
            else
                this.ToModelAndRaise();
            this.IsDirty = false;
        }

        #endregion

        #region Entity Properties

        public base_PurchaseOrder base_PurchaseOrder { get; private set; }

        #endregion

        #region Primitive Properties

        protected long _id;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Id</param>
        /// </summary>
        public long Id
        {
            get { return this._id; }
            set
            {
                if (this._id != value)
                {
                    this.IsDirty = true;
                    this._id = value;
                    OnPropertyChanged(() => Id);
                    PropertyChangedCompleted(() => Id);
                }
            }
        }

        protected string _purchaseOrderNo;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the PurchaseOrderNo</param>
        /// </summary>
        public string PurchaseOrderNo
        {
            get { return this._purchaseOrderNo; }
            set
            {
                if (this._purchaseOrderNo != value)
                {
                    this.IsDirty = true;
                    this._purchaseOrderNo = value;
                    OnPropertyChanged(() => PurchaseOrderNo);
                    PropertyChangedCompleted(() => PurchaseOrderNo);
                }
            }
        }

        protected string _vendorCode;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the VendorCode</param>
        /// </summary>
        public string VendorCode
        {
            get { return this._vendorCode; }
            set
            {
                if (this._vendorCode != value)
                {
                    this.IsDirty = true;
                    this._vendorCode = value;
                    OnPropertyChanged(() => VendorCode);
                    PropertyChangedCompleted(() => VendorCode);
                }
            }
        }

        protected short _status;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Status</param>
        /// </summary>
        public short Status
        {
            get { return this._status; }
            set
            {
                if (this._status != value)
                {
                    this.IsDirty = true;
                    this._status = value;
                    OnPropertyChanged(() => Status);
                    PropertyChangedCompleted(() => Status);
                }
            }
        }

        protected string _shipAddress;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the ShipAddress</param>
        /// </summary>
        public string ShipAddress
        {
            get { return this._shipAddress; }
            set
            {
                if (this._shipAddress != value)
                {
                    this.IsDirty = true;
                    this._shipAddress = value;
                    OnPropertyChanged(() => ShipAddress);
                    PropertyChangedCompleted(() => ShipAddress);
                }
            }
        }

        protected System.DateTime _purchasedDate;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the PurchasedDate</param>
        /// </summary>
        public System.DateTime PurchasedDate
        {
            get { return this._purchasedDate; }
            set
            {
                if (this._purchasedDate != value)
                {
                    this.IsDirty = true;
                    this._purchasedDate = value;
                    OnPropertyChanged(() => PurchasedDate);
                    PropertyChangedCompleted(() => PurchasedDate);
                }
            }
        }

        protected decimal _termDiscountPercent;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the TermDiscountPercent</param>
        /// </summary>
        public decimal TermDiscountPercent
        {
            get { return this._termDiscountPercent; }
            set
            {
                if (this._termDiscountPercent != value)
                {
                    this.IsDirty = true;
                    this._termDiscountPercent = value;
                    OnPropertyChanged(() => TermDiscountPercent);
                    PropertyChangedCompleted(() => TermDiscountPercent);
                }
            }
        }

        protected short _termNetDue;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the TermNetDue</param>
        /// </summary>
        public short TermNetDue
        {
            get { return this._termNetDue; }
            set
            {
                if (this._termNetDue != value)
                {
                    this.IsDirty = true;
                    this._termNetDue = value;
                    OnPropertyChanged(() => TermNetDue);
                    PropertyChangedCompleted(() => TermNetDue);
                }
            }
        }

        protected short _termPaidWithinDay;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the TermPaidWithinDay</param>
        /// </summary>
        public short TermPaidWithinDay
        {
            get { return this._termPaidWithinDay; }
            set
            {
                if (this._termPaidWithinDay != value)
                {
                    this.IsDirty = true;
                    this._termPaidWithinDay = value;
                    OnPropertyChanged(() => TermPaidWithinDay);
                    PropertyChangedCompleted(() => TermPaidWithinDay);
                }
            }
        }

        protected string _paymentTermDescription;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the PaymentTermDescription</param>
        /// </summary>
        public string PaymentTermDescription
        {
            get { return this._paymentTermDescription; }
            set
            {
                if (this._paymentTermDescription != value)
                {
                    this.IsDirty = true;
                    this._paymentTermDescription = value;
                    OnPropertyChanged(() => PaymentTermDescription);
                    PropertyChangedCompleted(() => PaymentTermDescription);
                }
            }
        }

        protected Nullable<System.DateTime> _paymentDueDate;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the PaymentDueDate</param>
        /// </summary>
        public Nullable<System.DateTime> PaymentDueDate
        {
            get { return this._paymentDueDate; }
            set
            {
                if (this._paymentDueDate != value)
                {
                    this.IsDirty = true;
                    this._paymentDueDate = value;
                    OnPropertyChanged(() => PaymentDueDate);
                    PropertyChangedCompleted(() => PaymentDueDate);
                }
            }
        }

        protected int _paymentMethodId;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the PaymentMethodId</param>
        /// </summary>
        public int PaymentMethodId
        {
            get { return this._paymentMethodId; }
            set
            {
                if (this._paymentMethodId != value)
                {
                    this.IsDirty = true;
                    this._paymentMethodId = value;
                    OnPropertyChanged(() => PaymentMethodId);
                    PropertyChangedCompleted(() => PaymentMethodId);
                }
            }
        }

        protected string _remark;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Remark</param>
        /// </summary>
        public string Remark
        {
            get { return this._remark; }
            set
            {
                if (this._remark != value)
                {
                    this.IsDirty = true;
                    this._remark = value;
                    OnPropertyChanged(() => Remark);
                    PropertyChangedCompleted(() => Remark);
                }
            }
        }

        protected Nullable<System.DateTime> _shipDate;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the ShipDate</param>
        /// </summary>
        public Nullable<System.DateTime> ShipDate
        {
            get { return this._shipDate; }
            set
            {
                if (this._shipDate != value)
                {
                    this.IsDirty = true;
                    this._shipDate = value;
                    OnPropertyChanged(() => ShipDate);
                    PropertyChangedCompleted(() => ShipDate);
                }
            }
        }

        protected decimal _subTotal;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the SubTotal</param>
        /// </summary>
        public decimal SubTotal
        {
            get { return this._subTotal; }
            set
            {
                if (this._subTotal != value)
                {
                    this.IsDirty = true;
                    this._subTotal = value;
                    OnPropertyChanged(() => SubTotal);
                    PropertyChangedCompleted(() => SubTotal);
                }
            }
        }

        protected decimal _discountPercent;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the DiscountPercent</param>
        /// </summary>
        public decimal DiscountPercent
        {
            get { return this._discountPercent; }
            set
            {
                if (this._discountPercent != value)
                {
                    this.IsDirty = true;
                    this._discountPercent = value;
                    OnPropertyChanged(() => DiscountPercent);
                    PropertyChangedCompleted(() => DiscountPercent);
                }
            }
        }

        protected decimal _discountAmount;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the DiscountAmount</param>
        /// </summary>
        public decimal DiscountAmount
        {
            get { return this._discountAmount; }
            set
            {
                if (this._discountAmount != value)
                {
                    this.IsDirty = true;
                    this._discountAmount = value;
                    OnPropertyChanged(() => DiscountAmount);
                    PropertyChangedCompleted(() => DiscountAmount);
                }
            }
        }

        protected decimal _freight;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Freight</param>
        /// </summary>
        public decimal Freight
        {
            get { return this._freight; }
            set
            {
                if (this._freight != value)
                {
                    this.IsDirty = true;
                    this._freight = value;
                    OnPropertyChanged(() => Freight);
                    PropertyChangedCompleted(() => Freight);
                }
            }
        }

        protected decimal _fee;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Fee</param>
        /// </summary>
        public decimal Fee
        {
            get { return this._fee; }
            set
            {
                if (this._fee != value)
                {
                    this.IsDirty = true;
                    this._fee = value;
                    OnPropertyChanged(() => Fee);
                    PropertyChangedCompleted(() => Fee);
                }
            }
        }

        protected decimal _total;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Total</param>
        /// </summary>
        public decimal Total
        {
            get { return this._total; }
            set
            {
                if (this._total != value)
                {
                    this.IsDirty = true;
                    this._total = value;
                    OnPropertyChanged(() => Total);
                    PropertyChangedCompleted(() => Total);
                }
            }
        }

        protected decimal _paid;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Paid</param>
        /// </summary>
        public decimal Paid
        {
            get { return this._paid; }
            set
            {
                if (this._paid != value)
                {
                    this.IsDirty = true;
                    this._paid = value;
                    OnPropertyChanged(() => Paid);
                    PropertyChangedCompleted(() => Paid);
                }
            }
        }

        protected decimal _balance;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Balance</param>
        /// </summary>
        public decimal Balance
        {
            get { return this._balance; }
            set
            {
                if (this._balance != value)
                {
                    this.IsDirty = true;
                    this._balance = value;
                    OnPropertyChanged(() => Balance);
                    PropertyChangedCompleted(() => Balance);
                }
            }
        }

        protected int _itemCount;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the ItemCount</param>
        /// </summary>
        public int ItemCount
        {
            get { return this._itemCount; }
            set
            {
                if (this._itemCount != value)
                {
                    this.IsDirty = true;
                    this._itemCount = value;
                    OnPropertyChanged(() => ItemCount);
                    PropertyChangedCompleted(() => ItemCount);
                }
            }
        }

        protected decimal _qtyOrdered;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the QtyOrdered</param>
        /// </summary>
        public decimal QtyOrdered
        {
            get { return this._qtyOrdered; }
            set
            {
                if (this._qtyOrdered != value)
                {
                    this.IsDirty = true;
                    this._qtyOrdered = value;
                    OnPropertyChanged(() => QtyOrdered);
                    PropertyChangedCompleted(() => QtyOrdered);
                }
            }
        }

        protected decimal _qtyDue;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the QtyDue</param>
        /// </summary>
        public decimal QtyDue
        {
            get { return this._qtyDue; }
            set
            {
                if (this._qtyDue != value)
                {
                    this.IsDirty = true;
                    this._qtyDue = value;
                    OnPropertyChanged(() => QtyDue);
                    PropertyChangedCompleted(() => QtyDue);
                }
            }
        }

        protected decimal _qtyReceived;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the QtyReceived</param>
        /// </summary>
        public decimal QtyReceived
        {
            get { return this._qtyReceived; }
            set
            {
                if (this._qtyReceived != value)
                {
                    this.IsDirty = true;
                    this._qtyReceived = value;
                    OnPropertyChanged(() => QtyReceived);
                    PropertyChangedCompleted(() => QtyReceived);
                }
            }
        }

        protected decimal _unFilled;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the UnFilled</param>
        /// </summary>
        public decimal UnFilled
        {
            get { return this._unFilled; }
            set
            {
                if (this._unFilled != value)
                {
                    this.IsDirty = true;
                    this._unFilled = value;
                    OnPropertyChanged(() => UnFilled);
                    PropertyChangedCompleted(() => UnFilled);
                }
            }
        }

        protected string _userCreated;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the UserCreated</param>
        /// </summary>
        public string UserCreated
        {
            get { return this._userCreated; }
            set
            {
                if (this._userCreated != value)
                {
                    this.IsDirty = true;
                    this._userCreated = value;
                    OnPropertyChanged(() => UserCreated);
                    PropertyChangedCompleted(() => UserCreated);
                }
            }
        }

        protected System.DateTime _dateCreated;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the DateCreated</param>
        /// </summary>
        public System.DateTime DateCreated
        {
            get { return this._dateCreated; }
            set
            {
                if (this._dateCreated != value)
                {
                    this.IsDirty = true;
                    this._dateCreated = value;
                    OnPropertyChanged(() => DateCreated);
                    PropertyChangedCompleted(() => DateCreated);
                }
            }
        }

        protected Nullable<System.DateTime> _dateUpdate;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the DateUpdate</param>
        /// </summary>
        public Nullable<System.DateTime> DateUpdate
        {
            get { return this._dateUpdate; }
            set
            {
                if (this._dateUpdate != value)
                {
                    this.IsDirty = true;
                    this._dateUpdate = value;
                    OnPropertyChanged(() => DateUpdate);
                    PropertyChangedCompleted(() => DateUpdate);
                }
            }
        }

        protected string _userUpdated;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the UserUpdated</param>
        /// </summary>
        public string UserUpdated
        {
            get { return this._userUpdated; }
            set
            {
                if (this._userUpdated != value)
                {
                    this.IsDirty = true;
                    this._userUpdated = value;
                    OnPropertyChanged(() => UserUpdated);
                    PropertyChangedCompleted(() => UserUpdated);
                }
            }
        }

        protected System.Guid _resource;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Resource</param>
        /// </summary>
        public System.Guid Resource
        {
            get { return this._resource; }
            set
            {
                if (this._resource != value)
                {
                    this.IsDirty = true;
                    this._resource = value;
                    OnPropertyChanged(() => Resource);
                    PropertyChangedCompleted(() => Resource);
                }
            }
        }

        protected Nullable<System.DateTime> _cancelDate;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the CancelDate</param>
        /// </summary>
        public Nullable<System.DateTime> CancelDate
        {
            get { return this._cancelDate; }
            set
            {
                if (this._cancelDate != value)
                {
                    this.IsDirty = true;
                    this._cancelDate = value;
                    OnPropertyChanged(() => CancelDate);
                    PropertyChangedCompleted(() => CancelDate);
                }
            }
        }

        protected bool _isFullWorkflow;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the IsFullWorkflow</param>
        /// </summary>
        public bool IsFullWorkflow
        {
            get { return this._isFullWorkflow; }
            set
            {
                if (this._isFullWorkflow != value)
                {
                    this.IsDirty = true;
                    this._isFullWorkflow = value;
                    OnPropertyChanged(() => IsFullWorkflow);
                    PropertyChangedCompleted(() => IsFullWorkflow);
                }
            }
        }

        protected int _storeCode;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the StoreCode</param>
        /// </summary>
        public int StoreCode
        {
            get { return this._storeCode; }
            set
            {
                if (this._storeCode != value)
                {
                    this.IsDirty = true;
                    this._storeCode = value;
                    OnPropertyChanged(() => StoreCode);
                    PropertyChangedCompleted(() => StoreCode);
                }
            }
        }

        protected string _recRemark;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the RecRemark</param>
        /// </summary>
        public string RecRemark
        {
            get { return this._recRemark; }
            set
            {
                if (this._recRemark != value)
                {
                    this.IsDirty = true;
                    this._recRemark = value;
                    OnPropertyChanged(() => RecRemark);
                    PropertyChangedCompleted(() => RecRemark);
                }
            }
        }

        protected string _paymentName;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the PaymentName</param>
        /// </summary>
        public string PaymentName
        {
            get { return this._paymentName; }
            set
            {
                if (this._paymentName != value)
                {
                    this.IsDirty = true;
                    this._paymentName = value;
                    OnPropertyChanged(() => PaymentName);
                    PropertyChangedCompleted(() => PaymentName);
                }
            }
        }

        protected bool _isPurge;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the IsPurge</param>
        /// </summary>
        public bool IsPurge
        {
            get { return this._isPurge; }
            set
            {
                if (this._isPurge != value)
                {
                    this.IsDirty = true;
                    this._isPurge = value;
                    OnPropertyChanged(() => IsPurge);
                    PropertyChangedCompleted(() => IsPurge);
                }
            }
        }

        protected bool _isLocked;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the IsLocked</param>
        /// </summary>
        public bool IsLocked
        {
            get { return this._isLocked; }
            set
            {
                if (this._isLocked != value)
                {
                    this.IsDirty = true;
                    this._isLocked = value;
                    OnPropertyChanged(() => IsLocked);
                    PropertyChangedCompleted(() => IsLocked);
                }
            }
        }

        protected string _vendorResource;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the VendorResource</param>
        /// </summary>
        public string VendorResource
        {
            get { return this._vendorResource; }
            set
            {
                if (this._vendorResource != value)
                {
                    this.IsDirty = true;
                    this._vendorResource = value;
                    OnPropertyChanged(() => VendorResource);
                    PropertyChangedCompleted(() => VendorResource);
                }
            }
        }

        protected string _shift;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Shift</param>
        /// </summary>
        public string Shift
        {
            get { return this._shift; }
            set
            {
                if (this._shift != value)
                {
                    this.IsDirty = true;
                    this._shift = value;
                    OnPropertyChanged(() => Shift);
                    PropertyChangedCompleted(() => Shift);
                }
            }
        }

        protected string _pOCard;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the POCard</param>
        /// </summary>
        public string POCard
        {
            get { return this._pOCard; }
            set
            {
                if (this._pOCard != value)
                {
                    this.IsDirty = true;
                    this._pOCard = value;
                    OnPropertyChanged(() => POCard);
                    PropertyChangedCompleted(() => POCard);
                }
            }
        }

        protected byte[] _pOCardImg;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the POCardImg</param>
        /// </summary>
        public byte[] POCardImg
        {
            get { return this._pOCardImg; }
            set
            {
                if (this._pOCardImg != value)
                {
                    this.IsDirty = true;
                    this._pOCardImg = value;
                    OnPropertyChanged(() => POCardImg);
                    PropertyChangedCompleted(() => POCardImg);
                }
            }
        }

        protected bool _isReturned;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the IsReturned</param>
        /// </summary>
        public bool IsReturned
        {
            get { return this._isReturned; }
            set
            {
                if (this._isReturned != value)
                {
                    this.IsDirty = true;
                    this._isReturned = value;
                    OnPropertyChanged(() => IsReturned);
                    PropertyChangedCompleted(() => IsReturned);
                }
            }
        }

        protected decimal _taxAmount;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the TaxAmount</param>
        /// </summary>
        public decimal TaxAmount
        {
            get { return this._taxAmount; }
            set
            {
                if (this._taxAmount != value)
                {
                    this.IsDirty = true;
                    this._taxAmount = value;
                    OnPropertyChanged(() => TaxAmount);
                    PropertyChangedCompleted(() => TaxAmount);
                }
            }
        }

        #endregion

        #region Public Methods

        /// <summary>
        /// <param>Public Method</param>
        /// Method for set IsNew & IsDirty = false;
        /// </summary>
        public void EndUpdate()
        {
            this.IsNew = false;
            this.IsDirty = false;
        }

        /// <summary>
        /// Public Method
        /// <param>Method for set PropertyModel to Entity</param>
        /// </summary>
        public void ToEntity()
        {
            if (IsNew)
                this.base_PurchaseOrder.Id = this.Id;
            if (this.PurchaseOrderNo != null)
                this.base_PurchaseOrder.PurchaseOrderNo = this.PurchaseOrderNo.Trim();
            if (this.VendorCode != null)
                this.base_PurchaseOrder.VendorCode = this.VendorCode.Trim();
            this.base_PurchaseOrder.Status = this.Status;
            if (this.ShipAddress != null)
                this.base_PurchaseOrder.ShipAddress = this.ShipAddress.Trim();
            this.base_PurchaseOrder.PurchasedDate = this.PurchasedDate;
            this.base_PurchaseOrder.TermDiscountPercent = this.TermDiscountPercent;
            this.base_PurchaseOrder.TermNetDue = this.TermNetDue;
            this.base_PurchaseOrder.TermPaidWithinDay = this.TermPaidWithinDay;
            if (this.PaymentTermDescription != null)
                this.base_PurchaseOrder.PaymentTermDescription = this.PaymentTermDescription.Trim();
            this.base_PurchaseOrder.PaymentDueDate = this.PaymentDueDate;
            this.base_PurchaseOrder.PaymentMethodId = this.PaymentMethodId;
            if (this.Remark != null)
                this.base_PurchaseOrder.Remark = this.Remark.Trim();
            this.base_PurchaseOrder.ShipDate = this.ShipDate;
            this.base_PurchaseOrder.SubTotal = this.SubTotal;
            this.base_PurchaseOrder.DiscountPercent = this.DiscountPercent;
            this.base_PurchaseOrder.DiscountAmount = this.DiscountAmount;
            this.base_PurchaseOrder.Freight = this.Freight;
            this.base_PurchaseOrder.Fee = this.Fee;
            this.base_PurchaseOrder.Total = this.Total;
            this.base_PurchaseOrder.Paid = this.Paid;
            this.base_PurchaseOrder.Balance = this.Balance;
            this.base_PurchaseOrder.ItemCount = this.ItemCount;
            this.base_PurchaseOrder.QtyOrdered = this.QtyOrdered;
            this.base_PurchaseOrder.QtyDue = this.QtyDue;
            this.base_PurchaseOrder.QtyReceived = this.QtyReceived;
            this.base_PurchaseOrder.UnFilled = this.UnFilled;
            if (this.UserCreated != null)
                this.base_PurchaseOrder.UserCreated = this.UserCreated.Trim();
            this.base_PurchaseOrder.DateCreated = this.DateCreated;
            this.base_PurchaseOrder.DateUpdate = this.DateUpdate;
            if (this.UserUpdated != null)
                this.base_PurchaseOrder.UserUpdated = this.UserUpdated.Trim();
            this.base_PurchaseOrder.Resource = this.Resource;
            this.base_PurchaseOrder.CancelDate = this.CancelDate;
            this.base_PurchaseOrder.IsFullWorkflow = this.IsFullWorkflow;
            this.base_PurchaseOrder.StoreCode = this.StoreCode;
            if (this.RecRemark != null)
                this.base_PurchaseOrder.RecRemark = this.RecRemark.Trim();
            if (this.PaymentName != null)
                this.base_PurchaseOrder.PaymentName = this.PaymentName.Trim();
            this.base_PurchaseOrder.IsPurge = this.IsPurge;
            this.base_PurchaseOrder.IsLocked = this.IsLocked;
            if (this.VendorResource != null)
                this.base_PurchaseOrder.VendorResource = this.VendorResource.Trim();
            if (this.Shift != null)
                this.base_PurchaseOrder.Shift = this.Shift.Trim();
            if (this.POCard != null)
                this.base_PurchaseOrder.POCard = this.POCard.Trim();
            this.base_PurchaseOrder.POCardImg = this.POCardImg;
            this.base_PurchaseOrder.IsReturned = this.IsReturned;
            this.base_PurchaseOrder.TaxAmount = this.TaxAmount;
        }

        /// <summary>
        /// Public Method
        /// <param>Method for set Entity to PropertyModel</param>
        /// </summary
        public void ToModel()
        {
            this._id = this.base_PurchaseOrder.Id;
            this._purchaseOrderNo = this.base_PurchaseOrder.PurchaseOrderNo;
            this._vendorCode = this.base_PurchaseOrder.VendorCode;
            this._status = this.base_PurchaseOrder.Status;
            this._shipAddress = this.base_PurchaseOrder.ShipAddress;
            this._purchasedDate = this.base_PurchaseOrder.PurchasedDate;
            this._termDiscountPercent = this.base_PurchaseOrder.TermDiscountPercent;
            this._termNetDue = this.base_PurchaseOrder.TermNetDue;
            this._termPaidWithinDay = this.base_PurchaseOrder.TermPaidWithinDay;
            this._paymentTermDescription = this.base_PurchaseOrder.PaymentTermDescription;
            this._paymentDueDate = this.base_PurchaseOrder.PaymentDueDate;
            this._paymentMethodId = this.base_PurchaseOrder.PaymentMethodId;
            this._remark = this.base_PurchaseOrder.Remark;
            this._shipDate = this.base_PurchaseOrder.ShipDate;
            this._subTotal = this.base_PurchaseOrder.SubTotal;
            this._discountPercent = this.base_PurchaseOrder.DiscountPercent;
            this._discountAmount = this.base_PurchaseOrder.DiscountAmount;
            this._freight = this.base_PurchaseOrder.Freight;
            this._fee = this.base_PurchaseOrder.Fee;
            this._total = this.base_PurchaseOrder.Total;
            this._paid = this.base_PurchaseOrder.Paid;
            this._balance = this.base_PurchaseOrder.Balance;
            this._itemCount = this.base_PurchaseOrder.ItemCount;
            this._qtyOrdered = this.base_PurchaseOrder.QtyOrdered;
            this._qtyDue = this.base_PurchaseOrder.QtyDue;
            this._qtyReceived = this.base_PurchaseOrder.QtyReceived;
            this._unFilled = this.base_PurchaseOrder.UnFilled;
            this._userCreated = this.base_PurchaseOrder.UserCreated;
            this._dateCreated = this.base_PurchaseOrder.DateCreated;
            this._dateUpdate = this.base_PurchaseOrder.DateUpdate;
            this._userUpdated = this.base_PurchaseOrder.UserUpdated;
            this._resource = this.base_PurchaseOrder.Resource;
            this._cancelDate = this.base_PurchaseOrder.CancelDate;
            this._isFullWorkflow = this.base_PurchaseOrder.IsFullWorkflow;
            this._storeCode = this.base_PurchaseOrder.StoreCode;
            this._recRemark = this.base_PurchaseOrder.RecRemark;
            this._paymentName = this.base_PurchaseOrder.PaymentName;
            this._isPurge = this.base_PurchaseOrder.IsPurge;
            this._isLocked = this.base_PurchaseOrder.IsLocked;
            this._vendorResource = this.base_PurchaseOrder.VendorResource;
            this._shift = this.base_PurchaseOrder.Shift;
            this._pOCard = this.base_PurchaseOrder.POCard;
            this._pOCardImg = this.base_PurchaseOrder.POCardImg;
            this._isReturned = this.base_PurchaseOrder.IsReturned;
            this._taxAmount = this.base_PurchaseOrder.TaxAmount;
        }

        /// <summary>
        /// Public Method
        /// <param>Method for set Entity to PropertyModel</param>
        /// </summary
        public void ToModelAndRaise()
        {
            this.Id = this.base_PurchaseOrder.Id;
            this.PurchaseOrderNo = this.base_PurchaseOrder.PurchaseOrderNo;
            this.VendorCode = this.base_PurchaseOrder.VendorCode;
            this.Status = this.base_PurchaseOrder.Status;
            this.ShipAddress = this.base_PurchaseOrder.ShipAddress;
            this.PurchasedDate = this.base_PurchaseOrder.PurchasedDate;
            this.TermDiscountPercent = this.base_PurchaseOrder.TermDiscountPercent;
            this.TermNetDue = this.base_PurchaseOrder.TermNetDue;
            this.TermPaidWithinDay = this.base_PurchaseOrder.TermPaidWithinDay;
            this.PaymentTermDescription = this.base_PurchaseOrder.PaymentTermDescription;
            this.PaymentDueDate = this.base_PurchaseOrder.PaymentDueDate;
            this.PaymentMethodId = this.base_PurchaseOrder.PaymentMethodId;
            this.Remark = this.base_PurchaseOrder.Remark;
            this.ShipDate = this.base_PurchaseOrder.ShipDate;
            this.SubTotal = this.base_PurchaseOrder.SubTotal;
            this.DiscountPercent = this.base_PurchaseOrder.DiscountPercent;
            this.DiscountAmount = this.base_PurchaseOrder.DiscountAmount;
            this.Freight = this.base_PurchaseOrder.Freight;
            this.Fee = this.base_PurchaseOrder.Fee;
            this.Total = this.base_PurchaseOrder.Total;
            this.Paid = this.base_PurchaseOrder.Paid;
            this.Balance = this.base_PurchaseOrder.Balance;
            this.ItemCount = this.base_PurchaseOrder.ItemCount;
            this.QtyOrdered = this.base_PurchaseOrder.QtyOrdered;
            this.QtyDue = this.base_PurchaseOrder.QtyDue;
            this.QtyReceived = this.base_PurchaseOrder.QtyReceived;
            this.UnFilled = this.base_PurchaseOrder.UnFilled;
            this.UserCreated = this.base_PurchaseOrder.UserCreated;
            this.DateCreated = this.base_PurchaseOrder.DateCreated;
            this.DateUpdate = this.base_PurchaseOrder.DateUpdate;
            this.UserUpdated = this.base_PurchaseOrder.UserUpdated;
            this.Resource = this.base_PurchaseOrder.Resource;
            this.CancelDate = this.base_PurchaseOrder.CancelDate;
            this.IsFullWorkflow = this.base_PurchaseOrder.IsFullWorkflow;
            this.StoreCode = this.base_PurchaseOrder.StoreCode;
            this.RecRemark = this.base_PurchaseOrder.RecRemark;
            this.PaymentName = this.base_PurchaseOrder.PaymentName;
            this.IsPurge = this.base_PurchaseOrder.IsPurge;
            this.IsLocked = this.base_PurchaseOrder.IsLocked;
            this.VendorResource = this.base_PurchaseOrder.VendorResource;
            this.Shift = this.base_PurchaseOrder.Shift;
            this.POCard = this.base_PurchaseOrder.POCard;
            this.POCardImg = this.base_PurchaseOrder.POCardImg;
            this.IsReturned = this.base_PurchaseOrder.IsReturned;
            this.TaxAmount = this.base_PurchaseOrder.TaxAmount;
        }

        #endregion

        #region Custom Code

        #region Navigation Properties

        #region PurchaseOrderDetailCollection

        private CollectionBase<base_PurchaseOrderDetailModel> _purchaseOrderDetailCollection;
        /// <summary>
        /// Gets or sets PurchaseOrderDetailCollection.
        /// </summary>
        public CollectionBase<base_PurchaseOrderDetailModel> PurchaseOrderDetailCollection
        {
            get
            {
                return _purchaseOrderDetailCollection;
            }
            set
            {
                if (_purchaseOrderDetailCollection != value)
                {
                    _purchaseOrderDetailCollection = value;
                    OnPropertyChanged(() => PurchaseOrderDetailCollection);
                }
            }
        }

        #endregion

        #region PurchaseOrderReceiveCollection

        private CollectionBase<base_PurchaseOrderReceiveModel> _purchaseOrderReceiveCollection;
        /// <summary>
        /// Gets or sets PurchaseOrderReceiveCollection.
        /// </summary>
        public CollectionBase<base_PurchaseOrderReceiveModel> PurchaseOrderReceiveCollection
        {
            get
            {
                return _purchaseOrderReceiveCollection;
            }
            set
            {
                if (_purchaseOrderReceiveCollection != value)
                {
                    _purchaseOrderReceiveCollection = value;
                    OnPropertyChanged(() => PurchaseOrderReceiveCollection);
                }
            }
        }

        #endregion

        #region PaymentCollection

        private CollectionBase<base_ResourcePaymentModel> _paymentCollection;
        /// <summary>
        /// Gets or sets PaymentCollection.
        /// </summary>
        public CollectionBase<base_ResourcePaymentModel> PaymentCollection
        {
            get
            {
                return _paymentCollection;
            }
            set
            {
                if (_paymentCollection != value)
                {
                    _paymentCollection = value;
                    OnPropertyChanged(() => PaymentCollection);
                }
            }
        }

        #endregion

        #region ResourceReturnDetailCollection

        private CollectionBase<base_ResourceReturnDetailModel> _resourceReturnDetailCollection;
        /// <summary>
        /// Gets or sets ResourceReturnDetailCollection.
        /// </summary>
        public CollectionBase<base_ResourceReturnDetailModel> ResourceReturnDetailCollection
        {
            get
            {
                return _resourceReturnDetailCollection;
            }
            set
            {
                if (_resourceReturnDetailCollection != value)
                {
                    _resourceReturnDetailCollection = value;
                    OnPropertyChanged(() => ResourceReturnDetailCollection);
                }
            }
        }

        #endregion

        #region ResourceReturn

        private base_ResourceReturnModel _resourceReturn;
        /// <summary>
        /// Gets or sets ResourceReturn.
        /// </summary>
        public base_ResourceReturnModel ResourceReturn
        {
            get
            {
                return _resourceReturn;
            }
            set
            {
                if (_resourceReturn != value)
                {
                    _resourceReturn = value;
                    OnPropertyChanged(() => ResourceReturn);
                }
            }
        }

        #endregion

        #endregion

        #region Properties

        #region HasError

        /// <summary>
        /// Gets value indicate that this object has error or not.
        /// </summary>
        public bool HasError
        {
            get
            {
                return !string.IsNullOrWhiteSpace(Error);
            }
        }

        #endregion

        #region CanReceive

        /// <summary>
        /// Gets a value indicate this object can receive item or not.
        /// </summary>
        public bool CanReceive
        {
            get
            {
                return _status != (int)PurchaseStatus.Open;
            }
        }

        #endregion

        #region HasReceivedItem

        /// <summary>
        /// Gets value indicate that this object has received item or not.
        /// </summary>
        public bool HasReceivedItem
        {
            get
            {
                return _qtyReceived > 0;
            }
        }

        #endregion

        #region CanChangeStore

        public bool CanChangeStore
        {
            get
            {
                if (Define.StoreCode == 0)
                {
                    if (_purchaseOrderReceiveCollection != null)
                    {
                        return !_purchaseOrderReceiveCollection.Any(x => x.IsReceived);
                    }
                }

                return false;
            }
        }

        #endregion

        #region HasPayment

        /// <summary>
        /// Gets HasPayment.
        /// </summary>
        public bool HasPayment
        {
            get
            {
                return _paid > 0;
            }
        }

        #endregion

        #region CanPurchase

        /// <summary>
        /// Gets a value indicates whether can purchase new item.
        /// </summary>
        public bool CanPurchase
        {
            get
            {
                return !(_purchaseOrderDetailCollection == null ||
                    (_purchaseOrderDetailCollection.Count > 0 && !_purchaseOrderDetailCollection.Any(x => !x.IsFullReceived)) ||
                    HasPayment || _isLocked);
            }
        }

        #endregion

        #region CanEditBaseInformation

        /// <summary>
        /// Gets a value indicates whether can edit base information of PurchaseOrder.
        /// </summary>
        public bool CanEditBaseInformation
        {
            get
            {
                return !_isFullWorkflow && !_isLocked;
            }
        }

        #endregion

        #region CanEditPODCollection

        /// <summary>
        /// Gets a value indicates whether can edit item collection.
        /// </summary>
        public bool CanEditPODCollection
        {
            get
            {
                return !_isFullWorkflow && !_isLocked;
            }
        }

        #endregion

        #region CanLock

        public bool CanLock
        {
            get
            {
                return _status < (short)PurchaseStatus.PaidInFull;
            }
        }

        #endregion

        #region VendorName

        private string _vendorName;
        /// <summary>
        /// Gets or sets VendorName.
        /// </summary>
        public string VendorName
        {
            get
            {
                return _vendorName;
            }
            set
            {
                if (_vendorName != value)
                {
                    _isDirty = true;
                    _vendorName = value;
                    OnPropertyChanged(() => VendorName);
                }
            }
        }

        #endregion

        #region StoreName

        private string _storeName;
        /// <summary>
        /// Gets or sets StoreName.
        /// </summary>
        public string StoreName
        {
            get
            {
                return _storeName;
            }
            set
            {
                if (_storeName != value)
                {
                    _isDirty = true;
                    _storeName = value;
                    OnPropertyChanged(() => StoreName);
                }
            }
        }

        #endregion

        #region StatusItem

        private ComboItem _statusItem;
        /// <summary>
        /// Gets or sets StatusItem.
        /// </summary>
        public ComboItem StatusItem
        {
            get
            {
                return _statusItem;
            }
            set
            {
                if (_statusItem != value)
                {
                    _statusItem = value;
                    OnPropertyChanged(() => StatusItem);
                }
            }
        }

        #endregion

        #region TotalReceive

        private decimal _totalReceive;
        /// <summary>
        /// Gets or sets the TotalReceived.
        /// </summary>
        public decimal TotalReceive
        {
            get
            {
                return _totalReceive;
            }
            set
            {
                if (_totalReceive != value)
                {
                    IsDirty = true;
                    _totalReceive = value;
                    OnPropertyChanged(() => TotalReceive);
                }
            }
        }

        #endregion

        #region PurchaseOrderDetailReceiveCollection

        private ObservableCollection<base_PurchaseOrderDetailModel> _purchaseOrderDetailReceiveCollection;
        /// <summary>
        /// Gets or sets PurchaseOrderDetailReceiveCollection.
        /// </summary>
        public ObservableCollection<base_PurchaseOrderDetailModel> PurchaseOrderDetailReceiveCollection
        {
            get
            {
                return _purchaseOrderDetailReceiveCollection;
            }
            set
            {
                if (_purchaseOrderDetailReceiveCollection != value)
                {
                    _purchaseOrderDetailReceiveCollection = value;
                    OnPropertyChanged(() => PurchaseOrderDetailReceiveCollection);
                }
            }
        }

        #endregion

        #region PurchaseOrderDetailReturnCollection

        private ObservableCollection<base_PurchaseOrderDetailModel> _purchaseOrderDetailReturnCollection;
        /// <summary>
        /// Gets or sets PurchaseOrderDetailReturnCollection.
        /// </summary>
        public ObservableCollection<base_PurchaseOrderDetailModel> PurchaseOrderDetailReturnCollection
        {
            get
            {
                return _purchaseOrderDetailReturnCollection;
            }
            set
            {
                if (_purchaseOrderDetailReturnCollection != value)
                {
                    _purchaseOrderDetailReturnCollection = value;
                    OnPropertyChanged(() => PurchaseOrderDetailReturnCollection);
                }
            }
        }

        #endregion

        #region HasWantReturn

        public bool HasWantReturn
        {
            get;
            set;
        }

        #endregion

        #endregion

        #region Methods

        #region RaiseCanChangeStorePropertyChanged

        /// <summary>
        /// Raise CanChangeStore property changed.
        /// </summary>
        public void RaiseCanChangeStorePropertyChanged()
        {
            OnPropertyChanged(() => CanChangeStore);
        }

        #endregion

        #region RaiseCanPurchasePropertyChanged

        /// <summary>
        /// Raise CanPurchase property changed.
        /// </summary>
        public void RaiseCanPurchasePropertyChanged()
        {
            OnPropertyChanged(() => CanPurchase);
        }

        #endregion

        #endregion

        #region Override Methods

        #region PropertyChangedCompleted

        protected override void PropertyChangedCompleted(string propertyName)
        {
            switch (propertyName)
            {
                case "Total":

                    if (_resourceReturn != null)
                    {
                        _resourceReturn.TotalAmount = _total;
                    }

                    _balance = _total - _paid;
                    OnPropertyChanged(() => Balance);

                    break;

                case "Status":

                    OnPropertyChanged(() => CanReceive);
                    OnPropertyChanged(() => CanPurchase);
                    OnPropertyChanged(() => CanLock);

                    if (Common.PurchaseStatus != null)
                    {
                        var item = Common.PurchaseStatus.FirstOrDefault(x => x.Value == _status);
                        if (item != null)
                        {
                            StatusItem = item;
                        }
                    }

                    break;

                case "IsFullWorkflow":
                case "IsLocked":

                    OnPropertyChanged(() => CanEditBaseInformation);
                    OnPropertyChanged(() => CanPurchase);
                    OnPropertyChanged(() => CanEditPODCollection);

                    break;

                case "Paid":

                    OnPropertyChanged(() => HasPayment);
                    OnPropertyChanged(() => CanPurchase);
                    if (_purchaseOrderDetailCollection != null)
                    {
                        foreach (base_PurchaseOrderDetailModel item in _purchaseOrderDetailCollection)
                        {
                            item.RaiseCanChangeQuantityChanged();
                            item.RaiseCanChangeUOMChanged();
                        }
                    }

                    _balance = _total - _paid;
                    OnPropertyChanged(() => Balance);

                    break;
            }
        }

        #endregion

        #endregion

        #region IDataErrorInfo Members

        public string Error
        {
            get
            {
                List<string> errors = new List<string>();
                PropertyDescriptorCollection props = TypeDescriptor.GetProperties(this);
                foreach (PropertyDescriptor prop in props)
                {
                    string msg = this[prop.Name];
                    if (!string.IsNullOrWhiteSpace(msg))
                    {
                        errors.Add(msg);
                    }
                }

                return string.Join(Environment.NewLine, errors);
            }
        }

        public string this[string columnName]
        {
            get
            {
                string message = null;

                switch (columnName)
                {
                    case "VendorResource":

                        if (_vendorResource == null)
                        {
                            message = "Required select an item.";
                        }

                        break;
                }

                return message;
            }
        }

        #endregion

        #endregion
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Linq;
using System.Linq.Expressions;
using CPC.Helper;
using CPC.Toolkit.Base;
using CPC.TimeClock.Database;

namespace CPC.TimeClock.Model
{
    /// <summary>
    /// Model for table base_QuantityAdjustment
    /// </summary>
    [Serializable]
    public partial class base_QuantityAdjustmentModel : ModelBase, IDataErrorInfo
    {
        #region Constructor

        // Default constructor
        public base_QuantityAdjustmentModel()
        {
            this.IsNew = true;
            this.base_QuantityAdjustment = new base_QuantityAdjustment();
        }

        // Default constructor that set entity to field
        public base_QuantityAdjustmentModel(base_QuantityAdjustment base_quantityadjustment, bool isRaiseProperties = false)
        {
            this.base_QuantityAdjustment = base_quantityadjustment;
            if (!isRaiseProperties)
                this.ToModel();
            else
                this.ToModelAndRaise();
            this.IsDirty = false;
        }

        #endregion

        #region Entity Properties

        public base_QuantityAdjustment base_QuantityAdjustment { get; private set; }

        #endregion

        #region Primitive Properties

        protected long _id;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Id</param>
        /// </summary>
        public long Id
        {
            get { return this._id; }
            set
            {
                if (this._id != value)
                {
                    this.IsDirty = true;
                    this._id = value;
                    OnPropertyChanged(() => Id);
                    PropertyChangedCompleted(() => Id);
                }
            }
        }

        protected long _productId;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the ProductId</param>
        /// </summary>
        public long ProductId
        {
            get { return this._productId; }
            set
            {
                if (this._productId != value)
                {
                    this.IsDirty = true;
                    this._productId = value;
                    OnPropertyChanged(() => ProductId);
                    PropertyChangedCompleted(() => ProductId);
                }
            }
        }

        protected string _productResource;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the ProductResource</param>
        /// </summary>
        public string ProductResource
        {
            get { return this._productResource; }
            set
            {
                if (this._productResource != value)
                {
                    this.IsDirty = true;
                    this._productResource = value;
                    OnPropertyChanged(() => ProductResource);
                    PropertyChangedCompleted(() => ProductResource);
                }
            }
        }

        protected decimal _costDifference;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the CostDifference</param>
        /// </summary>
        public decimal CostDifference
        {
            get { return this._costDifference; }
            set
            {
                if (this._costDifference != value)
                {
                    this.IsDirty = true;
                    this._costDifference = value;
                    OnPropertyChanged(() => CostDifference);
                    PropertyChangedCompleted(() => CostDifference);
                }
            }
        }

        protected decimal _oldQty;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the OldQty</param>
        /// </summary>
        public decimal OldQty
        {
            get { return this._oldQty; }
            set
            {
                if (this._oldQty != value)
                {
                    this.IsDirty = true;
                    this._oldQty = value;
                    OnPropertyChanged(() => OldQty);
                    PropertyChangedCompleted(() => OldQty);
                }
            }
        }

        protected decimal _newQty;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the NewQty</param>
        /// </summary>
        public decimal NewQty
        {
            get { return this._newQty; }
            set
            {
                if (this._newQty != value)
                {
                    this.IsDirty = true;
                    this._newQty = value;
                    OnPropertyChanged(() => NewQty);
                    PropertyChangedCompleted(() => NewQty);
                }
            }
        }

        protected decimal _adjustmentQtyDiff;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the AdjustmentQtyDiff</param>
        /// </summary>
        public decimal AdjustmentQtyDiff
        {
            get { return this._adjustmentQtyDiff; }
            set
            {
                if (this._adjustmentQtyDiff != value)
                {
                    this.IsDirty = true;
                    this._adjustmentQtyDiff = value;
                    OnPropertyChanged(() => AdjustmentQtyDiff);
                    PropertyChangedCompleted(() => AdjustmentQtyDiff);
                }
            }
        }

        protected System.DateTime _loggedTime;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the LoggedTime</param>
        /// </summary>
        public System.DateTime LoggedTime
        {
            get { return this._loggedTime; }
            set
            {
                if (this._loggedTime != value)
                {
                    this.IsDirty = true;
                    this._loggedTime = value;
                    OnPropertyChanged(() => LoggedTime);
                    PropertyChangedCompleted(() => LoggedTime);
                }
            }
        }

        protected string _userCreated;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the UserCreated</param>
        /// </summary>
        public string UserCreated
        {
            get { return this._userCreated; }
            set
            {
                if (this._userCreated != value)
                {
                    this.IsDirty = true;
                    this._userCreated = value;
                    OnPropertyChanged(() => UserCreated);
                    PropertyChangedCompleted(() => UserCreated);
                }
            }
        }

        protected Nullable<bool> _isReversed;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the IsReversed</param>
        /// </summary>
        public Nullable<bool> IsReversed
        {
            get { return this._isReversed; }
            set
            {
                if (this._isReversed != value)
                {
                    this.IsDirty = true;
                    this._isReversed = value;
                    OnPropertyChanged(() => IsReversed);
                    PropertyChangedCompleted(() => IsReversed);
                }
            }
        }

        protected Nullable<int> _storeCode;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the StoreCode</param>
        /// </summary>
        public Nullable<int> StoreCode
        {
            get { return this._storeCode; }
            set
            {
                if (this._storeCode != value)
                {
                    this.IsDirty = true;
                    this._storeCode = value;
                    OnPropertyChanged(() => StoreCode);
                    PropertyChangedCompleted(() => StoreCode);
                }
            }
        }

        protected string _resource;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Resource</param>
        /// </summary>
        public string Resource
        {
            get { return this._resource; }
            set
            {
                if (this._resource != value)
                {
                    this.IsDirty = true;
                    this._resource = value;
                    OnPropertyChanged(() => Resource);
                    PropertyChangedCompleted(() => Resource);
                }
            }
        }

        protected short _status;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Status</param>
        /// </summary>
        public short Status
        {
            get { return this._status; }
            set
            {
                if (this._status != value)
                {
                    this.IsDirty = true;
                    this._status = value;
                    OnPropertyChanged(() => Status);
                    PropertyChangedCompleted(() => Status);
                }
            }
        }

        protected short _reason;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Reason</param>
        /// </summary>
        public short Reason
        {
            get { return this._reason; }
            set
            {
                if (this._reason != value)
                {
                    this.IsDirty = true;
                    this._reason = value;
                    OnPropertyChanged(() => Reason);
                    PropertyChangedCompleted(() => Reason);
                }
            }
        }

        protected string _shift;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Shift</param>
        /// </summary>
        public string Shift
        {
            get { return this._shift; }
            set
            {
                if (this._shift != value)
                {
                    this.IsDirty = true;
                    this._shift = value;
                    OnPropertyChanged(() => Shift);
                    PropertyChangedCompleted(() => Shift);
                }
            }
        }

        #endregion

        #region Public Methods

        /// <summary>
        /// <param>Public Method</param>
        /// Method for set IsNew & IsDirty = false;
        /// </summary>
        public void EndUpdate()
        {
            this.IsNew = false;
            this.IsDirty = false;
        }

        /// <summary>
        /// Public Method
        /// <param>Method for set PropertyModel to Entity</param>
        /// </summary>
        public void ToEntity()
        {
            if (IsNew)
                this.base_QuantityAdjustment.Id = this.Id;
            this.base_QuantityAdjustment.ProductId = this.ProductId;
            if (this.ProductResource != null)
                this.base_QuantityAdjustment.ProductResource = this.ProductResource.Trim();
            this.base_QuantityAdjustment.CostDifference = this.CostDifference;
            this.base_QuantityAdjustment.OldQty = this.OldQty;
            this.base_QuantityAdjustment.NewQty = this.NewQty;
            this.base_QuantityAdjustment.AdjustmentQtyDiff = this.AdjustmentQtyDiff;
            this.base_QuantityAdjustment.LoggedTime = this.LoggedTime;
            if (this.UserCreated != null)
                this.base_QuantityAdjustment.UserCreated = this.UserCreated.Trim();
            this.base_QuantityAdjustment.IsReversed = this.IsReversed;
            this.base_QuantityAdjustment.StoreCode = this.StoreCode;
            if (this.Resource != null)
                this.base_QuantityAdjustment.Resource = this.Resource.Trim();
            this.base_QuantityAdjustment.Status = this.Status;
            this.base_QuantityAdjustment.Reason = this.Reason;
            if (this.Shift != null)
                this.base_QuantityAdjustment.Shift = this.Shift.Trim();
        }

        /// <summary>
        /// Public Method
        /// <param>Method for set Entity to PropertyModel</param>
        /// </summary
        public void ToModel()
        {
            this._id = this.base_QuantityAdjustment.Id;
            this._productId = this.base_QuantityAdjustment.ProductId;
            this._productResource = this.base_QuantityAdjustment.ProductResource;
            this._costDifference = this.base_QuantityAdjustment.CostDifference;
            this._oldQty = this.base_QuantityAdjustment.OldQty;
            this._newQty = this.base_QuantityAdjustment.NewQty;
            this._adjustmentQtyDiff = this.base_QuantityAdjustment.AdjustmentQtyDiff;
            this._loggedTime = this.base_QuantityAdjustment.LoggedTime;
            this._userCreated = this.base_QuantityAdjustment.UserCreated;
            this._isReversed = this.base_QuantityAdjustment.IsReversed;
            this._storeCode = this.base_QuantityAdjustment.StoreCode;
            this._resource = this.base_QuantityAdjustment.Resource;
            this._status = this.base_QuantityAdjustment.Status;
            this._reason = this.base_QuantityAdjustment.Reason;
            this._shift = this.base_QuantityAdjustment.Shift;
        }

        /// <summary>
        /// Public Method
        /// <param>Method for set Entity to PropertyModel</param>
        /// </summary
        public void ToModelAndRaise()
        {
            this.Id = this.base_QuantityAdjustment.Id;
            this.ProductId = this.base_QuantityAdjustment.ProductId;
            this.ProductResource = this.base_QuantityAdjustment.ProductResource;
            this.CostDifference = this.base_QuantityAdjustment.CostDifference;
            this.OldQty = this.base_QuantityAdjustment.OldQty;
            this.NewQty = this.base_QuantityAdjustment.NewQty;
            this.AdjustmentQtyDiff = this.base_QuantityAdjustment.AdjustmentQtyDiff;
            this.LoggedTime = this.base_QuantityAdjustment.LoggedTime;
            this.UserCreated = this.base_QuantityAdjustment.UserCreated;
            this.IsReversed = this.base_QuantityAdjustment.IsReversed;
            this.StoreCode = this.base_QuantityAdjustment.StoreCode;
            this.Resource = this.base_QuantityAdjustment.Resource;
            this.Status = this.base_QuantityAdjustment.Status;
            this.Reason = this.base_QuantityAdjustment.Reason;
            this.Shift = this.base_QuantityAdjustment.Shift;
        }

        #endregion

        #region Custom Code


        #endregion

        #region IDataErrorInfo Members

        public string Error
        {
            get { throw new NotImplementedException(); }
        }

        public string this[string columnName]
        {
            get
            {
                string message = string.Empty;

                switch (columnName)
                {
                    case "Id":
                        break;
                    case "ProductId":
                        break;
                    case "ProductResource":
                        break;
                    case "CostDifference":
                        break;
                    case "OldQty":
                        break;
                    case "NewQty":
                        break;
                    case "AdjustmentQtyDiff":
                        break;
                    case "LoggedTime":
                        break;
                    case "UserCreated":
                        break;
                    case "IsReversed":
                        break;
                    case "StoreCode":
                        break;
                    case "Resource":
                        break;
                    case "Status":
                        break;
                    case "Reason":
                        break;
                    case "Shift":
                        break;
                }

                if (!string.IsNullOrWhiteSpace(message))
                    return message;
                return null;
            }
        }

        #endregion
    }
}

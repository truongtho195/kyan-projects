//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Linq;
using System.Linq.Expressions;
using CPC.Helper;
using CPC.Toolkit.Base;
using CPC.TimeClock.Database;

namespace CPC.TimeClock.Model
{
    /// <summary>
    /// Model for table base_Promotion
    /// </summary>
    [Serializable]
    public partial class base_PromotionModel : ModelBase, IDataErrorInfo
    {
        #region Constructor

        // Default constructor
        public base_PromotionModel()
        {
            this.IsNew = true;
            this.base_Promotion = new base_Promotion();
        }

        // Default constructor that set entity to field
        public base_PromotionModel(base_Promotion base_promotion, bool isRaiseProperties = false)
        {
            this.base_Promotion = base_promotion;
            if (!isRaiseProperties)
                this.ToModel();
            else
                this.ToModelAndRaise();
            this.IsDirty = false;
        }

        #endregion

        #region Entity Properties

        public base_Promotion base_Promotion { get; private set; }

        #endregion

        #region Primitive Properties

        protected int _id;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Id</param>
        /// </summary>
        public int Id
        {
            get { return this._id; }
            set
            {
                if (this._id != value)
                {
                    this.IsDirty = true;
                    this._id = value;
                    OnPropertyChanged(() => Id);
                    PropertyChangedCompleted(() => Id);
                }
            }
        }

        protected string _name;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Name</param>
        /// </summary>
        public string Name
        {
            get { return this._name; }
            set
            {
                if (this._name != value)
                {
                    this.IsDirty = true;
                    this._name = value;
                    OnPropertyChanged(() => Name);
                    PropertyChangedCompleted(() => Name);
                }
            }
        }

        protected string _description;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Description</param>
        /// </summary>
        public string Description
        {
            get { return this._description; }
            set
            {
                if (this._description != value)
                {
                    this.IsDirty = true;
                    this._description = value;
                    OnPropertyChanged(() => Description);
                    PropertyChangedCompleted(() => Description);
                }
            }
        }

        protected short _promotionTypeId;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the PromotionTypeId</param>
        /// </summary>
        public short PromotionTypeId
        {
            get { return this._promotionTypeId; }
            set
            {
                if (this._promotionTypeId != value)
                {
                    this.IsDirty = true;
                    this._promotionTypeId = value;
                    OnPropertyChanged(() => PromotionTypeId);
                    PropertyChangedCompleted(() => PromotionTypeId);
                }
            }
        }

        protected short _takeOffOption;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the TakeOffOption</param>
        /// </summary>
        public short TakeOffOption
        {
            get { return this._takeOffOption; }
            set
            {
                if (this._takeOffOption != value)
                {
                    this.IsDirty = true;
                    this._takeOffOption = value;
                    OnPropertyChanged(() => TakeOffOption);
                    PropertyChangedCompleted(() => TakeOffOption);
                }
            }
        }

        protected decimal _takeOff;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the TakeOff</param>
        /// </summary>
        public decimal TakeOff
        {
            get { return this._takeOff; }
            set
            {
                if (this._takeOff != value)
                {
                    this.IsDirty = true;
                    this._takeOff = value;
                    OnPropertyChanged(() => TakeOff);
                    PropertyChangedCompleted(() => TakeOff);
                }
            }
        }

        protected int _buyingQty;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the BuyingQty</param>
        /// </summary>
        public int BuyingQty
        {
            get { return this._buyingQty; }
            set
            {
                if (this._buyingQty != value)
                {
                    this.IsDirty = true;
                    this._buyingQty = value;
                    OnPropertyChanged(() => BuyingQty);
                    PropertyChangedCompleted(() => BuyingQty);
                }
            }
        }

        protected decimal _getingValue;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the GetingValue</param>
        /// </summary>
        public decimal GetingValue
        {
            get { return this._getingValue; }
            set
            {
                if (this._getingValue != value)
                {
                    this.IsDirty = true;
                    this._getingValue = value;
                    OnPropertyChanged(() => GetingValue);
                    PropertyChangedCompleted(() => GetingValue);
                }
            }
        }

        protected bool _isApplyToAboveQuantities;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the IsApplyToAboveQuantities</param>
        /// </summary>
        public bool IsApplyToAboveQuantities
        {
            get { return this._isApplyToAboveQuantities; }
            set
            {
                if (this._isApplyToAboveQuantities != value)
                {
                    this.IsDirty = true;
                    this._isApplyToAboveQuantities = value;
                    OnPropertyChanged(() => IsApplyToAboveQuantities);
                    PropertyChangedCompleted(() => IsApplyToAboveQuantities);
                }
            }
        }

        protected short _status;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Status</param>
        /// </summary>
        public short Status
        {
            get { return this._status; }
            set
            {
                if (this._status != value)
                {
                    this.IsDirty = true;
                    this._status = value;
                    OnPropertyChanged(() => Status);
                    PropertyChangedCompleted(() => Status);
                }
            }
        }

        protected System.DateTime _dateCreated;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the DateCreated</param>
        /// </summary>
        public System.DateTime DateCreated
        {
            get { return this._dateCreated; }
            set
            {
                if (this._dateCreated != value)
                {
                    this.IsDirty = true;
                    this._dateCreated = value;
                    OnPropertyChanged(() => DateCreated);
                    PropertyChangedCompleted(() => DateCreated);
                }
            }
        }

        protected string _userCreated;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the UserCreated</param>
        /// </summary>
        public string UserCreated
        {
            get { return this._userCreated; }
            set
            {
                if (this._userCreated != value)
                {
                    this.IsDirty = true;
                    this._userCreated = value;
                    OnPropertyChanged(() => UserCreated);
                    PropertyChangedCompleted(() => UserCreated);
                }
            }
        }

        protected System.DateTime _dateUpdated;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the DateUpdated</param>
        /// </summary>
        public System.DateTime DateUpdated
        {
            get { return this._dateUpdated; }
            set
            {
                if (this._dateUpdated != value)
                {
                    this.IsDirty = true;
                    this._dateUpdated = value;
                    OnPropertyChanged(() => DateUpdated);
                    PropertyChangedCompleted(() => DateUpdated);
                }
            }
        }

        protected string _userUpdated;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the UserUpdated</param>
        /// </summary>
        public string UserUpdated
        {
            get { return this._userUpdated; }
            set
            {
                if (this._userUpdated != value)
                {
                    this.IsDirty = true;
                    this._userUpdated = value;
                    OnPropertyChanged(() => UserUpdated);
                    PropertyChangedCompleted(() => UserUpdated);
                }
            }
        }

        protected System.Guid _resource;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Resource</param>
        /// </summary>
        public System.Guid Resource
        {
            get { return this._resource; }
            set
            {
                if (this._resource != value)
                {
                    this.IsDirty = true;
                    this._resource = value;
                    OnPropertyChanged(() => Resource);
                    PropertyChangedCompleted(() => Resource);
                }
            }
        }

        protected Nullable<System.DateTime> _couponExpire;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the CouponExpire</param>
        /// </summary>
        public Nullable<System.DateTime> CouponExpire
        {
            get { return this._couponExpire; }
            set
            {
                if (this._couponExpire != value)
                {
                    this.IsDirty = true;
                    this._couponExpire = value;
                    OnPropertyChanged(() => CouponExpire);
                    PropertyChangedCompleted(() => CouponExpire);
                }
            }
        }

        protected bool _isCouponExpired;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the IsCouponExpired</param>
        /// </summary>
        public bool IsCouponExpired
        {
            get { return this._isCouponExpired; }
            set
            {
                if (this._isCouponExpired != value)
                {
                    this.IsDirty = true;
                    this._isCouponExpired = value;
                    OnPropertyChanged(() => IsCouponExpired);
                    PropertyChangedCompleted(() => IsCouponExpired);
                }
            }
        }

        protected Nullable<int> _priceSchemaRange;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the PriceSchemaRange</param>
        /// </summary>
        public Nullable<int> PriceSchemaRange
        {
            get { return this._priceSchemaRange; }
            set
            {
                if (this._priceSchemaRange != value)
                {
                    this.IsDirty = true;
                    this._priceSchemaRange = value;
                    OnPropertyChanged(() => PriceSchemaRange);
                    PropertyChangedCompleted(() => PriceSchemaRange);
                }
            }
        }

        protected string _reasonReActive;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the ReasonReActive</param>
        /// </summary>
        public string ReasonReActive
        {
            get { return this._reasonReActive; }
            set
            {
                if (this._reasonReActive != value)
                {
                    this.IsDirty = true;
                    this._reasonReActive = value;
                    OnPropertyChanged(() => ReasonReActive);
                    PropertyChangedCompleted(() => ReasonReActive);
                }
            }
        }

        protected int _sold;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Sold</param>
        /// </summary>
        public int Sold
        {
            get { return this._sold; }
            set
            {
                if (this._sold != value)
                {
                    this.IsDirty = true;
                    this._sold = value;
                    OnPropertyChanged(() => Sold);
                    PropertyChangedCompleted(() => Sold);
                }
            }
        }

        protected decimal _totalPrice;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the TotalPrice</param>
        /// </summary>
        public decimal TotalPrice
        {
            get { return this._totalPrice; }
            set
            {
                if (this._totalPrice != value)
                {
                    this.IsDirty = true;
                    this._totalPrice = value;
                    OnPropertyChanged(() => TotalPrice);
                    PropertyChangedCompleted(() => TotalPrice);
                }
            }
        }

        protected Nullable<int> _categoryId;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the CategoryId</param>
        /// </summary>
        public Nullable<int> CategoryId
        {
            get { return this._categoryId; }
            set
            {
                if (this._categoryId != value)
                {
                    this.IsDirty = true;
                    this._categoryId = value;
                    OnPropertyChanged(() => CategoryId);
                    PropertyChangedCompleted(() => CategoryId);
                }
            }
        }

        protected string _couponBarCode;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the CouponBarCode</param>
        /// </summary>
        public string CouponBarCode
        {
            get { return this._couponBarCode; }
            set
            {
                if (this._couponBarCode != value)
                {
                    this.IsDirty = true;
                    this._couponBarCode = value;
                    OnPropertyChanged(() => CouponBarCode);
                    PropertyChangedCompleted(() => CouponBarCode);
                }
            }
        }

        protected string _barCodeNumber;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the BarCodeNumber</param>
        /// </summary>
        public string BarCodeNumber
        {
            get { return this._barCodeNumber; }
            set
            {
                if (this._barCodeNumber != value)
                {
                    this.IsDirty = true;
                    this._barCodeNumber = value;
                    OnPropertyChanged(() => BarCodeNumber);
                    PropertyChangedCompleted(() => BarCodeNumber);
                }
            }
        }

        protected byte[] _barCodeImage;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the BarCodeImage</param>
        /// </summary>
        public byte[] BarCodeImage
        {
            get { return this._barCodeImage; }
            set
            {
                if (this._barCodeImage != value)
                {
                    this.IsDirty = true;
                    this._barCodeImage = value;
                    OnPropertyChanged(() => BarCodeImage);
                    PropertyChangedCompleted(() => BarCodeImage);
                }
            }
        }

        protected bool _isConflict;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the IsConflict</param>
        /// </summary>
        public bool IsConflict
        {
            get { return this._isConflict; }
            set
            {
                if (this._isConflict != value)
                {
                    this.IsDirty = true;
                    this._isConflict = value;
                    OnPropertyChanged(() => IsConflict);
                    PropertyChangedCompleted(() => IsConflict);
                }
            }
        }

        protected string _shift;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Shift</param>
        /// </summary>
        public string Shift
        {
            get { return this._shift; }
            set
            {
                if (this._shift != value)
                {
                    this.IsDirty = true;
                    this._shift = value;
                    OnPropertyChanged(() => Shift);
                    PropertyChangedCompleted(() => Shift);
                }
            }
        }

        protected Nullable<System.DateTime> _startDate;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the StartDate</param>
        /// </summary>
        public Nullable<System.DateTime> StartDate
        {
            get { return this._startDate; }
            set
            {
                if (this._startDate != value)
                {
                    this.IsDirty = true;
                    this._startDate = value;
                    OnPropertyChanged(() => StartDate);
                    PropertyChangedCompleted(() => StartDate);
                }
            }
        }

        protected Nullable<System.DateTime> _endDate;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the EndDate</param>
        /// </summary>
        public Nullable<System.DateTime> EndDate
        {
            get { return this._endDate; }
            set
            {
                if (this._endDate != value)
                {
                    this.IsDirty = true;
                    this._endDate = value;
                    OnPropertyChanged(() => EndDate);
                    PropertyChangedCompleted(() => EndDate);
                }
            }
        }

        #endregion

        #region Public Methods

        /// <summary>
        /// <param>Public Method</param>
        /// Method for set IsNew & IsDirty = false;
        /// </summary>
        public void EndUpdate()
        {
            this.IsNew = false;
            this.IsDirty = false;
        }

        /// <summary>
        /// Public Method
        /// <param>Method for set PropertyModel to Entity</param>
        /// </summary>
        public void ToEntity()
        {
            if (IsNew)
                this.base_Promotion.Id = this.Id;
            if (this.Name != null)
                this.base_Promotion.Name = this.Name.Trim();
            if (this.Description != null)
                this.base_Promotion.Description = this.Description.Trim();
            this.base_Promotion.PromotionTypeId = this.PromotionTypeId;
            this.base_Promotion.TakeOffOption = this.TakeOffOption;
            this.base_Promotion.TakeOff = this.TakeOff;
            this.base_Promotion.BuyingQty = this.BuyingQty;
            this.base_Promotion.GetingValue = this.GetingValue;
            this.base_Promotion.IsApplyToAboveQuantities = this.IsApplyToAboveQuantities;
            this.base_Promotion.Status = this.Status;
            this.base_Promotion.DateCreated = this.DateCreated;
            if (this.UserCreated != null)
                this.base_Promotion.UserCreated = this.UserCreated.Trim();
            this.base_Promotion.DateUpdated = this.DateUpdated;
            if (this.UserUpdated != null)
                this.base_Promotion.UserUpdated = this.UserUpdated.Trim();
            this.base_Promotion.Resource = this.Resource;
            this.base_Promotion.CouponExpire = this.CouponExpire;
            this.base_Promotion.IsCouponExpired = this.IsCouponExpired;
            this.base_Promotion.PriceSchemaRange = this.PriceSchemaRange;
            if (this.ReasonReActive != null)
                this.base_Promotion.ReasonReActive = this.ReasonReActive.Trim();
            this.base_Promotion.Sold = this.Sold;
            this.base_Promotion.TotalPrice = this.TotalPrice;
            this.base_Promotion.CategoryId = this.CategoryId;
            if (this.CouponBarCode != null)
                this.base_Promotion.CouponBarCode = this.CouponBarCode.Trim();
            if (this.BarCodeNumber != null)
                this.base_Promotion.BarCodeNumber = this.BarCodeNumber.Trim();
            this.base_Promotion.BarCodeImage = this.BarCodeImage;
            this.base_Promotion.IsConflict = this.IsConflict;
            if (this.Shift != null)
                this.base_Promotion.Shift = this.Shift.Trim();
            this.base_Promotion.StartDate = this.StartDate;
            this.base_Promotion.EndDate = this.EndDate;
        }

        /// <summary>
        /// Public Method
        /// <param>Method for set Entity to PropertyModel</param>
        /// </summary
        public void ToModel()
        {
            this._id = this.base_Promotion.Id;
            this._name = this.base_Promotion.Name;
            this._description = this.base_Promotion.Description;
            this._promotionTypeId = this.base_Promotion.PromotionTypeId;
            this._takeOffOption = this.base_Promotion.TakeOffOption;
            this._takeOff = this.base_Promotion.TakeOff;
            this._buyingQty = this.base_Promotion.BuyingQty;
            this._getingValue = this.base_Promotion.GetingValue;
            this._isApplyToAboveQuantities = this.base_Promotion.IsApplyToAboveQuantities;
            this._status = this.base_Promotion.Status;
            this._dateCreated = this.base_Promotion.DateCreated;
            this._userCreated = this.base_Promotion.UserCreated;
            this._dateUpdated = this.base_Promotion.DateUpdated;
            this._userUpdated = this.base_Promotion.UserUpdated;
            this._resource = this.base_Promotion.Resource;
            this._couponExpire = this.base_Promotion.CouponExpire;
            this._isCouponExpired = this.base_Promotion.IsCouponExpired;
            this._priceSchemaRange = this.base_Promotion.PriceSchemaRange;
            this._reasonReActive = this.base_Promotion.ReasonReActive;
            this._sold = this.base_Promotion.Sold;
            this._totalPrice = this.base_Promotion.TotalPrice;
            this._categoryId = this.base_Promotion.CategoryId;
            this._couponBarCode = this.base_Promotion.CouponBarCode;
            this._barCodeNumber = this.base_Promotion.BarCodeNumber;
            this._barCodeImage = this.base_Promotion.BarCodeImage;
            this._isConflict = this.base_Promotion.IsConflict;
            this._shift = this.base_Promotion.Shift;
            this._startDate = this.base_Promotion.StartDate;
            this._endDate = this.base_Promotion.EndDate;
        }

        /// <summary>
        /// Public Method
        /// <param>Method for set Entity to PropertyModel</param>
        /// </summary
        public void ToModelAndRaise()
        {
            this.Id = this.base_Promotion.Id;
            this.Name = this.base_Promotion.Name;
            this.Description = this.base_Promotion.Description;
            this.PromotionTypeId = this.base_Promotion.PromotionTypeId;
            this.TakeOffOption = this.base_Promotion.TakeOffOption;
            this.TakeOff = this.base_Promotion.TakeOff;
            this.BuyingQty = this.base_Promotion.BuyingQty;
            this.GetingValue = this.base_Promotion.GetingValue;
            this.IsApplyToAboveQuantities = this.base_Promotion.IsApplyToAboveQuantities;
            this.Status = this.base_Promotion.Status;
            this.DateCreated = this.base_Promotion.DateCreated;
            this.UserCreated = this.base_Promotion.UserCreated;
            this.DateUpdated = this.base_Promotion.DateUpdated;
            this.UserUpdated = this.base_Promotion.UserUpdated;
            this.Resource = this.base_Promotion.Resource;
            this.CouponExpire = this.base_Promotion.CouponExpire;
            this.IsCouponExpired = this.base_Promotion.IsCouponExpired;
            this.PriceSchemaRange = this.base_Promotion.PriceSchemaRange;
            this.ReasonReActive = this.base_Promotion.ReasonReActive;
            this.Sold = this.base_Promotion.Sold;
            this.TotalPrice = this.base_Promotion.TotalPrice;
            this.CategoryId = this.base_Promotion.CategoryId;
            this.CouponBarCode = this.base_Promotion.CouponBarCode;
            this.BarCodeNumber = this.base_Promotion.BarCodeNumber;
            this.BarCodeImage = this.base_Promotion.BarCodeImage;
            this.IsConflict = this.base_Promotion.IsConflict;
            this.Shift = this.base_Promotion.Shift;
            this.StartDate = this.base_Promotion.StartDate;
            this.EndDate = this.base_Promotion.EndDate;
        }

        #endregion

        #region Custom Code


        #endregion

        #region IDataErrorInfo Members

        public string Error
        {
            get { throw new NotImplementedException(); }
        }

        public string this[string columnName]
        {
            get
            {
                string message = string.Empty;

                switch (columnName)
                {
                    case "Id":
                        break;
                    case "Name":
                        break;
                    case "Description":
                        break;
                    case "PromotionTypeId":
                        break;
                    case "TakeOffOption":
                        break;
                    case "TakeOff":
                        break;
                    case "BuyingQty":
                        break;
                    case "GetingValue":
                        break;
                    case "IsApplyToAboveQuantities":
                        break;
                    case "Status":
                        break;
                    case "AffectDiscount":
                        break;
                    case "DateCreated":
                        break;
                    case "UserCreated":
                        break;
                    case "DateUpdated":
                        break;
                    case "UserUpdated":
                        break;
                    case "Resource":
                        break;
                    case "CouponExpire":
                        break;
                    case "IsCouponExpired":
                        break;
                    case "PriceSchemaRange":
                        break;
                    case "ReasonReActive":
                        break;
                    case "Sold":
                        break;
                    case "TotalPrice":
                        break;
                    case "CategoryId":
                        break;
                    case "VendorId":
                        break;
                    case "CouponBarCode":
                        break;
                    case "BarCodeNumber":
                        break;
                    case "BarCodeImage":
                        break;
                    case "IsConflict":
                        break;
                    case "Shift":
                        break;
                }

                if (!string.IsNullOrWhiteSpace(message))
                    return message;
                return null;
            }
        }

        #endregion
    }
}

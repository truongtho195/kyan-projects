//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Linq;
using System.Linq.Expressions;
using CPC.Helper;
using CPC.Toolkit.Base;
using CPC.TimeClock.Database;

namespace CPC.TimeClock.Model
{
    /// <summary>
    /// Model for table base_VirtualFolder
    /// </summary>
    [Serializable]
    public partial class base_VirtualFolderModel : ModelBase, IDataErrorInfo
    {
        #region Constructor

        // Default constructor
        public base_VirtualFolderModel()
        {
            this.IsNew = true;
            this.base_VirtualFolder = new base_VirtualFolder();
        }

        // Default constructor that set entity to field
        public base_VirtualFolderModel(base_VirtualFolder base_virtualfolder, bool isRaiseProperties = false)
        {
            this.base_VirtualFolder = base_virtualfolder;
            if (!isRaiseProperties)
                this.ToModel();
            else
                this.ToModelAndRaise();
            this.IsDirty = false;
        }

        #endregion

        #region Entity Properties

        public base_VirtualFolder base_VirtualFolder { get; private set; }

        #endregion

        #region Primitive Properties

        protected int _id;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Id</param>
        /// </summary>
        public int Id
        {
            get { return this._id; }
            set
            {
                if (this._id != value)
                {
                    this.IsDirty = true;
                    this._id = value;
                    OnPropertyChanged(() => Id);
                    PropertyChangedCompleted(() => Id);
                }
            }
        }

        protected Nullable<int> _parentFolderId;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the ParentFolderId</param>
        /// </summary>
        public Nullable<int> ParentFolderId
        {
            get { return this._parentFolderId; }
            set
            {
                if (this._parentFolderId != value)
                {
                    this.IsDirty = true;
                    this._parentFolderId = value;
                    OnPropertyChanged(() => ParentFolderId);
                    PropertyChangedCompleted(() => ParentFolderId);
                }
            }
        }

        protected string _folderName;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the FolderName</param>
        /// </summary>
        public string FolderName
        {
            get { return this._folderName; }
            set
            {
                if (this._folderName != value)
                {
                    this.IsDirty = true;
                    this._folderName = value;
                    OnPropertyChanged(() => FolderName);
                    PropertyChangedCompleted(() => FolderName);
                }
            }
        }

        protected bool _isActived;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the IsActived</param>
        /// </summary>
        public bool IsActived
        {
            get { return this._isActived; }
            set
            {
                if (this._isActived != value)
                {
                    this.IsDirty = true;
                    this._isActived = value;
                    OnPropertyChanged(() => IsActived);
                    PropertyChangedCompleted(() => IsActived);
                }
            }
        }

        protected Nullable<System.DateTime> _dateCreated;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the DateCreated</param>
        /// </summary>
        public Nullable<System.DateTime> DateCreated
        {
            get { return this._dateCreated; }
            set
            {
                if (this._dateCreated != value)
                {
                    this.IsDirty = true;
                    this._dateCreated = value;
                    OnPropertyChanged(() => DateCreated);
                    PropertyChangedCompleted(() => DateCreated);
                }
            }
        }

        protected string _userCreated;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the UserCreated</param>
        /// </summary>
        public string UserCreated
        {
            get { return this._userCreated; }
            set
            {
                if (this._userCreated != value)
                {
                    this.IsDirty = true;
                    this._userCreated = value;
                    OnPropertyChanged(() => UserCreated);
                    PropertyChangedCompleted(() => UserCreated);
                }
            }
        }

        protected Nullable<System.DateTime> _dateUpdated;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the DateUpdated</param>
        /// </summary>
        public Nullable<System.DateTime> DateUpdated
        {
            get { return this._dateUpdated; }
            set
            {
                if (this._dateUpdated != value)
                {
                    this.IsDirty = true;
                    this._dateUpdated = value;
                    OnPropertyChanged(() => DateUpdated);
                    PropertyChangedCompleted(() => DateUpdated);
                }
            }
        }

        protected string _userUpdated;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the UserUpdated</param>
        /// </summary>
        public string UserUpdated
        {
            get { return this._userUpdated; }
            set
            {
                if (this._userUpdated != value)
                {
                    this.IsDirty = true;
                    this._userUpdated = value;
                    OnPropertyChanged(() => UserUpdated);
                    PropertyChangedCompleted(() => UserUpdated);
                }
            }
        }

        protected System.Guid _resource;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Resource</param>
        /// </summary>
        public System.Guid Resource
        {
            get { return this._resource; }
            set
            {
                if (this._resource != value)
                {
                    this.IsDirty = true;
                    this._resource = value;
                    OnPropertyChanged(() => Resource);
                    PropertyChangedCompleted(() => Resource);
                }
            }
        }

        protected string _code;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Code</param>
        /// </summary>
        public string Code
        {
            get { return this._code; }
            set
            {
                if (this._code != value)
                {
                    this.IsDirty = true;
                    this._code = value;
                    OnPropertyChanged(() => Code);
                    PropertyChangedCompleted(() => Code);
                }
            }
        }

        #endregion

        #region Public Methods

        /// <summary>
        /// <param>Public Method</param>
        /// Method for set IsNew & IsDirty = false;
        /// </summary>
        public void EndUpdate()
        {
            this.IsNew = false;
            this.IsDirty = false;
        }

        /// <summary>
        /// Public Method
        /// <param>Method for set PropertyModel to Entity</param>
        /// </summary>
        public void ToEntity()
        {
            if (IsNew)
                this.base_VirtualFolder.Id = this.Id;
            this.base_VirtualFolder.ParentFolderId = this.ParentFolderId;
            if (this.FolderName != null)
                this.base_VirtualFolder.FolderName = this.FolderName.Trim();
            this.base_VirtualFolder.IsActived = this.IsActived;
            this.base_VirtualFolder.DateCreated = this.DateCreated;
            if (this.UserCreated != null)
                this.base_VirtualFolder.UserCreated = this.UserCreated.Trim();
            this.base_VirtualFolder.DateUpdated = this.DateUpdated;
            if (this.UserUpdated != null)
                this.base_VirtualFolder.UserUpdated = this.UserUpdated.Trim();
            this.base_VirtualFolder.Resource = this.Resource;
            if (this.Code != null)
                this.base_VirtualFolder.Code = this.Code.Trim();
        }

        /// <summary>
        /// Public Method
        /// <param>Method for set Entity to PropertyModel</param>
        /// </summary
        public void ToModel()
        {
            this._id = this.base_VirtualFolder.Id;
            this._parentFolderId = this.base_VirtualFolder.ParentFolderId;
            this._folderName = this.base_VirtualFolder.FolderName;
            this._isActived = this.base_VirtualFolder.IsActived;
            this._dateCreated = this.base_VirtualFolder.DateCreated;
            this._userCreated = this.base_VirtualFolder.UserCreated;
            this._dateUpdated = this.base_VirtualFolder.DateUpdated;
            this._userUpdated = this.base_VirtualFolder.UserUpdated;
            this._resource = this.base_VirtualFolder.Resource;
            this._code = this.base_VirtualFolder.Code;
        }

        /// <summary>
        /// Public Method
        /// <param>Method for set Entity to PropertyModel</param>
        /// </summary
        public void ToModelAndRaise()
        {
            this.Id = this.base_VirtualFolder.Id;
            this.ParentFolderId = this.base_VirtualFolder.ParentFolderId;
            this.FolderName = this.base_VirtualFolder.FolderName;
            this.IsActived = this.base_VirtualFolder.IsActived;
            this.DateCreated = this.base_VirtualFolder.DateCreated;
            this.UserCreated = this.base_VirtualFolder.UserCreated;
            this.DateUpdated = this.base_VirtualFolder.DateUpdated;
            this.UserUpdated = this.base_VirtualFolder.UserUpdated;
            this.Resource = this.base_VirtualFolder.Resource;
            this.Code = this.base_VirtualFolder.Code;
        }

        #endregion

        #region Custom Code


        #endregion

        #region IDataErrorInfo Members

        public string Error
        {
            get { throw new NotImplementedException(); }
        }

        public string this[string columnName]
        {
            get
            {
                string message = string.Empty;

                switch (columnName)
                {
                    case "Id":
                        break;
                    case "ParentFolderId":
                        break;
                    case "FolderName":
                        break;
                    case "IsActived":
                        break;
                    case "DateCreated":
                        break;
                    case "UserCreated":
                        break;
                    case "DateUpdated":
                        break;
                    case "UserUpdated":
                        break;
                    case "Resource":
                        break;
                    case "Code":
                        break;
                }

                if (!string.IsNullOrWhiteSpace(message))
                    return message;
                return null;
            }
        }

        #endregion
    }
}

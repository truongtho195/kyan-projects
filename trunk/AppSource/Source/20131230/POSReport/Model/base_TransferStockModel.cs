//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using CPC.POSReport.Database;
using Toolkit.Base;

namespace CPC.POSReport.Model
{
    /// <summary>
    /// Model for table base_TransferStock
    /// </summary>
    [Serializable]
    public partial class base_TransferStockModel : ModelBase, IDataErrorInfo
    {
        #region Constructor

        // Default constructor
        public base_TransferStockModel()
        {
            this.IsNew = true;
            this.base_TransferStock = new base_TransferStock();
        }

        // Default constructor that set entity to field
        public base_TransferStockModel(base_TransferStock base_transferstock, bool isRaiseProperties = false)
        {
            this.base_TransferStock = base_transferstock;
            if (!isRaiseProperties)
                this.ToModel();
            else
                this.ToModelAndRaise();
            this.IsDirty = false;
        }

        #endregion

        #region Entity Properties

        public base_TransferStock base_TransferStock { get; private set; }

        #endregion

        #region Primitive Properties

        protected long _id;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the Id</para>
        /// </summary>
        public long Id
        {
            get { return this._id; }
            set
            {
                if (this._id != value)
                {
                    this.IsDirty = true;
                    this._id = value;
                    OnPropertyChanged(() => Id);
                    PropertyChangedCompleted(() => Id);
                }
            }
        }

        protected string _transferNo;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the TransferNo</para>
        /// </summary>
        public string TransferNo
        {
            get { return this._transferNo; }
            set
            {
                if (this._transferNo != value)
                {
                    this.IsDirty = true;
                    this._transferNo = value;
                    OnPropertyChanged(() => TransferNo);
                    PropertyChangedCompleted(() => TransferNo);
                }
            }
        }

        protected short _fromStore;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the FromStore</para>
        /// </summary>
        public short FromStore
        {
            get { return this._fromStore; }
            set
            {
                if (this._fromStore != value)
                {
                    this.IsDirty = true;
                    this._fromStore = value;
                    OnPropertyChanged(() => FromStore);
                    PropertyChangedCompleted(() => FromStore);
                }
            }
        }

        protected short _toStore;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the ToStore</para>
        /// </summary>
        public short ToStore
        {
            get { return this._toStore; }
            set
            {
                if (this._toStore != value)
                {
                    this.IsDirty = true;
                    this._toStore = value;
                    OnPropertyChanged(() => ToStore);
                    PropertyChangedCompleted(() => ToStore);
                }
            }
        }

        protected decimal _totalQuantity;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the TotalQuantity</para>
        /// </summary>
        public decimal TotalQuantity
        {
            get { return this._totalQuantity; }
            set
            {
                if (this._totalQuantity != value)
                {
                    this.IsDirty = true;
                    this._totalQuantity = value;
                    OnPropertyChanged(() => TotalQuantity);
                    PropertyChangedCompleted(() => TotalQuantity);
                }
            }
        }

        protected Nullable<System.DateTime> _shipDate;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the ShipDate</para>
        /// </summary>
        public Nullable<System.DateTime> ShipDate
        {
            get { return this._shipDate; }
            set
            {
                if (this._shipDate != value)
                {
                    this.IsDirty = true;
                    this._shipDate = value;
                    OnPropertyChanged(() => ShipDate);
                    PropertyChangedCompleted(() => ShipDate);
                }
            }
        }

        protected string _carier;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the Carier</para>
        /// </summary>
        public string Carier
        {
            get { return this._carier; }
            set
            {
                if (this._carier != value)
                {
                    this.IsDirty = true;
                    this._carier = value;
                    OnPropertyChanged(() => Carier);
                    PropertyChangedCompleted(() => Carier);
                }
            }
        }

        protected decimal _shippingFee;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the ShippingFee</para>
        /// </summary>
        public decimal ShippingFee
        {
            get { return this._shippingFee; }
            set
            {
                if (this._shippingFee != value)
                {
                    this.IsDirty = true;
                    this._shippingFee = value;
                    OnPropertyChanged(() => ShippingFee);
                    PropertyChangedCompleted(() => ShippingFee);
                }
            }
        }

        protected string _comment;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the Comment</para>
        /// </summary>
        public string Comment
        {
            get { return this._comment; }
            set
            {
                if (this._comment != value)
                {
                    this.IsDirty = true;
                    this._comment = value;
                    OnPropertyChanged(() => Comment);
                    PropertyChangedCompleted(() => Comment);
                }
            }
        }

        protected System.Guid _resource;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the Resource</para>
        /// </summary>
        public System.Guid Resource
        {
            get { return this._resource; }
            set
            {
                if (this._resource != value)
                {
                    this.IsDirty = true;
                    this._resource = value;
                    OnPropertyChanged(() => Resource);
                    PropertyChangedCompleted(() => Resource);
                }
            }
        }

        protected string _userCreated;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the UserCreated</para>
        /// </summary>
        public string UserCreated
        {
            get { return this._userCreated; }
            set
            {
                if (this._userCreated != value)
                {
                    this.IsDirty = true;
                    this._userCreated = value;
                    OnPropertyChanged(() => UserCreated);
                    PropertyChangedCompleted(() => UserCreated);
                }
            }
        }

        protected System.DateTime _dateCreated;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the DateCreated</para>
        /// </summary>
        public System.DateTime DateCreated
        {
            get { return this._dateCreated; }
            set
            {
                if (this._dateCreated != value)
                {
                    this.IsDirty = true;
                    this._dateCreated = value;
                    OnPropertyChanged(() => DateCreated);
                    PropertyChangedCompleted(() => DateCreated);
                }
            }
        }

        protected short _status;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the Status</para>
        /// </summary>
        public short Status
        {
            get { return this._status; }
            set
            {
                if (this._status != value)
                {
                    this.IsDirty = true;
                    this._status = value;
                    OnPropertyChanged(() => Status);
                    PropertyChangedCompleted(() => Status);
                }
            }
        }

        protected decimal _subTotal;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the SubTotal</para>
        /// </summary>
        public decimal SubTotal
        {
            get { return this._subTotal; }
            set
            {
                if (this._subTotal != value)
                {
                    this.IsDirty = true;
                    this._subTotal = value;
                    OnPropertyChanged(() => SubTotal);
                    PropertyChangedCompleted(() => SubTotal);
                }
            }
        }

        protected decimal _total;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the Total</para>
        /// </summary>
        public decimal Total
        {
            get { return this._total; }
            set
            {
                if (this._total != value)
                {
                    this.IsDirty = true;
                    this._total = value;
                    OnPropertyChanged(() => Total);
                    PropertyChangedCompleted(() => Total);
                }
            }
        }

        protected Nullable<System.DateTime> _dateApplied;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the DateApplied</para>
        /// </summary>
        public Nullable<System.DateTime> DateApplied
        {
            get { return this._dateApplied; }
            set
            {
                if (this._dateApplied != value)
                {
                    this.IsDirty = true;
                    this._dateApplied = value;
                    OnPropertyChanged(() => DateApplied);
                    PropertyChangedCompleted(() => DateApplied);
                }
            }
        }

        protected string _userApplied;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the UserApplied</para>
        /// </summary>
        public string UserApplied
        {
            get { return this._userApplied; }
            set
            {
                if (this._userApplied != value)
                {
                    this.IsDirty = true;
                    this._userApplied = value;
                    OnPropertyChanged(() => UserApplied);
                    PropertyChangedCompleted(() => UserApplied);
                }
            }
        }

        protected Nullable<System.DateTime> _dateReversed;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the DateReversed</para>
        /// </summary>
        public Nullable<System.DateTime> DateReversed
        {
            get { return this._dateReversed; }
            set
            {
                if (this._dateReversed != value)
                {
                    this.IsDirty = true;
                    this._dateReversed = value;
                    OnPropertyChanged(() => DateReversed);
                    PropertyChangedCompleted(() => DateReversed);
                }
            }
        }

        protected string _userReversed;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the UserReversed</para>
        /// </summary>
        public string UserReversed
        {
            get { return this._userReversed; }
            set
            {
                if (this._userReversed != value)
                {
                    this.IsDirty = true;
                    this._userReversed = value;
                    OnPropertyChanged(() => UserReversed);
                    PropertyChangedCompleted(() => UserReversed);
                }
            }
        }

        protected string _shift;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the Shift</para>
        /// </summary>
        public string Shift
        {
            get { return this._shift; }
            set
            {
                if (this._shift != value)
                {
                    this.IsDirty = true;
                    this._shift = value;
                    OnPropertyChanged(() => Shift);
                    PropertyChangedCompleted(() => Shift);
                }
            }
        }

        #endregion

        #region Public Methods

        /// <summary>
        /// <para>Public Method</para>
        /// Method for set IsNew & IsDirty = false;
        /// </summary>
        public void EndUpdate()
        {
            this.IsNew = false;
            this.IsDirty = false;
        }

        /// <summary>
        /// Public Method
        /// <para>Method for set PropertyModel to Entity</para>
        /// </summary>
        public void ToEntity()
        {
            if (IsNew)
                this.base_TransferStock.Id = this.Id;
            this.base_TransferStock.TransferNo = this.TransferNo;
            this.base_TransferStock.FromStore = this.FromStore;
            this.base_TransferStock.ToStore = this.ToStore;
            this.base_TransferStock.TotalQuantity = this.TotalQuantity;
            this.base_TransferStock.ShipDate = this.ShipDate;
            this.base_TransferStock.Carier = this.Carier;
            this.base_TransferStock.ShippingFee = this.ShippingFee;
            this.base_TransferStock.Comment = this.Comment;
            this.base_TransferStock.Resource = this.Resource;
            this.base_TransferStock.UserCreated = this.UserCreated;
            this.base_TransferStock.DateCreated = this.DateCreated;
            this.base_TransferStock.Status = this.Status;
            this.base_TransferStock.SubTotal = this.SubTotal;
            this.base_TransferStock.Total = this.Total;
            this.base_TransferStock.DateApplied = this.DateApplied;
            this.base_TransferStock.UserApplied = this.UserApplied;
            this.base_TransferStock.DateReversed = this.DateReversed;
            this.base_TransferStock.UserReversed = this.UserReversed;
            this.base_TransferStock.Shift = this.Shift;
        }

        /// <summary>
        /// Public Method
        /// <para>Method for set Entity to PropertyModel</para>
        /// </summary
        public void ToModel()
        {
            this._id = this.base_TransferStock.Id;
            this._transferNo = this.base_TransferStock.TransferNo;
            this._fromStore = this.base_TransferStock.FromStore;
            this._toStore = this.base_TransferStock.ToStore;
            this._totalQuantity = this.base_TransferStock.TotalQuantity;
            this._shipDate = this.base_TransferStock.ShipDate;
            this._carier = this.base_TransferStock.Carier;
            this._shippingFee = this.base_TransferStock.ShippingFee;
            this._comment = this.base_TransferStock.Comment;
            this._resource = this.base_TransferStock.Resource;
            this._userCreated = this.base_TransferStock.UserCreated;
            this._dateCreated = this.base_TransferStock.DateCreated;
            this._status = this.base_TransferStock.Status;
            this._subTotal = this.base_TransferStock.SubTotal;
            this._total = this.base_TransferStock.Total;
            this._dateApplied = this.base_TransferStock.DateApplied;
            this._userApplied = this.base_TransferStock.UserApplied;
            this._dateReversed = this.base_TransferStock.DateReversed;
            this._userReversed = this.base_TransferStock.UserReversed;
            this._shift = this.base_TransferStock.Shift;
        }

        /// <summary>
        /// Public Method
        /// <para>Method for set Entity to PropertyModel</para>
        /// </summary
        public void ToModelAndRaise()
        {
            this.Id = this.base_TransferStock.Id;
            this.TransferNo = this.base_TransferStock.TransferNo;
            this.FromStore = this.base_TransferStock.FromStore;
            this.ToStore = this.base_TransferStock.ToStore;
            this.TotalQuantity = this.base_TransferStock.TotalQuantity;
            this.ShipDate = this.base_TransferStock.ShipDate;
            this.Carier = this.base_TransferStock.Carier;
            this.ShippingFee = this.base_TransferStock.ShippingFee;
            this.Comment = this.base_TransferStock.Comment;
            this.Resource = this.base_TransferStock.Resource;
            this.UserCreated = this.base_TransferStock.UserCreated;
            this.DateCreated = this.base_TransferStock.DateCreated;
            this.Status = this.base_TransferStock.Status;
            this.SubTotal = this.base_TransferStock.SubTotal;
            this.Total = this.base_TransferStock.Total;
            this.DateApplied = this.base_TransferStock.DateApplied;
            this.UserApplied = this.base_TransferStock.UserApplied;
            this.DateReversed = this.base_TransferStock.DateReversed;
            this.UserReversed = this.base_TransferStock.UserReversed;
            this.Shift = this.base_TransferStock.Shift;
        }

        #endregion

        #region Custom Code


        #endregion

        #region IDataErrorInfo Members

        public string Error
        {
            get { throw new NotImplementedException(); }
        }

        public string this[string columnName]
        {
            get
            {
                string message = string.Empty;

                switch (columnName)
                {
                    case "Id":
                        break;
                    case "TransferNo":
                        break;
                    case "FromStore":
                        break;
                    case "ToStore":
                        break;
                    case "TotalQuantity":
                        break;
                    case "ShipDate":
                        break;
                    case "Carier":
                        break;
                    case "ShippingFee":
                        break;
                    case "Comment":
                        break;
                    case "Resource":
                        break;
                    case "UserCreated":
                        break;
                    case "DateCreated":
                        break;
                    case "Status":
                        break;
                    case "SubTotal":
                        break;
                    case "Total":
                        break;
                    case "DateApplied":
                        break;
                    case "UserApplied":
                        break;
                    case "DateReversed":
                        break;
                    case "UserReversed":
                        break;
                }

                if (!string.IsNullOrWhiteSpace(message))
                    return message;
                return null;
            }
        }

        #endregion
    }
}

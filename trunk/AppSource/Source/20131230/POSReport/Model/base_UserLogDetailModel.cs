//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using CPC.POSReport.Database;
using Toolkit.Base;

namespace CPC.POSReport.Model
{
    /// <summary>
    /// Model for table base_UserLogDetail
    /// </summary>
    [Serializable]
    public partial class base_UserLogDetailModel : ModelBase, IDataErrorInfo
    {
        #region Constructor

        // Default constructor
        public base_UserLogDetailModel()
        {
            this.IsNew = true;
            this.base_UserLogDetail = new base_UserLogDetail();
        }

        // Default constructor that set entity to field
        public base_UserLogDetailModel(base_UserLogDetail base_userlogdetail, bool isRaiseProperties = false)
        {
            this.base_UserLogDetail = base_userlogdetail;
            if (!isRaiseProperties)
                this.ToModel();
            else
                this.ToModelAndRaise();
            this.IsDirty = false;
        }

        #endregion

        #region Entity Properties

        public base_UserLogDetail base_UserLogDetail { get; private set; }

        #endregion

        #region Primitive Properties

        protected long _id;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the Id</para>
        /// </summary>
        public long Id
        {
            get { return this._id; }
            set
            {
                if (this._id != value)
                {
                    this.IsDirty = true;
                    this._id = value;
                    OnPropertyChanged(() => Id);
                    PropertyChangedCompleted(() => Id);
                }
            }
        }

        protected Nullable<long> _userLogId;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the UserLogId</para>
        /// </summary>
        public Nullable<long> UserLogId
        {
            get { return this._userLogId; }
            set
            {
                if (this._userLogId != value)
                {
                    this.IsDirty = true;
                    this._userLogId = value;
                    OnPropertyChanged(() => UserLogId);
                    PropertyChangedCompleted(() => UserLogId);
                }
            }
        }

        protected Nullable<System.DateTime> _accessedTime;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the AccessedTime</para>
        /// </summary>
        public Nullable<System.DateTime> AccessedTime
        {
            get { return this._accessedTime; }
            set
            {
                if (this._accessedTime != value)
                {
                    this.IsDirty = true;
                    this._accessedTime = value;
                    OnPropertyChanged(() => AccessedTime);
                    PropertyChangedCompleted(() => AccessedTime);
                }
            }
        }

        protected string _moduleName;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the ModuleName</para>
        /// </summary>
        public string ModuleName
        {
            get { return this._moduleName; }
            set
            {
                if (this._moduleName != value)
                {
                    this.IsDirty = true;
                    this._moduleName = value;
                    OnPropertyChanged(() => ModuleName);
                    PropertyChangedCompleted(() => ModuleName);
                }
            }
        }

        protected string _actionDescription;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the ActionDescription</para>
        /// </summary>
        public string ActionDescription
        {
            get { return this._actionDescription; }
            set
            {
                if (this._actionDescription != value)
                {
                    this.IsDirty = true;
                    this._actionDescription = value;
                    OnPropertyChanged(() => ActionDescription);
                    PropertyChangedCompleted(() => ActionDescription);
                }
            }
        }

        #endregion

        #region Public Methods

        /// <summary>
        /// <para>Public Method</para>
        /// Method for set IsNew & IsDirty = false;
        /// </summary>
        public void EndUpdate()
        {
            this.IsNew = false;
            this.IsDirty = false;
        }

        /// <summary>
        /// Public Method
        /// <para>Method for set PropertyModel to Entity</para>
        /// </summary>
        public void ToEntity()
        {
            if (IsNew)
                this.base_UserLogDetail.Id = this.Id;
            this.base_UserLogDetail.UserLogId = this.UserLogId;
            this.base_UserLogDetail.AccessedTime = this.AccessedTime;
            this.base_UserLogDetail.ModuleName = this.ModuleName;
            this.base_UserLogDetail.ActionDescription = this.ActionDescription;
        }

        /// <summary>
        /// Public Method
        /// <para>Method for set Entity to PropertyModel</para>
        /// </summary
        public void ToModel()
        {
            this._id = this.base_UserLogDetail.Id;
            this._userLogId = this.base_UserLogDetail.UserLogId;
            this._accessedTime = this.base_UserLogDetail.AccessedTime;
            this._moduleName = this.base_UserLogDetail.ModuleName;
            this._actionDescription = this.base_UserLogDetail.ActionDescription;
        }

        /// <summary>
        /// Public Method
        /// <para>Method for set Entity to PropertyModel</para>
        /// </summary
        public void ToModelAndRaise()
        {
            this.Id = this.base_UserLogDetail.Id;
            this.UserLogId = this.base_UserLogDetail.UserLogId;
            this.AccessedTime = this.base_UserLogDetail.AccessedTime;
            this.ModuleName = this.base_UserLogDetail.ModuleName;
            this.ActionDescription = this.base_UserLogDetail.ActionDescription;
        }

        #endregion

        #region Custom Code


        #endregion

        #region IDataErrorInfo Members

        public string Error
        {
            get { throw new NotImplementedException(); }
        }

        public string this[string columnName]
        {
            get
            {
                string message = string.Empty;

                switch (columnName)
                {
                    case "Id":
                        break;
                    case "UserLogId":
                        break;
                    case "AccessedTime":
                        break;
                    case "ModuleName":
                        break;
                    case "ActionDescription":
                        break;
                }

                if (!string.IsNullOrWhiteSpace(message))
                    return message;
                return null;
            }
        }

        #endregion
    }
}

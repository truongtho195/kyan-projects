//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using CPC.POS.Database;
using CPC.Toolkit.Base;

namespace CPC.POS.Model
{
    /// <summary>
    /// Model for table base_CostAdjustment
    /// </summary>
    [Serializable]
    public partial class base_CostAdjustmentModel : ModelBase, IDataErrorInfo
    {
        #region Constructor

        // Default constructor
        public base_CostAdjustmentModel()
        {
            this.IsNew = true;
            this.base_CostAdjustment = new base_CostAdjustment();
        }

        // Default constructor that set entity to field
        public base_CostAdjustmentModel(base_CostAdjustment base_costadjustment, bool isRaiseProperties = false)
        {
            this.base_CostAdjustment = base_costadjustment;
            if (!isRaiseProperties)
                this.ToModel();
            else
                this.ToModelAndRaise();
            this.IsDirty = false;
        }

        #endregion

        #region Entity Properties

        public base_CostAdjustment base_CostAdjustment { get; private set; }

        #endregion

        #region Primitive Properties

        protected long _id;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the Id</para>
        /// </summary>
        public long Id
        {
            get { return this._id; }
            set
            {
                if (this._id != value)
                {
                    this.IsDirty = true;
                    this._id = value;
                    OnPropertyChanged(() => Id);
                    PropertyChangedCompleted(() => Id);
                }
            }
        }

        protected System.Guid _resource;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the Resource</para>
        /// </summary>
        public System.Guid Resource
        {
            get { return this._resource; }
            set
            {
                if (this._resource != value)
                {
                    this.IsDirty = true;
                    this._resource = value;
                    OnPropertyChanged(() => Resource);
                    PropertyChangedCompleted(() => Resource);
                }
            }
        }

        protected decimal _costDifference;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the CostDifference</para>
        /// </summary>
        public decimal CostDifference
        {
            get { return this._costDifference; }
            set
            {
                if (this._costDifference != value)
                {
                    this.IsDirty = true;
                    this._costDifference = value;
                    OnPropertyChanged(() => CostDifference);
                    PropertyChangedCompleted(() => CostDifference);
                }
            }
        }

        protected decimal _newCost;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the NewCost</para>
        /// </summary>
        public decimal NewCost
        {
            get { return this._newCost; }
            set
            {
                if (this._newCost != value)
                {
                    this.IsDirty = true;
                    this._newCost = value;
                    OnPropertyChanged(() => NewCost);
                    PropertyChangedCompleted(() => NewCost);
                }
            }
        }

        protected decimal _oldCost;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the OldCost</para>
        /// </summary>
        public decimal OldCost
        {
            get { return this._oldCost; }
            set
            {
                if (this._oldCost != value)
                {
                    this.IsDirty = true;
                    this._oldCost = value;
                    OnPropertyChanged(() => OldCost);
                    PropertyChangedCompleted(() => OldCost);
                }
            }
        }

        protected Nullable<int> _itemCount;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the ItemCount</para>
        /// </summary>
        public Nullable<int> ItemCount
        {
            get { return this._itemCount; }
            set
            {
                if (this._itemCount != value)
                {
                    this.IsDirty = true;
                    this._itemCount = value;
                    OnPropertyChanged(() => ItemCount);
                    PropertyChangedCompleted(() => ItemCount);
                }
            }
        }

        protected System.DateTime _loggedTime;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the LoggedTime</para>
        /// </summary>
        public System.DateTime LoggedTime
        {
            get { return this._loggedTime; }
            set
            {
                if (this._loggedTime != value)
                {
                    this.IsDirty = true;
                    this._loggedTime = value;
                    OnPropertyChanged(() => LoggedTime);
                    PropertyChangedCompleted(() => LoggedTime);
                }
            }
        }

        protected string _reason;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the Reason</para>
        /// </summary>
        public string Reason
        {
            get { return this._reason; }
            set
            {
                if (this._reason != value)
                {
                    this.IsDirty = true;
                    this._reason = value;
                    OnPropertyChanged(() => Reason);
                    PropertyChangedCompleted(() => Reason);
                }
            }
        }

        protected Nullable<int> _storeNumber;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the StoreNumber</para>
        /// </summary>
        public Nullable<int> StoreNumber
        {
            get { return this._storeNumber; }
            set
            {
                if (this._storeNumber != value)
                {
                    this.IsDirty = true;
                    this._storeNumber = value;
                    OnPropertyChanged(() => StoreNumber);
                    PropertyChangedCompleted(() => StoreNumber);
                }
            }
        }

        #endregion

        #region Public Methods

        /// <summary>
        /// <para>Public Method</para>
        /// Method for set IsNew & IsDirty = false;
        /// </summary>
        public void EndUpdate()
        {
            this.IsNew = false;
            this.IsDirty = false;
        }

        /// <summary>
        /// Public Method
        /// <para>Method for set PropertyModel to Entity</para>
        /// </summary>
        public void ToEntity()
        {
            if (IsNew)
                this.base_CostAdjustment.Id = this.Id;
            this.base_CostAdjustment.Resource = this.Resource;
            this.base_CostAdjustment.CostDifference = this.CostDifference;
            this.base_CostAdjustment.NewCost = this.NewCost;
            this.base_CostAdjustment.OldCost = this.OldCost;
            this.base_CostAdjustment.ItemCount = this.ItemCount;
            this.base_CostAdjustment.LoggedTime = this.LoggedTime;
            this.base_CostAdjustment.Reason = this.Reason;
            this.base_CostAdjustment.StoreNumber = this.StoreNumber;
        }

        /// <summary>
        /// Public Method
        /// <para>Method for set Entity to PropertyModel</para>
        /// </summary
        public void ToModel()
        {
            this._id = this.base_CostAdjustment.Id;
            this._resource = this.base_CostAdjustment.Resource;
            this._costDifference = this.base_CostAdjustment.CostDifference;
            this._newCost = this.base_CostAdjustment.NewCost;
            this._oldCost = this.base_CostAdjustment.OldCost;
            this._itemCount = this.base_CostAdjustment.ItemCount;
            this._loggedTime = this.base_CostAdjustment.LoggedTime;
            this._reason = this.base_CostAdjustment.Reason;
            this._storeNumber = this.base_CostAdjustment.StoreNumber;
        }

        /// <summary>
        /// Public Method
        /// <para>Method for set Entity to PropertyModel</para>
        /// </summary
        public void ToModelAndRaise()
        {
            this.Id = this.base_CostAdjustment.Id;
            this.Resource = this.base_CostAdjustment.Resource;
            this.CostDifference = this.base_CostAdjustment.CostDifference;
            this.NewCost = this.base_CostAdjustment.NewCost;
            this.OldCost = this.base_CostAdjustment.OldCost;
            this.ItemCount = this.base_CostAdjustment.ItemCount;
            this.LoggedTime = this.base_CostAdjustment.LoggedTime;
            this.Reason = this.base_CostAdjustment.Reason;
            this.StoreNumber = this.base_CostAdjustment.StoreNumber;
        }

        #endregion

        #region Custom Code


        #endregion

        #region IDataErrorInfo Members

        public string Error
        {
            get { throw new NotImplementedException(); }
        }

        public string this[string columnName]
        {
            get
            {
                string message = string.Empty;

                switch (columnName)
                {
                    case "Id":
                        break;
                    case "Resource":
                        break;
                    case "CostDifference":
                        break;
                    case "NewCost":
                        break;
                    case "OldCost":
                        break;
                    case "ItemCount":
                        break;
                    case "StoreNumber":
                        break;
                    case "LoggedTime":
                        break;
                    case "Reason":
                        break;
                }

                if (!string.IsNullOrWhiteSpace(message))
                    return message;
                return null;
            }
        }

        #endregion
    }
}

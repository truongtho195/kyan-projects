//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using CPC.POS.Database;
using CPC.Toolkit.Base;

namespace CPC.POS.Model
{
    /// <summary>
    /// Model for table base_GuestHiringHistory
    /// </summary>
    [Serializable]
    public partial class base_GuestHiringHistoryModel : ModelBase, IDataErrorInfo
    {
        #region Constructor

        // Default constructor
        public base_GuestHiringHistoryModel()
        {
            this.IsNew = true;
            this.base_GuestHiringHistory = new base_GuestHiringHistory();
        }

        // Default constructor that set entity to field
        public base_GuestHiringHistoryModel(base_GuestHiringHistory base_guesthiringhistory, bool isRaiseProperties = false)
        {
            this.base_GuestHiringHistory = base_guesthiringhistory;
            if (!isRaiseProperties)
                this.ToModel();
            else
                this.ToModelAndRaise();
            this.IsDirty = false;
        }

        #endregion

        #region Entity Properties

        public base_GuestHiringHistory base_GuestHiringHistory { get; private set; }

        #endregion

        #region Primitive Properties

        protected long _id;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the Id</para>
        /// </summary>
        public long Id
        {
            get { return this._id; }
            set
            {
                if (this._id != value)
                {
                    this.IsDirty = true;
                    this._id = value;
                    OnPropertyChanged(() => Id);
                    PropertyChangedCompleted(() => Id);
                }
            }
        }

        protected Nullable<long> _guestId;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the GuestId</para>
        /// </summary>
        public Nullable<long> GuestId
        {
            get { return this._guestId; }
            set
            {
                if (this._guestId != value)
                {
                    this.IsDirty = true;
                    this._guestId = value;
                    OnPropertyChanged(() => GuestId);
                    PropertyChangedCompleted(() => GuestId);
                }
            }
        }

        protected Nullable<System.DateTimeOffset> _startDate;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the StartDate</para>
        /// </summary>
        public Nullable<System.DateTimeOffset> StartDate
        {
            get { return this._startDate; }
            set
            {
                if (this._startDate != value)
                {
                    this.IsDirty = true;
                    this._startDate = value;
                    OnPropertyChanged(() => StartDate);
                    PropertyChangedCompleted(() => StartDate);
                }
            }
        }

        protected Nullable<System.DateTime> _renewDate;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the RenewDate</para>
        /// </summary>
        public Nullable<System.DateTime> RenewDate
        {
            get { return this._renewDate; }
            set
            {
                if (this._renewDate != value)
                {
                    this.IsDirty = true;
                    this._renewDate = value;
                    OnPropertyChanged(() => RenewDate);
                    PropertyChangedCompleted(() => RenewDate);
                }
            }
        }

        protected Nullable<System.DateTime> _promotionDate;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the PromotionDate</para>
        /// </summary>
        public Nullable<System.DateTime> PromotionDate
        {
            get { return this._promotionDate; }
            set
            {
                if (this._promotionDate != value)
                {
                    this.IsDirty = true;
                    this._promotionDate = value;
                    OnPropertyChanged(() => PromotionDate);
                    PropertyChangedCompleted(() => PromotionDate);
                }
            }
        }

        protected Nullable<System.DateTime> _terminateDate;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the TerminateDate</para>
        /// </summary>
        public Nullable<System.DateTime> TerminateDate
        {
            get { return this._terminateDate; }
            set
            {
                if (this._terminateDate != value)
                {
                    this.IsDirty = true;
                    this._terminateDate = value;
                    OnPropertyChanged(() => TerminateDate);
                    PropertyChangedCompleted(() => TerminateDate);
                }
            }
        }

        protected Nullable<bool> _isTerminate;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the IsTerminate</para>
        /// </summary>
        public Nullable<bool> IsTerminate
        {
            get { return this._isTerminate; }
            set
            {
                if (this._isTerminate != value)
                {
                    this.IsDirty = true;
                    this._isTerminate = value;
                    OnPropertyChanged(() => IsTerminate);
                    PropertyChangedCompleted(() => IsTerminate);
                }
            }
        }

        protected Nullable<long> _managerId;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the ManagerId</para>
        /// </summary>
        public Nullable<long> ManagerId
        {
            get { return this._managerId; }
            set
            {
                if (this._managerId != value)
                {
                    this.IsDirty = true;
                    this._managerId = value;
                    OnPropertyChanged(() => ManagerId);
                    PropertyChangedCompleted(() => ManagerId);
                }
            }
        }

        #endregion

        #region Public Methods

        /// <summary>
        /// <para>Public Method</para>
        /// Method for set IsNew & IsDirty = false;
        /// </summary>
        public void EndUpdate()
        {
            this.IsNew = false;
            this.IsDirty = false;
        }

        /// <summary>
        /// Public Method
        /// <para>Method for set PropertyModel to Entity</para>
        /// </summary>
        public void ToEntity()
        {
            if (IsNew)
                this.base_GuestHiringHistory.Id = this.Id;
            this.base_GuestHiringHistory.GuestId = this.GuestId;
            this.base_GuestHiringHistory.StartDate = this.StartDate;
            this.base_GuestHiringHistory.RenewDate = this.RenewDate;
            this.base_GuestHiringHistory.PromotionDate = this.PromotionDate;
            this.base_GuestHiringHistory.TerminateDate = this.TerminateDate;
            this.base_GuestHiringHistory.IsTerminate = this.IsTerminate;
            this.base_GuestHiringHistory.ManagerId = this.ManagerId;
        }

        /// <summary>
        /// Public Method
        /// <para>Method for set Entity to PropertyModel</para>
        /// </summary
        public void ToModel()
        {
            this._id = this.base_GuestHiringHistory.Id;
            this._guestId = this.base_GuestHiringHistory.GuestId;
            this._startDate = this.base_GuestHiringHistory.StartDate;
            this._renewDate = this.base_GuestHiringHistory.RenewDate;
            this._promotionDate = this.base_GuestHiringHistory.PromotionDate;
            this._terminateDate = this.base_GuestHiringHistory.TerminateDate;
            this._isTerminate = this.base_GuestHiringHistory.IsTerminate;
            this._managerId = this.base_GuestHiringHistory.ManagerId;
        }

        /// <summary>
        /// Public Method
        /// <para>Method for set Entity to PropertyModel</para>
        /// </summary
        public void ToModelAndRaise()
        {
            this.Id = this.base_GuestHiringHistory.Id;
            this.GuestId = this.base_GuestHiringHistory.GuestId;
            this.StartDate = this.base_GuestHiringHistory.StartDate;
            this.RenewDate = this.base_GuestHiringHistory.RenewDate;
            this.PromotionDate = this.base_GuestHiringHistory.PromotionDate;
            this.TerminateDate = this.base_GuestHiringHistory.TerminateDate;
            this.IsTerminate = this.base_GuestHiringHistory.IsTerminate;
            this.ManagerId = this.base_GuestHiringHistory.ManagerId;
        }

        #endregion

        #region Custom Code


        #endregion

        #region IDataErrorInfo Members

        public string Error
        {
            get { throw new NotImplementedException(); }
        }

        public string this[string columnName]
        {
            get
            {
                string message = string.Empty;

                switch (columnName)
                {
                    case "Id":
                        break;
                    case "GuestId":
                        break;
                    case "StartDate":
                        break;
                    case "RenewDate":
                        break;
                    case "PromotionDate":
                        break;
                    case "TerminateDate":
                        break;
                    case "IsTerminate":
                        break;
                    case "ManagerId":
                        break;
                }

                if (!string.IsNullOrWhiteSpace(message))
                    return message;
                return null;
            }
        }

        #endregion
    }
}

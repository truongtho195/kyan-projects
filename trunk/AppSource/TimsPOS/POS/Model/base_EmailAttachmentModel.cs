//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using CPC.POS.Database;
using CPC.Toolkit.Base;

namespace CPC.POS.Model
{
    /// <summary>
    /// Model for table base_EmailAttachment
    /// </summary>
    [Serializable]
    public partial class base_EmailAttachmentModel : ModelBase, IDataErrorInfo
    {
        #region Constructor

        // Default constructor
        public base_EmailAttachmentModel()
        {
            this.IsNew = true;
            this.base_EmailAttachment = new base_EmailAttachment();
        }

        // Default constructor that set entity to field
        public base_EmailAttachmentModel(base_EmailAttachment base_emailattachment, bool isRaiseProperties = false)
        {
            this.base_EmailAttachment = base_emailattachment;
            if (!isRaiseProperties)
                this.ToModel();
            else
                this.ToModelAndRaise();
            this.IsDirty = false;
        }

        #endregion

        #region Entity Properties

        public base_EmailAttachment base_EmailAttachment { get; private set; }

        #endregion

        #region Primitive Properties

        protected System.Guid _id;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the Id</para>
        /// </summary>
        public System.Guid Id
        {
            get { return this._id; }
            set
            {
                if (this._id != value)
                {
                    this.IsDirty = true;
                    this._id = value;
                    OnPropertyChanged(() => Id);
                    PropertyChangedCompleted(() => Id);
                }
            }
        }

        protected Nullable<System.Guid> _emailId;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the EmailId</para>
        /// </summary>
        public Nullable<System.Guid> EmailId
        {
            get { return this._emailId; }
            set
            {
                if (this._emailId != value)
                {
                    this.IsDirty = true;
                    this._emailId = value;
                    OnPropertyChanged(() => EmailId);
                    PropertyChangedCompleted(() => EmailId);
                }
            }
        }

        protected Nullable<int> _attachmentId;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the AttachmentId</para>
        /// </summary>
        public Nullable<int> AttachmentId
        {
            get { return this._attachmentId; }
            set
            {
                if (this._attachmentId != value)
                {
                    this.IsDirty = true;
                    this._attachmentId = value;
                    OnPropertyChanged(() => AttachmentId);
                    PropertyChangedCompleted(() => AttachmentId);
                }
            }
        }

        #endregion

        #region Public Methods

        /// <summary>
        /// <para>Public Method</para>
        /// Method for set IsNew & IsDirty = false;
        /// </summary>
        public void EndUpdate()
        {
            this.IsNew = false;
            this.IsDirty = false;
        }

        /// <summary>
        /// Public Method
        /// <para>Method for set PropertyModel to Entity</para>
        /// </summary>
        public void ToEntity()
        {
            if (IsNew)
                this.base_EmailAttachment.Id = this.Id;
            this.base_EmailAttachment.EmailId = this.EmailId;
            this.base_EmailAttachment.AttachmentId = this.AttachmentId;
        }

        /// <summary>
        /// Public Method
        /// <para>Method for set Entity to PropertyModel</para>
        /// </summary
        public void ToModel()
        {
            this._id = this.base_EmailAttachment.Id;
            this._emailId = this.base_EmailAttachment.EmailId;
            this._attachmentId = this.base_EmailAttachment.AttachmentId;
        }

        /// <summary>
        /// Public Method
        /// <para>Method for set Entity to PropertyModel</para>
        /// </summary
        public void ToModelAndRaise()
        {
            this.Id = this.base_EmailAttachment.Id;
            this.EmailId = this.base_EmailAttachment.EmailId;
            this.AttachmentId = this.base_EmailAttachment.AttachmentId;
        }

        #endregion

        #region Custom Code


        #endregion

        #region IDataErrorInfo Members

        public string Error
        {
            get { throw new NotImplementedException(); }
        }

        public string this[string columnName]
        {
            get
            {
                string message = string.Empty;

                switch (columnName)
                {
                    case "Id":
                        break;
                    case "EmailId":
                        break;
                    case "AttachmentId":
                        break;
                }

                if (!string.IsNullOrWhiteSpace(message))
                    return message;
                return null;
            }
        }

        #endregion
    }
}

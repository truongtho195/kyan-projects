<UserControl x:Class="CPC.POS.View.WorkScheduleView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:Anno="http://schemas.microsoft.com/expression/blend/extensions/annotations/2008"
             xmlns:behavior="clr-namespace:CPC.Toolkit.Behavior"
             xmlns:command="clr-namespace:CPC.Toolkit.Command"
             xmlns:control="clr-namespace:CPC.Control"
             xmlns:converter="clr-namespace:CPC.Converter"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:helper="clr-namespace:CPC.Helper"
             xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:local="clr-namespace:CPC.POS"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Luna"
             xmlns:model="clr-namespace:CPC.POS.Model"
             xmlns:timePicker="clr-namespace:TimePicker;assembly=TimePicker"
             xmlns:cpcDataGridControl="clr-namespace:CPCToolkitExt.DataGridControl;assembly=CPCToolkitExt"
             xmlns:WPFToolkit="clr-namespace:Xceed.Wpf.Toolkit;assembly=WPFToolkit.Extended"
             x:Name="workScheduleView"
             Background="{DynamicResource UserControlBackground}"
             d:DesignWidth="1500"
             helper:ValidationHelper.IsEnabled="True"
             helper:ValidationHelper.IsValid="{Binding IsValid, Mode=OneWayToSource}"
             mc:Ignorable="d Anno" Width="Auto">
    <UserControl.Resources>
        <!--  region Converters  -->
        <converter:BoolToVisibilityConverter x:Key="boolToVisibilityConverter" />
        <converter:BoolToVisibilityConverter x:Key="reserseBoolToVisibilityConverter"
                                             FalseToVisibility="Visible" />
        <converter:RadioButtonToBoolConverter x:Key="radioButtonToBoolConverter" />
        <!--  endregion Converters  -->
        <!--  region Styles  -->
        <!--  DataTemplateRowDetailTemplateWorkScheduleViewList  -->
        <DataTemplate x:Key="DataTemplateRowDetailTemplateWorkScheduleViewList">
            <Grid x:Name="Layout"
                  Height="216"
                  VerticalAlignment="Top">
                <Rectangle Fill="{DynamicResource Datagrid_RowDetailTemplate_Background1}"
                           Stroke="{DynamicResource Datagrid_RowDetailTemplate_Border}" />
                <cpcDataGridControl:DataGridControl x:Name="dtgrdSubScheduleHistory"
                                                    Margin="10,10.2,10,10"
                                                    AutoGenerateColumns="False"
                                                    CanUserAddRows="False"
                                                    VisibilityNavigationBar="Collapsed"
                                                    IsReadOnly="True"
                                                    IsRollBackData="False"
                                                    ItemsSource="{Binding EmployeeCollection}"
                                                    SelectionUnit="FullRow"
                                                    Style="{DynamicResource DatagridWithRowHeader}">
                    <cpcDataGridControl:DataGridControl.Columns>
                        <DataGridTextColumn Header="Employees #"
                                            Binding="{Binding GuestNo}"
                                            Width="110" />
                        <DataGridTextColumn Header="First Name"
                                            Binding="{Binding FirstName}"
                                            Width="*" />
                        <DataGridTextColumn Header="Last Name"
                                            Binding="{Binding LastName}"
                                            Width="*"
                                            MaxWidth="512" />
                        <DataGridTextColumn Header="Start Date"
                                            Binding="{Binding EmployeeScheduleModel.StartDate, StringFormat=d}"
                                            Width="150" />
                        <DataGridTextColumn Header="Status"
                                            Binding="{Binding EmployeeScheduleModel.StatusName}"
                                            Width="70" />
                    </cpcDataGridControl:DataGridControl.Columns>
                </cpcDataGridControl:DataGridControl>
            </Grid>
        </DataTemplate>

        <!--  TabItemIsDeleteCollapsedStyle  -->
        <Style x:Key="TabItemIsDeleteCollapsedStyle"
               TargetType="TabItem">
            <Setter Property="FocusVisualStyle"
                    Value="{DynamicResource TabItemFocusVisual}" />
            <Setter Property="Padding"
                    Value="12,2,12,2" />
            <Setter Property="BorderThickness"
                    Value="1,1,1,0" />
            <Setter Property="BorderBrush"
                    Value="{DynamicResource TabControlBorder}" />
            <Setter Property="Foreground"
                    Value="{DynamicResource TabItemControlForeground}" />
            <Setter Property="Background"
                    Value="{DynamicResource TabItemControlBackground}" />
            <Setter Property="HorizontalContentAlignment"
                    Value="Stretch" />
            <Setter Property="VerticalContentAlignment"
                    Value="Stretch" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Border x:Name="border"
                                SnapsToDevicePixels="true">
                            <Grid Margin="0,0,1,0">
                                <Grid x:Name="Transform">
                                    <Border x:Name="Bd"
                                            Background="{DynamicResource TabItemControlBackground}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            CornerRadius="3,3,0,0" />
                                </Grid>
                                <Border BorderThickness="{TemplateBinding BorderThickness}"
                                        Padding="{TemplateBinding Padding}">
                                    <ContentPresenter HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                                      VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                                      ContentSource="Header"
                                                      RecognizesAccessKey="True"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Border>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver"
                                     Value="true">
                                <Setter TargetName="border"
                                        Property="Cursor"
                                        Value="Hand" />
                            </Trigger>
                            <Trigger Property="IsSelected"
                                     Value="true">
                                <Setter Property="Panel.ZIndex"
                                        Value="1" />
                                <Setter TargetName="Bd"
                                        Property="Background"
                                        Value="{DynamicResource TabItemControl_IsSelectedBackground}" />
                            </Trigger>
                            <Trigger Property="IsEnabled"
                                     Value="false">
                                <Setter Property="Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                <Setter TargetName="Bd"
                                        Property="Background"
                                        Value="#FFF5F4EA" />
                                <Setter TargetName="Bd"
                                        Property="BorderBrush"
                                        Value="#FFC9C7BA" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected"
                                               Value="true" />
                                    <Condition Property="TabStripPlacement"
                                               Value="Top" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Margin"
                                        Value="-2,-2,-2,-1" />
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="FontSize"
                    Value="11" />
            <Setter Property="Visibility"
                    Value="{Binding IsDeleted, Converter={StaticResource reserseBoolToVisibilityConverter}}" />
        </Style>
        <!--  DataTemplateTabWorkWeek  -->
        <DataTemplate DataType="{x:Type model:tims_WorkWeekModel}">
            <control:GridReadOnlyControl x:Name="grdContentWeek"
                                         Margin="5,0"
                                         HorizontalAlignment="Stretch"
                                         ColumnReadOnly="8">
                <control:GridReadOnlyControl.IsReadOnly>
                    <Binding Path="DataContext.SelectedWorkSchedule.Status"
                             Converter="{StaticResource radioButtonToBoolConverter}"
                             ConverterParameter="1"
                             RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=UserControl}" />
                </control:GridReadOnlyControl.IsReadOnly>
                <Grid.RowDefinitions>
                    <RowDefinition Height="10" />
                    <RowDefinition Height="5" />
                    <RowDefinition Height="25" />
                    <RowDefinition Height="30" />
                    <RowDefinition Height="25" />
                    <RowDefinition Height="25" />
                    <RowDefinition Height="25" />
                    <RowDefinition Height="25" />
                    <RowDefinition Height="25" />
                    <RowDefinition Height="25" />
                    <RowDefinition Height="25" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="70" />
                    <ColumnDefinition Width="90" />
                    <ColumnDefinition Width="115" />
                    <ColumnDefinition Width="25" />
                    <ColumnDefinition Width="135" />
                    <ColumnDefinition Width="115" />
                    <ColumnDefinition Width="25" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Rectangle x:Name="Line1"
                           Grid.Row="3"
                           Grid.RowSpan="1"
                           Grid.ColumnSpan="8"
                           Height="1"
                           Margin="0,0,0,5"
                           VerticalAlignment="Bottom"
                           Fill="White"
                           Stroke="#FF000000"
                           StrokeThickness="0" />
                <TextBlock x:Name="txtblDay1"
                           Grid.Row="3"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Foreground="White"
                           Text="Day"
                           TextWrapping="NoWrap"
                           d:LayoutOverrides="GridBox" />
                <ToggleButton x:Name="btnMonday"
                              Grid.Row="4"
                              Margin="0,2"
                              HorizontalAlignment="Stretch"
                              Content="Mon"
                              IsChecked="{Binding DayOfWorkWeekCollection[0].HasWork}" />
                <ToggleButton x:Name="btnTuesday"
                              Grid.Row="5"
                              Margin="0,2"
                              HorizontalAlignment="Stretch"
                              Content="Tue"
                              IsChecked="{Binding DayOfWorkWeekCollection[1].HasWork}" />
                <ToggleButton x:Name="btnWednesday"
                              Grid.Row="6"
                              Margin="0,2"
                              HorizontalAlignment="Stretch"
                              Content="Wed"
                              IsChecked="{Binding DayOfWorkWeekCollection[2].HasWork}" />
                <ToggleButton x:Name="btnThursday"
                              Grid.Row="7"
                              Margin="0,2"
                              HorizontalAlignment="Stretch"
                              Content="Thu"
                              IsChecked="{Binding DayOfWorkWeekCollection[3].HasWork}" />
                <ToggleButton x:Name="btnFriday"
                              Grid.Row="8"
                              Margin="0,2"
                              HorizontalAlignment="Stretch"
                              Content="Fri"
                              IsChecked="{Binding DayOfWorkWeekCollection[4].HasWork}" />
                <ToggleButton x:Name="btnSaturday"
                              Grid.Row="9"
                              Margin="0,2"
                              HorizontalAlignment="Stretch"
                              Content="Sat"
                              IsChecked="{Binding DayOfWorkWeekCollection[5].HasWork}" />
                <ToggleButton x:Name="btnSunday"
                              Grid.Row="10"
                              Margin="0,2"
                              HorizontalAlignment="Stretch"
                              Content="Sun"
                              IsChecked="{Binding DayOfWorkWeekCollection[6].HasWork}" />
                <TextBlock x:Name="txtblWork"
                           Grid.Row="2"
                           Grid.Column="1"
                           Grid.ColumnSpan="2"
                           Margin="0,0,0,0"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           FontWeight="Bold"
                           Foreground="White"
                           Text="Work Hours"
                           TextWrapping="NoWrap" />
                <TextBlock x:Name="txtblClockIn"
                           Grid.Row="3"
                           Grid.Column="1"
                           Margin="13,0,0,0"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Foreground="White"
                           Text="Clock-In"
                           TextWrapping="NoWrap" />
                <TextBlock x:Name="txtblClockOut"
                           Grid.Row="3"
                           Grid.Column="2"
                           Margin="5,0,0,0"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Foreground="White"
                           Text="Clock-Out"
                           TextWrapping="NoWrap" />
                <timePicker:TimePickerControl x:Name="tpkMondayClockIn"
                                              Grid.Row="4"
                                              Grid.Column="1"
                                              Margin="10,2,0,2"
                                              VerticalAlignment="Stretch"
                                              ButtonUpDownStyle="{DynamicResource ButtonUpDownStyle}"
                                              IsDisplayDayOfWeek="False"
                                              RealTime="{Binding DayOfWorkWeekCollection[0].WorkIn, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                              Visibility="{Binding DayOfWorkWeekCollection[0].HasWork, Converter={StaticResource boolToVisibilityConverter}}" />
                <timePicker:TimePickerControl x:Name="tpkTuesdayClockIn"
                                              Grid.Row="5"
                                              Grid.Column="1"
                                              Margin="10,2,0,2"
                                              VerticalAlignment="Stretch"
                                              ButtonUpDownStyle="{DynamicResource ButtonUpDownStyle}"
                                              IsDisplayDayOfWeek="False"
                                              RealTime="{Binding DayOfWorkWeekCollection[1].WorkIn, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                              Visibility="{Binding DayOfWorkWeekCollection[1].HasWork, Converter={StaticResource boolToVisibilityConverter}}" />
                <timePicker:TimePickerControl x:Name="tpkWednesdayClockIn"
                                              Grid.Row="6"
                                              Grid.Column="1"
                                              Margin="10,2,0,2"
                                              VerticalAlignment="Stretch"
                                              ButtonUpDownStyle="{DynamicResource ButtonUpDownStyle}"
                                              IsDisplayDayOfWeek="False"
                                              RealTime="{Binding DayOfWorkWeekCollection[2].WorkIn, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                              Visibility="{Binding DayOfWorkWeekCollection[2].HasWork, Converter={StaticResource boolToVisibilityConverter}}" />
                <timePicker:TimePickerControl x:Name="tpkThursdayClockIn"
                                              Grid.Row="7"
                                              Grid.Column="1"
                                              Margin="10,2,0,2"
                                              VerticalAlignment="Stretch"
                                              ButtonUpDownStyle="{DynamicResource ButtonUpDownStyle}"
                                              IsDisplayDayOfWeek="False"
                                              RealTime="{Binding DayOfWorkWeekCollection[3].WorkIn, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                              Visibility="{Binding DayOfWorkWeekCollection[3].HasWork, Converter={StaticResource boolToVisibilityConverter}}" />
                <timePicker:TimePickerControl x:Name="tpkFridayClockIn"
                                              Grid.Row="8"
                                              Grid.Column="1"
                                              Margin="10,2,0,2"
                                              VerticalAlignment="Stretch"
                                              ButtonUpDownStyle="{DynamicResource ButtonUpDownStyle}"
                                              IsDisplayDayOfWeek="False"
                                              RealTime="{Binding DayOfWorkWeekCollection[4].WorkIn, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                              Visibility="{Binding DayOfWorkWeekCollection[4].HasWork, Converter={StaticResource boolToVisibilityConverter}}" />
                <timePicker:TimePickerControl x:Name="tpkSaturdayClockIn"
                                              Grid.Row="9"
                                              Grid.Column="1"
                                              Margin="10,2,0,2"
                                              VerticalAlignment="Stretch"
                                              ButtonUpDownStyle="{DynamicResource ButtonUpDownStyle}"
                                              IsDisplayDayOfWeek="False"
                                              RealTime="{Binding DayOfWorkWeekCollection[5].WorkIn, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                              Visibility="{Binding DayOfWorkWeekCollection[5].HasWork, Converter={StaticResource boolToVisibilityConverter}}" />
                <timePicker:TimePickerControl x:Name="tpkSundayClockIn"
                                              Grid.Row="10"
                                              Grid.Column="1"
                                              Margin="10,2,0,2"
                                              VerticalAlignment="Stretch"
                                              ButtonUpDownStyle="{DynamicResource ButtonUpDownStyle}"
                                              IsDisplayDayOfWeek="False"
                                              RealTime="{Binding DayOfWorkWeekCollection[6].WorkIn, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                              Visibility="{Binding DayOfWorkWeekCollection[6].HasWork, Converter={StaticResource boolToVisibilityConverter}}" />
                <timePicker:TimePickerControl x:Name="tpkMondayClockOut"
                                              Grid.Row="4"
                                              Grid.Column="2"
                                              Margin="10,2,0,2"
                                              VerticalAlignment="Stretch"
                                              ButtonUpDownStyle="{DynamicResource ButtonUpDownStyle}"
                                              RealTime="{Binding DayOfWorkWeekCollection[0].WorkOut, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                              Visibility="{Binding DayOfWorkWeekCollection[0].HasWork, Converter={StaticResource boolToVisibilityConverter}}" />
                <timePicker:TimePickerControl x:Name="tpkTuesdayClockOut"
                                              Grid.Row="5"
                                              Grid.Column="2"
                                              Margin="10,2,0,2"
                                              VerticalAlignment="Stretch"
                                              ButtonUpDownStyle="{DynamicResource ButtonUpDownStyle}"
                                              RealTime="{Binding DayOfWorkWeekCollection[1].WorkOut, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                              Visibility="{Binding DayOfWorkWeekCollection[1].HasWork, Converter={StaticResource boolToVisibilityConverter}}" />
                <timePicker:TimePickerControl x:Name="tpkWednesdayClockOut"
                                              Grid.Row="6"
                                              Grid.Column="2"
                                              Margin="10,2,0,2"
                                              VerticalAlignment="Stretch"
                                              ButtonUpDownStyle="{DynamicResource ButtonUpDownStyle}"
                                              RealTime="{Binding DayOfWorkWeekCollection[2].WorkOut, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                              Visibility="{Binding DayOfWorkWeekCollection[2].HasWork, Converter={StaticResource boolToVisibilityConverter}}" />
                <timePicker:TimePickerControl x:Name="tpkThursdayClockOut"
                                              Grid.Row="7"
                                              Grid.Column="2"
                                              Margin="10,2,0,2"
                                              VerticalAlignment="Stretch"
                                              ButtonUpDownStyle="{DynamicResource ButtonUpDownStyle}"
                                              RealTime="{Binding DayOfWorkWeekCollection[3].WorkOut, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                              Visibility="{Binding DayOfWorkWeekCollection[3].HasWork, Converter={StaticResource boolToVisibilityConverter}}" />
                <timePicker:TimePickerControl x:Name="tpkFridayClockOut"
                                              Grid.Row="8"
                                              Grid.Column="2"
                                              Margin="10,2,0,2"
                                              VerticalAlignment="Stretch"
                                              ButtonUpDownStyle="{DynamicResource ButtonUpDownStyle}"
                                              RealTime="{Binding DayOfWorkWeekCollection[4].WorkOut, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                              Visibility="{Binding DayOfWorkWeekCollection[4].HasWork, Converter={StaticResource boolToVisibilityConverter}}" />
                <timePicker:TimePickerControl x:Name="tpkSaturdayClockOut1"
                                              Grid.Row="9"
                                              Grid.Column="2"
                                              Margin="10,2,0,2"
                                              VerticalAlignment="Stretch"
                                              ButtonUpDownStyle="{DynamicResource ButtonUpDownStyle}"
                                              RealTime="{Binding DayOfWorkWeekCollection[5].WorkOut, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                              Visibility="{Binding DayOfWorkWeekCollection[5].HasWork, Converter={StaticResource boolToVisibilityConverter}}" />
                <timePicker:TimePickerControl x:Name="tpkSaturdayClockOut"
                                              Grid.Row="10"
                                              Grid.Column="2"
                                              Margin="10,2,0,2"
                                              VerticalAlignment="Stretch"
                                              ButtonUpDownStyle="{DynamicResource ButtonUpDownStyle}"
                                              RealTime="{Binding DayOfWorkWeekCollection[6].WorkOut, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                              Visibility="{Binding DayOfWorkWeekCollection[6].HasWork, Converter={StaticResource boolToVisibilityConverter}}" />
                <TextBlock x:Name="txtblLunchBreak"
                           Grid.Row="2"
                           Grid.Column="3"
                           Grid.ColumnSpan="3"
                           Margin="10,0,0,0"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           FontWeight="Bold"
                           Foreground="White"
                           Text="Lunch Break"
                           TextWrapping="NoWrap" />
                <TextBlock x:Name="txtblLunchBreakClockOut"
                           Grid.Row="3"
                           Grid.Column="4"
                           Margin="10,0,0,0"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Foreground="White"
                           Text="Clock-Out"
                           TextWrapping="NoWrap" />
                <TextBlock x:Name="txtblLunchBreakClockIn"
                           Grid.Row="3"
                           Grid.Column="5"
                           Margin="5,0,0,0"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Foreground="White"
                           Text="Clock-In"
                           TextWrapping="NoWrap" />
                <CheckBox x:Name="chkLunchBreakMondayClockOut"
                          Grid.Row="4"
                          Grid.Column="4"
                          Margin="0"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Center"
                          IsChecked="{Binding DayOfWorkWeekCollection[0].LunchBreakFlag}"
                          Visibility="{Binding DayOfWorkWeekCollection[0].HasWork, Converter={StaticResource boolToVisibilityConverter}}" />
                <CheckBox x:Name="chkLunchBreakTuesdayClockOut"
                          Grid.Row="5"
                          Grid.Column="4"
                          Margin="0"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Center"
                          Content=""
                          IsChecked="{Binding DayOfWorkWeekCollection[1].LunchBreakFlag}"
                          Visibility="{Binding DayOfWorkWeekCollection[1].HasWork, Converter={StaticResource boolToVisibilityConverter}}" />
                <CheckBox x:Name="chkLunchBreakWednesdayClockOut"
                          Grid.Row="6"
                          Grid.Column="4"
                          Margin="0"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Center"
                          Content=""
                          IsChecked="{Binding DayOfWorkWeekCollection[2].LunchBreakFlag}"
                          Visibility="{Binding DayOfWorkWeekCollection[2].HasWork, Converter={StaticResource boolToVisibilityConverter}}" />
                <CheckBox x:Name="chkLunchBreakThursdayClockOut"
                          Grid.Row="7"
                          Grid.Column="4"
                          Margin="0"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Center"
                          Content=""
                          IsChecked="{Binding DayOfWorkWeekCollection[3].LunchBreakFlag}"
                          Visibility="{Binding DayOfWorkWeekCollection[3].HasWork, Converter={StaticResource boolToVisibilityConverter}}" />
                <CheckBox x:Name="chkLunchBreakFridayClockOut"
                          Grid.Row="8"
                          Grid.Column="4"
                          Margin="0"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Center"
                          Content=""
                          IsChecked="{Binding DayOfWorkWeekCollection[4].LunchBreakFlag}"
                          Visibility="{Binding DayOfWorkWeekCollection[4].HasWork, Converter={StaticResource boolToVisibilityConverter}}" />
                <CheckBox x:Name="chkLunchBreakSaturdayClockOut"
                          Grid.Row="9"
                          Grid.Column="4"
                          Margin="0"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Center"
                          Content=""
                          IsChecked="{Binding DayOfWorkWeekCollection[5].LunchBreakFlag}"
                          Visibility="{Binding DayOfWorkWeekCollection[5].HasWork, Converter={StaticResource boolToVisibilityConverter}}" />
                <CheckBox x:Name="chkLunchBreakSundayClockOut"
                          Grid.Row="10"
                          Grid.Column="4"
                          Margin="0"
                          HorizontalAlignment="Left"
                          VerticalAlignment="Center"
                          Content=""
                          IsChecked="{Binding DayOfWorkWeekCollection[6].LunchBreakFlag}"
                          Visibility="{Binding DayOfWorkWeekCollection[6].HasWork, Converter={StaticResource boolToVisibilityConverter}}" />
                <timePicker:TimePickerControl x:Name="tpkLunchBreakMondayClockOut"
                                              Grid.Row="4"
                                              Grid.Column="4"
                                              Margin="20,2,0,2"
                                              VerticalAlignment="Stretch"
                                              ButtonUpDownStyle="{DynamicResource ButtonUpDownStyle}"
                                              IsEnabled="{Binding DayOfWorkWeekCollection[0].LunchBreakFlag}"
                                              IsSelectTimeMode="True"
                                              RealTime="{Binding DayOfWorkWeekCollection[0].LunchOut, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                              Visibility="{Binding DayOfWorkWeekCollection[0].HasWork, Converter={StaticResource boolToVisibilityConverter}}" />
                <timePicker:TimePickerControl x:Name="tpkLunchBreakTuesdayClockOut"
                                              Grid.Row="5"
                                              Grid.Column="4"
                                              Margin="20,2,0,2"
                                              VerticalAlignment="Stretch"
                                              ButtonUpDownStyle="{DynamicResource ButtonUpDownStyle}"
                                              IsEnabled="{Binding DayOfWorkWeekCollection[1].LunchBreakFlag}"
                                              IsSelectTimeMode="True"
                                              RealTime="{Binding DayOfWorkWeekCollection[1].LunchOut, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                              Visibility="{Binding DayOfWorkWeekCollection[1].HasWork, Converter={StaticResource boolToVisibilityConverter}}" />
                <timePicker:TimePickerControl x:Name="tpkLunchBreakWednesdayClockOut"
                                              Grid.Row="6"
                                              Grid.Column="4"
                                              Margin="20,2,0,2"
                                              VerticalAlignment="Stretch"
                                              ButtonUpDownStyle="{DynamicResource ButtonUpDownStyle}"
                                              IsEnabled="{Binding DayOfWorkWeekCollection[2].LunchBreakFlag}"
                                              IsSelectTimeMode="True"
                                              RealTime="{Binding DayOfWorkWeekCollection[2].LunchOut, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                              Visibility="{Binding DayOfWorkWeekCollection[2].HasWork, Converter={StaticResource boolToVisibilityConverter}}" />
                <timePicker:TimePickerControl x:Name="tpkLunchBreakThursdayClockOut"
                                              Grid.Row="7"
                                              Grid.Column="4"
                                              Margin="20,2,0,2"
                                              VerticalAlignment="Stretch"
                                              ButtonUpDownStyle="{DynamicResource ButtonUpDownStyle}"
                                              IsEnabled="{Binding DayOfWorkWeekCollection[3].LunchBreakFlag}"
                                              IsSelectTimeMode="True"
                                              RealTime="{Binding DayOfWorkWeekCollection[3].LunchOut, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                              Visibility="{Binding DayOfWorkWeekCollection[3].HasWork, Converter={StaticResource boolToVisibilityConverter}}" />
                <timePicker:TimePickerControl x:Name="tpkLunchBreakFridayClockOut"
                                              Grid.Row="8"
                                              Grid.Column="4"
                                              Margin="20,2,0,2"
                                              VerticalAlignment="Stretch"
                                              ButtonUpDownStyle="{DynamicResource ButtonUpDownStyle}"
                                              IsEnabled="{Binding DayOfWorkWeekCollection[4].LunchBreakFlag}"
                                              IsSelectTimeMode="True"
                                              RealTime="{Binding DayOfWorkWeekCollection[4].LunchOut, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                              Visibility="{Binding DayOfWorkWeekCollection[4].HasWork, Converter={StaticResource boolToVisibilityConverter}}" />
                <timePicker:TimePickerControl x:Name="tpkLunchBreakSaturdayClockOut"
                                              Grid.Row="9"
                                              Grid.Column="4"
                                              Margin="20,2,0,2"
                                              VerticalAlignment="Stretch"
                                              ButtonUpDownStyle="{DynamicResource ButtonUpDownStyle}"
                                              IsEnabled="{Binding DayOfWorkWeekCollection[5].LunchBreakFlag}"
                                              IsSelectTimeMode="True"
                                              RealTime="{Binding DayOfWorkWeekCollection[5].LunchOut, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                              Visibility="{Binding DayOfWorkWeekCollection[5].HasWork, Converter={StaticResource boolToVisibilityConverter}}" />
                <timePicker:TimePickerControl x:Name="tpkLunchBreakSundayClockOut"
                                              Grid.Row="10"
                                              Grid.Column="4"
                                              Margin="20,2,0,2"
                                              VerticalAlignment="Stretch"
                                              ButtonUpDownStyle="{DynamicResource ButtonUpDownStyle}"
                                              IsEnabled="{Binding DayOfWorkWeekCollection[6].LunchBreakFlag}"
                                              IsSelectTimeMode="True"
                                              RealTime="{Binding DayOfWorkWeekCollection[6].LunchOut, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                              Visibility="{Binding DayOfWorkWeekCollection[6].HasWork, Converter={StaticResource boolToVisibilityConverter}}" />
                <timePicker:TimePickerControl x:Name="tpkMondayReturn"
                                              Grid.Row="4"
                                              Grid.Column="5"
                                              Margin="10,2,0,2"
                                              VerticalAlignment="Stretch"
                                              ButtonUpDownStyle="{DynamicResource ButtonUpDownStyle}"
                                              IsEnabled="{Binding DayOfWorkWeekCollection[0].LunchBreakFlag}"
                                              IsSelectTimeMode="True"
                                              RealTime="{Binding DayOfWorkWeekCollection[0].LunchIn, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                              Visibility="{Binding DayOfWorkWeekCollection[0].HasWork, Converter={StaticResource boolToVisibilityConverter}}" />
                <timePicker:TimePickerControl x:Name="tpkTuesdayReturn"
                                              Grid.Row="5"
                                              Grid.Column="5"
                                              Margin="10,2,0,2"
                                              VerticalAlignment="Stretch"
                                              ButtonUpDownStyle="{DynamicResource ButtonUpDownStyle}"
                                              IsEnabled="{Binding DayOfWorkWeekCollection[1].LunchBreakFlag}"
                                              IsSelectTimeMode="True"
                                              RealTime="{Binding DayOfWorkWeekCollection[1].LunchIn, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                              Visibility="{Binding DayOfWorkWeekCollection[1].HasWork, Converter={StaticResource boolToVisibilityConverter}}" />
                <timePicker:TimePickerControl x:Name="tpkWednesdayReturn"
                                              Grid.Row="6"
                                              Grid.Column="5"
                                              Margin="10,2,0,2"
                                              VerticalAlignment="Stretch"
                                              ButtonUpDownStyle="{DynamicResource ButtonUpDownStyle}"
                                              IsEnabled="{Binding DayOfWorkWeekCollection[2].LunchBreakFlag}"
                                              IsSelectTimeMode="True"
                                              RealTime="{Binding DayOfWorkWeekCollection[2].LunchIn, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                              Visibility="{Binding DayOfWorkWeekCollection[2].HasWork, Converter={StaticResource boolToVisibilityConverter}}" />
                <timePicker:TimePickerControl x:Name="tpkThursdayReturn"
                                              Grid.Row="7"
                                              Grid.Column="5"
                                              Margin="10,2,0,2"
                                              VerticalAlignment="Stretch"
                                              ButtonUpDownStyle="{DynamicResource ButtonUpDownStyle}"
                                              IsEnabled="{Binding DayOfWorkWeekCollection[3].LunchBreakFlag}"
                                              IsSelectTimeMode="True"
                                              RealTime="{Binding DayOfWorkWeekCollection[3].LunchIn, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                              Visibility="{Binding DayOfWorkWeekCollection[3].HasWork, Converter={StaticResource boolToVisibilityConverter}}" />
                <timePicker:TimePickerControl x:Name="tpkFridayReturn"
                                              Grid.Row="8"
                                              Grid.Column="5"
                                              Margin="10,2,0,2"
                                              VerticalAlignment="Stretch"
                                              ButtonUpDownStyle="{DynamicResource ButtonUpDownStyle}"
                                              IsEnabled="{Binding DayOfWorkWeekCollection[4].LunchBreakFlag}"
                                              IsSelectTimeMode="True"
                                              RealTime="{Binding DayOfWorkWeekCollection[4].LunchIn, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                              Visibility="{Binding DayOfWorkWeekCollection[4].HasWork, Converter={StaticResource boolToVisibilityConverter}}" />
                <timePicker:TimePickerControl x:Name="tpkSaturdayReturn"
                                              Grid.Row="9"
                                              Grid.Column="5"
                                              Margin="10,2,0,2"
                                              VerticalAlignment="Stretch"
                                              ButtonUpDownStyle="{DynamicResource ButtonUpDownStyle}"
                                              d:IsHidden="True"
                                              IsEnabled="{Binding DayOfWorkWeekCollection[5].LunchBreakFlag}"
                                              IsSelectTimeMode="True"
                                              RealTime="{Binding DayOfWorkWeekCollection[5].LunchIn, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                              Visibility="{Binding DayOfWorkWeekCollection[5].HasWork, Converter={StaticResource boolToVisibilityConverter}}" />
                <timePicker:TimePickerControl x:Name="tpkSundayReturn"
                                              Grid.Row="10"
                                              Grid.Column="5"
                                              Margin="10,2,0,2"
                                              VerticalAlignment="Stretch"
                                              ButtonUpDownStyle="{DynamicResource ButtonUpDownStyle}"
                                              d:IsHidden="True"
                                              IsEnabled="{Binding DayOfWorkWeekCollection[6].LunchBreakFlag}"
                                              IsSelectTimeMode="True"
                                              RealTime="{Binding DayOfWorkWeekCollection[6].LunchIn, Mode=TwoWay, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                                              Visibility="{Binding DayOfWorkWeekCollection[6].HasWork, Converter={StaticResource boolToVisibilityConverter}}" />
                <TextBox x:Name="txtMondayDuration"
                         Grid.Row="4"
                         Grid.Column="7"
                         Width="60"
                         Margin="0,2"
                         HorizontalAlignment="Left"
                         HorizontalContentAlignment="Right"
                         BorderBrush="Black"
                         IsReadOnly="True"
                         Text="{Binding DayOfWorkWeekCollection[0].Duration, Mode=OneWay, StringFormat=\{0\} hrs, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                         TextWrapping="NoWrap"
                         ToolTip="Duration is not greater than 8 hours"
                         Visibility="{Binding DayOfWorkWeekCollection[0].HasWork, Converter={StaticResource boolToVisibilityConverter}}" />
                <TextBox x:Name="txtTuesdayDuration"
                         Grid.Row="5"
                         Grid.Column="7"
                         Width="60"
                         Margin="0,2"
                         HorizontalAlignment="Left"
                         HorizontalContentAlignment="Right"
                         BorderBrush="Black"
                         IsReadOnly="True"
                         Text="{Binding DayOfWorkWeekCollection[1].Duration, Mode=OneWay, StringFormat=\{0\} hrs, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                         TextWrapping="NoWrap"
                         ToolTip="Duration is not greater than 8 hours"
                         Visibility="{Binding DayOfWorkWeekCollection[1].HasWork, Converter={StaticResource boolToVisibilityConverter}}" />
                <TextBox x:Name="txtWednesdayDuration"
                         Grid.Row="6"
                         Grid.Column="7"
                         Width="60"
                         Margin="0,2"
                         HorizontalAlignment="Left"
                         HorizontalContentAlignment="Right"
                         BorderBrush="Black"
                         IsReadOnly="True"
                         Text="{Binding DayOfWorkWeekCollection[2].Duration, Mode=OneWay, StringFormat=\{0\} hrs, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                         TextWrapping="NoWrap"
                         ToolTip="Duration is not greater than 8 hours"
                         Visibility="{Binding DayOfWorkWeekCollection[2].HasWork, Converter={StaticResource boolToVisibilityConverter}}" />
                <TextBox x:Name="txtThursdayDuration"
                         Grid.Row="7"
                         Grid.Column="7"
                         Width="60"
                         Margin="0,2"
                         HorizontalAlignment="Left"
                         HorizontalContentAlignment="Right"
                         BorderBrush="Black"
                         IsReadOnly="True"
                         Text="{Binding DayOfWorkWeekCollection[3].Duration, Mode=OneWay, StringFormat=\{0\} hrs, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                         TextWrapping="NoWrap"
                         ToolTip="Duration is not greater than 8 hours"
                         Visibility="{Binding DayOfWorkWeekCollection[3].HasWork, Converter={StaticResource boolToVisibilityConverter}}" />
                <TextBox x:Name="txtFridayDuration"
                         Grid.Row="8"
                         Grid.Column="7"
                         Width="60"
                         Margin="0,2"
                         HorizontalAlignment="Left"
                         HorizontalContentAlignment="Right"
                         BorderBrush="Black"
                         IsReadOnly="True"
                         Text="{Binding DayOfWorkWeekCollection[4].Duration, Mode=OneWay, StringFormat=\{0\} hrs, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                         TextWrapping="NoWrap"
                         ToolTip="Duration is not greater than 8 hours"
                         Visibility="{Binding DayOfWorkWeekCollection[4].HasWork, Converter={StaticResource boolToVisibilityConverter}}" />
                <TextBox x:Name="txtSaturdayDuration"
                         Grid.Row="9"
                         Grid.Column="7"
                         Width="60"
                         Margin="0,2"
                         HorizontalAlignment="Left"
                         HorizontalContentAlignment="Right"
                         BorderBrush="Black"
                         IsReadOnly="True"
                         Text="{Binding DayOfWorkWeekCollection[5].Duration, Mode=OneWay, StringFormat=\{0\} hrs, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                         TextWrapping="NoWrap"
                         ToolTip="Duration is not greater than 8 hours"
                         Visibility="{Binding DayOfWorkWeekCollection[5].HasWork, Converter={StaticResource boolToVisibilityConverter}}" />
                <TextBox x:Name="txtSundayDuration"
                         Grid.Row="10"
                         Grid.Column="7"
                         Width="60"
                         Margin="0,2"
                         HorizontalAlignment="Left"
                         HorizontalContentAlignment="Right"
                         BorderBrush="Black"
                         IsReadOnly="True"
                         Text="{Binding DayOfWorkWeekCollection[6].Duration, Mode=OneWay, StringFormat=\{0\} hrs, NotifyOnValidationError=True, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
                         TextWrapping="NoWrap"
                         ToolTip="Duration is not greater than 8 hours"
                         Visibility="{Binding DayOfWorkWeekCollection[6].HasWork, Converter={StaticResource boolToVisibilityConverter}}" />
                <TextBlock x:Name="txtblDuration"
                           Grid.Row="2"
                           Grid.Column="7"
                           Margin="0"
                           HorizontalAlignment="Left"
                           VerticalAlignment="Center"
                           FontWeight="Bold"
                           Foreground="White"
                           Text="Duration"
                           TextWrapping="NoWrap" />
                <Rectangle x:Name="imgMondayAlert"
                           Grid.Row="4"
                           Grid.Column="9"
                           Width="15"
                           Height="15"
                           Margin="65,0,0,0"
                           HorizontalAlignment="Left"
                           Fill="{DynamicResource Alert}"
                           StrokeThickness="0"
                           ToolTip="Work time is greater than 8 hours!"
                           Visibility="{Binding DayOfWorkWeekCollection[0].HasAlert, Converter={StaticResource boolToVisibilityConverter}}" />
                <Rectangle x:Name="imgTuesdayAlert"
                           Grid.Row="5"
                           Grid.Column="9"
                           Width="15"
                           Height="15"
                           Margin="65,0,0,0"
                           HorizontalAlignment="Left"
                           Fill="{DynamicResource Alert}"
                           StrokeThickness="0"
                           ToolTip="Work time is greater than 8 hours!"
                           Visibility="{Binding DayOfWorkWeekCollection[1].HasAlert, Converter={StaticResource boolToVisibilityConverter}}" />
                <Rectangle x:Name="imgWednesdayAlert"
                           Grid.Row="6"
                           Grid.Column="9"
                           Width="15"
                           Height="15"
                           Margin="65,0,0,0"
                           HorizontalAlignment="Left"
                           Fill="{DynamicResource Alert}"
                           StrokeThickness="0"
                           ToolTip="Work time is greater than 8 hours!"
                           Visibility="{Binding DayOfWorkWeekCollection[2].HasAlert, Converter={StaticResource boolToVisibilityConverter}}" />
                <Rectangle x:Name="imgThursdayAlert"
                           Grid.Row="7"
                           Grid.Column="9"
                           Width="15"
                           Height="15"
                           Margin="65,0,0,0"
                           HorizontalAlignment="Left"
                           Fill="{DynamicResource Alert}"
                           StrokeThickness="0"
                           ToolTip="Work time is greater than 8 hours!"
                           Visibility="{Binding DayOfWorkWeekCollection[3].HasAlert, Converter={StaticResource boolToVisibilityConverter}}" />
                <Rectangle x:Name="imgFridayAlert"
                           Grid.Row="8"
                           Grid.Column="9"
                           Width="15"
                           Height="15"
                           Margin="65,0,0,0"
                           HorizontalAlignment="Left"
                           Fill="{DynamicResource Alert}"
                           StrokeThickness="0"
                           ToolTip="Work time is greater than 8 hours!"
                           Visibility="{Binding DayOfWorkWeekCollection[4].HasAlert, Converter={StaticResource boolToVisibilityConverter}}" />
                <Rectangle x:Name="imgSaturdayAlert"
                           Grid.Row="9"
                           Grid.Column="9"
                           Width="15"
                           Height="15"
                           Margin="65,0,0,0"
                           HorizontalAlignment="Left"
                           Fill="{DynamicResource Alert}"
                           StrokeThickness="0"
                           ToolTip="Work time is greater than 8 hours!"
                           Visibility="{Binding DayOfWorkWeekCollection[5].HasAlert, Converter={StaticResource boolToVisibilityConverter}}" />
                <Rectangle x:Name="imgSundayAlert"
                           Grid.Row="10"
                           Grid.Column="9"
                           Width="15"
                           Height="15"
                           Margin="65,0,0,0"
                           HorizontalAlignment="Left"
                           Fill="{DynamicResource Alert}"
                           StrokeThickness="0"
                           ToolTip="Work time is greater than 8 hours!"
                           Visibility="{Binding DayOfWorkWeekCollection[6].HasAlert, Converter={StaticResource boolToVisibilityConverter}}" />
            </control:GridReadOnlyControl>
        </DataTemplate>
        <!--  ListBoxItemIsDeleteCollapsedStyle  -->
        <Style x:Key="ListBoxItemIsDeleteCollapsedStyle"
               TargetType="ListBoxItem">
            <Setter Property="Visibility"
                    Value="{Binding IsDeleted, Converter={StaticResource reserseBoolToVisibilityConverter}}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter ContentSource="Content" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected"
                         Value="True">
                    <!--
                        <Setter Property="Panel.ZIndex"
                        Value="1" />
                    -->
                    <Setter Property="Visibility"
                            Value="Visible" />
                    <Setter Property="Background"
                            Value="{DynamicResource TabItemControl_IsSelectedBackground}" />
                </Trigger>
                <Trigger Property="IsSelected"
                         Value="False">
                    <Setter Property="Visibility"
                            Value="Collapsed" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--  endregion Styles  -->
    </UserControl.Resources>
    <Grid x:Name="GridLayout">
        <Rectangle x:Name="UserControl_Background_Image"
                   Fill="{DynamicResource UserControl_Background_Image}" />
        <Grid x:Name="grdCreateWorkScheduleView">
            <!--
                <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
                </Grid.ColumnDefinitions>
            -->
            <Grid x:Name="grdCreateWorkScheduleViewList" d:IsHidden="True">
                <Grid.Visibility>
                    <Binding Path="IsSearchMode"
                             Mode="OneWay"
                             UpdateSourceTrigger="PropertyChanged"
                             Converter="{StaticResource boolToVisibilityConverter}" />
                </Grid.Visibility>
                <Grid.RowDefinitions>
                    <RowDefinition Height="60" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <StackPanel x:Name="stkpBtnCreateWorkScheduleViewList"
                            Height="Auto"
                            Margin="20,0,0,5"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Bottom"
                            Orientation="Horizontal">
                    <Button x:Name="btnNew"
                            Command="{Binding NewCommand}"
                            Width="40"
                            Height="40"
                            Style="{DynamicResource ButtonSystem}"
                            ToolTip="New Work Schedule [Ctrl + N]">
                        <StackPanel x:Name="stkpBtnNew"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center">
                            <Rectangle x:Name="imgNew"
                                       Width="30"
                                       Height="30"
                                       Fill="{DynamicResource New}" />
                            <TextBlock x:Name="txtblNew"
                                       VerticalAlignment="Center"
                                       Style="{DynamicResource ButtonSystemTextBlock}"
                                       Text="New"
                                       TextWrapping="NoWrap"
                                       Visibility="Collapsed" />
                        </StackPanel>
                    </Button>
                    <Button x:Name="btnChangeSchedule"
                            Command="{Binding ChangeScheduleCommand}"
                            Width="40"
                            Height="40"
                            Style="{DynamicResource ButtonSystem}"
                            ToolTip="Change Work Schedule [Ctrl + W]">
                        <StackPanel x:Name="stkpBtnChangeSchedule"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Orientation="Horizontal">
                            <Rectangle x:Name="imgChangeSchedule"
                                       Width="30"
                                       Height="30"
                                       Fill="{DynamicResource ChangeEmployeeSchedule}" />
                            <TextBlock x:Name="txtblSaveCloseCreateWorkScheduleViewList"
                                       Margin="5,0,0,0"
                                       VerticalAlignment="Center"
                                       Style="{DynamicResource ButtonSystemTextBlock}"
                                       Text="ChangeSchedule"
                                       TextWrapping="NoWrap"
                                       Visibility="Collapsed" />
                        </StackPanel>
                    </Button>
                    <Button x:Name="btnDeleteWorkSchedule"
                            Command="{Binding DeleteCommand}"
                            Width="40"
                            Height="40"
                            CommandParameter="{Binding SelectedItem, ElementName=dtgrdScheduleHistory}"
                            Style="{DynamicResource ButtonSystem}">
                        <StackPanel x:Name="stkpBtnDeleteWorkSchedule"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center">
                            <Rectangle x:Name="imgDeleteWorkSchedule"
                                       Width="30"
                                       Height="30"
                                       Fill="{DynamicResource Delete}" />
                            <TextBlock x:Name="txtblDeleteWorkSchedule"
                                       Margin="5,0,0,0"
                                       VerticalAlignment="Center"
                                       Style="{DynamicResource ButtonSystemTextBlock}"
                                       Text="Close"
                                       TextWrapping="NoWrap"
                                       Visibility="Collapsed" />
                        </StackPanel>
                    </Button>
                    <Button x:Name="btnExit"
                            Width="40"
                            Height="40"
                            Style="{DynamicResource ButtonSystem}"
                            Visibility="Collapsed">
                        <StackPanel x:Name="stkpBtnExit"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center">
                            <Rectangle x:Name="imgExit"
                                       Width="26"
                                       Height="30"
                                       Fill="{DynamicResource Exit}" />
                            <TextBlock x:Name="txtblExit"
                                       Margin="5,0,0,0"
                                       VerticalAlignment="Center"
                                       Style="{DynamicResource ButtonSystemTextBlock}"
                                       Text="Attachment"
                                       TextWrapping="NoWrap"
                                       Visibility="Collapsed" />
                        </StackPanel>
                    </Button>
                </StackPanel>
                <Rectangle x:Name="lineCreateWorkScheduleView"
                           Grid.ColumnSpan="2"
                           Height="1"
                           VerticalAlignment="Bottom"
                           Fill="{DynamicResource Spilter_Line_Background}" />
                <TextBlock x:Name="txtblBindingWorkScheduleList"
                           Grid.ColumnSpan="2"
                           Margin="0,0,20,7"
                           HorizontalAlignment="Right"
                           VerticalAlignment="Bottom"
                           Style="{DynamicResource TextBlockTitleFormView}"
                           Text="Work Schedule List" />
                <cpcDataGridControl:DataGridControl x:Name="dtgrdScheduleHistory"
                                                    Grid.Row="1"
                                                    Margin="10,10.1,10,10"
                                                    HorizontalContentAlignment="Stretch"
                                                    AutoGenerateColumns="False"
                                                    behavior:DoubleClickCommandBehavior.DoubleClickCommand="{Binding MouseDoubleClickCommand}"
                                                    behavior:DoubleClickCommandBehavior.DoubleClickCommandParameter="{Binding SelectedItem, ElementName=dtgrdScheduleHistory}"
                                                    CanUserAddRows="False"
                                                    IsReadOnly="True"
                                                    IsRollBackData="False"
                                                    NumberOfItems="{Binding ScheduleTotal,Mode=OneWay}"
                                                    ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                                    ItemsSource="{Binding WorkScheduleCollection}"
                                                    RowDetailsTemplate="{StaticResource DataTemplateRowDetailTemplateWorkScheduleViewList}"
                                                    RowStyle="{DynamicResource DataGridToggleRowStyle}"
                                                    SelectionMode="Single"
                                                    SelectionUnit="FullRow"
                                                    Style="{DynamicResource DatagridWithRowHeader}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <command:EventToCommand Command="{Binding SelectionChangedCommand}"
                                                    CommandParameter="{Binding SelectedItem, ElementName=dtgrdScheduleHistory}" />
                        </i:EventTrigger>
                        <!--
                            <i:EventTrigger EventName="MouseDoubleClick">
                            <command:EventToCommand Command="{Binding MouseDoubleClickCommand}"
                            CommandParameter="{Binding SelectedItem, ElementName=dtgrdScheduleHistory}" />
                            </i:EventTrigger>
                        -->
                    </i:Interaction.Triggers>
                    <cpcDataGridControl:DataGridControl.Columns>
                        <DataGridTemplateColumn Width="25">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <ToggleButton x:Name="toggleButton"
                                                  IsChecked="{Binding IsChecked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                  Style="{DynamicResource PlusMinusToggleButtonStyle}"
                                                  Visibility="{Binding HasEmployee, Converter={StaticResource boolToVisibilityConverter}}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn Header="Schedule Name"
                                            Binding="{Binding WorkScheduleName}"
                                            Width="*"
                                            FontWeight="Bold" />
                        <DataGridTextColumn Header="Type"
                                            Binding="{Binding WorkScheduleTypeName, UpdateSourceTrigger=PropertyChanged}"
                                            Width="150"
                                            FontWeight="Bold" />
                        <DataGridTextColumn Header="# of Employees"
                                            Binding="{Binding NumberOfEmployees}"
                                            Width="90"
                                            FontWeight="Bold" />
                        <DataGridTextColumn Header="Status"
                                            Binding="{Binding StatusName}"
                                            Width="70"
                                            FontWeight="Bold" />
                    </cpcDataGridControl:DataGridControl.Columns>
                </cpcDataGridControl:DataGridControl>
                <Grid x:Name="grdBtnSearchBackNext"
                      Grid.RowSpan="2"
                      Grid.Column="1"
                      Width="15"
                      Height="61"
                      HorizontalAlignment="Right"
                      VerticalAlignment="Center"
                      Visibility="Collapsed">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Button x:Name="tglbtnSearchBack"
                            Width="15"
                            HorizontalAlignment="Right"
                            Background="#02FFFFFF"
                            BorderBrush="{x:Null}"
                            BorderThickness="1"
                            Style="{DynamicResource ButtonSearch}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <command:EventToCommand Command="{Binding MouseDoubleClickCommand}"
                                                        CommandParameter="{Binding SelectedItem, ElementName=dtgrdScheduleHistory}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <Grid x:Name="grdtglbtnSearchBack1">
                            <Path x:Name="pathBack1"
                                  Width="7"
                                  Height="14"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Data="M9.9166667,11.666667 L6.499667,15.999667 9.9163337,19.666334"
                                  RenderTransformOrigin="0.5,0.5"
                                  Stretch="Fill"
                                  Stroke="GreenYellow"
                                  StrokeThickness="2.5" />
                        </Grid>
                    </Button>
                    <Rectangle x:Name="Linebtn"
                               Grid.Row="1"
                               Height="1"
                               VerticalAlignment="Center"
                               Fill="White"
                               StrokeThickness="0"
                               Visibility="Collapsed" />
                    <Button x:Name="tglbtnSearchNext"
                            Grid.Row="2"
                            Width="15"
                            Height="30"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Center"
                            Background="#02E4E4E4"
                            BorderBrush="{x:Null}"
                            BorderThickness="1"
                            Style="{DynamicResource ButtonSearch}"
                            Visibility="Collapsed">
                        <Grid x:Name="grdtglbtnSearchNext1">
                            <Path x:Name="path2"
                                  Width="7"
                                  Height="14"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Data="M9.9166667,11.666667 L6.499667,15.999667 9.9163337,19.666334"
                                  RenderTransformOrigin="0.5,0.5"
                                  Stretch="Fill"
                                  Stroke="White"
                                  StrokeThickness="2.5">
                                <Path.RenderTransform>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="1"
                                                        ScaleY="1" />
                                        <SkewTransform AngleX="0"
                                                       AngleY="0" />
                                        <RotateTransform Angle="180" />
                                        <TranslateTransform X="0"
                                                            Y="0" />
                                    </TransformGroup>
                                </Path.RenderTransform>
                            </Path>
                        </Grid>
                    </Button>
                </Grid>
            </Grid>
            <Rectangle x:Name="grdSpliter"
                       Grid.Column="1"
                       Width="1"
                       HorizontalAlignment="Left"
                       Fill="{DynamicResource Spilter_Line_Background}"
                       Visibility="Collapsed" />
            <Grid x:Name="grdSubCreateChangeSchedule"
                  Grid.Column="1">
                <Grid.Visibility>
                    <Binding Path="IsSearchMode"
                             Mode="OneWay"
                             UpdateSourceTrigger="PropertyChanged"
                             Converter="{StaticResource reserseBoolToVisibilityConverter}" />
                </Grid.Visibility>
                <Grid.RowDefinitions>
                    <RowDefinition Height="60" />
                    <RowDefinition />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Button x:Name="btnBarList"
                        Command="{Binding BarListClickCommand}"
                        Grid.RowSpan="2"
                        Width="22"
                        HorizontalAlignment="Left"
                        Background="#02DFEDFF"
                        BorderBrush="{x:Null}"
                        BorderThickness="1"
                        Style="{DynamicResource ButtonBarSearch}"
                        ToolTip="List [Ctrl + Shift + L]"
                        d:LayoutOverrides="GridBox">
                    <!--
                        <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                        <command:EventToCommand Command="{Binding MouseDoubleClickCommand}"
                        CommandParameter="{Binding SelectedItem, ElementName=dtgrdScheduleHistory}" />
                        </i:EventTrigger>
                        </i:Interaction.Triggers>
                    -->
                    <TextBlock x:Name="txtblShowList"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Style="{DynamicResource ButtonBarSearchTextBlock}"
                               Text="List"
                               TextWrapping="NoWrap">
                        <TextBlock.LayoutTransform>
                            <TransformGroup>
                                <ScaleTransform />
                                <SkewTransform />
                                <RotateTransform Angle="-90" />
                                <TranslateTransform />
                            </TransformGroup>
                        </TextBlock.LayoutTransform>
                    </TextBlock>
                </Button>
                <StackPanel x:Name="stkpBtn"
                            Grid.Column="1"
                            Height="Auto"
                            Margin="20,0,0,5"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Bottom"
                            Orientation="Horizontal">
                    <Button x:Name="btnSaveNew"
                            Command="{Binding SaveCommand}"
                            Width="40"
                            Height="40"
                            Margin="0"
                            CommandParameter="SaveNew"
                            Style="{DynamicResource ButtonSystem}"
                            ToolTip="Save &amp; New [Ctrl + N]">
                        <StackPanel x:Name="stkpBtnSaveNew"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center">
                            <Rectangle x:Name="imgSaveNew"
                                       Width="30"
                                       Height="30"
                                       Fill="{DynamicResource SaveNew}" />
                            <TextBlock x:Name="txtblSaveNew"
                                       VerticalAlignment="Center"
                                       Style="{DynamicResource ButtonSystemTextBlock}"
                                       Text="New"
                                       TextWrapping="NoWrap"
                                       Visibility="Collapsed" />
                        </StackPanel>
                    </Button>
                    <Button x:Name="btnSaveClose"
                            Command="{Binding SaveCommand}"
                            Width="40"
                            Height="40"
                            Style="{DynamicResource ButtonSystem}"
                            ToolTip="Save &amp; Close [Ctrl + S]">
                        <StackPanel x:Name="stkpBtnSaveClose"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Orientation="Horizontal">
                            <Rectangle x:Name="imgSaveClose"
                                       Width="30"
                                       Height="30"
                                       Fill="{DynamicResource SaveClose}" />
                            <TextBlock x:Name="txtblSaveClose"
                                       Margin="5,0,0,0"
                                       VerticalAlignment="Center"
                                       Style="{DynamicResource ButtonSystemTextBlock}"
                                       Text="Save"
                                       TextWrapping="NoWrap"
                                       Visibility="Collapsed" />
                        </StackPanel>
                    </Button>
                    <Button x:Name="btnSave"
                            Width="40"
                            Height="40"
                            Style="{DynamicResource ButtonSystem}"
                            Visibility="Collapsed">
                        <StackPanel x:Name="stkpBtnSave"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Orientation="Horizontal">
                            <Rectangle x:Name="imgSave"
                                       Width="30"
                                       Height="30"
                                       Fill="{DynamicResource Save}" />
                            <TextBlock x:Name="txtblSave"
                                       Margin="5,0,0,0"
                                       VerticalAlignment="Center"
                                       Style="{DynamicResource ButtonSystemTextBlock}"
                                       Text="Save"
                                       TextWrapping="NoWrap"
                                       Visibility="Collapsed" />
                        </StackPanel>
                    </Button>
                    <Button x:Name="btnExitCreateSchedule"
                            Width="40"
                            Height="40"
                            Margin="0"
                            Style="{DynamicResource ButtonSystem}"
                            Visibility="Collapsed">
                        <StackPanel x:Name="stkpBtnExitCreateSchedule"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center">
                            <Rectangle x:Name="imgExitCreateSchedule"
                                       Width="25"
                                       Height="28"
                                       Fill="{DynamicResource Exit}" />
                            <TextBlock x:Name="txtblExitCreateSchedule"
                                       Margin="5,0,0,0"
                                       VerticalAlignment="Center"
                                       Text="Exit"
                                       TextWrapping="NoWrap"
                                       Visibility="Collapsed" />
                        </StackPanel>
                    </Button>
                </StackPanel>
                <TextBlock x:Name="txtblBindingCreateWorkSchedule"
                           Grid.Column="1"
                           Margin="0,0,20,7"
                           HorizontalAlignment="Right"
                           VerticalAlignment="Bottom"
                           Style="{DynamicResource TextBlockTitleFormView}"
                           Text="Work Schedule" d:IsHidden="True">
                    <TextBlock.Visibility>
                        <Binding Path="IsChangeMode"
                                 Mode="OneWay"
                                 UpdateSourceTrigger="PropertyChanged"
                                 Converter="{StaticResource reserseBoolToVisibilityConverter}" />
                    </TextBlock.Visibility>
                </TextBlock>
                <TextBlock x:Name="txtblBindingChangeWorkSchedule"
                           Grid.Column="1"
                           Margin="0,0,20,7"
                           HorizontalAlignment="Right"
                           VerticalAlignment="Bottom"
                           Style="{DynamicResource TextBlockTitleFormView}"
                           Text="Change Work Schedule" d:IsHidden="True">
                    <TextBlock.Visibility>
                        <Binding Path="IsChangeMode"
                                 Mode="OneWay"
                                 UpdateSourceTrigger="PropertyChanged"
                                 Converter="{StaticResource boolToVisibilityConverter}" />
                    </TextBlock.Visibility>
                </TextBlock>
                <Rectangle x:Name="Line"
                           Grid.Column="1"
                           Height="1"
                           Margin="2,0"
                           VerticalAlignment="Bottom"
                           Fill="{DynamicResource Spilter_Line_Background}" />
                <Grid x:Name="grdCreateWorkSchedule"
                      Grid.Row="1"
                      Grid.Column="1"
                      Margin="0,10">
                    <Grid.Visibility>
                        <Binding Path="IsChangeMode"
                                 Mode="OneWay"
                                 UpdateSourceTrigger="PropertyChanged"
                                 Converter="{StaticResource reserseBoolToVisibilityConverter}" />
                    </Grid.Visibility>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="25" />
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <AdornerDecorator>
                        <control:GridReadOnlyControl x:Name="grdBasic"
                                                     Margin="10,0"
                                                     ColumnReadOnly="2">
                            <control:GridReadOnlyControl.IsReadOnly>
                                <Binding Path="SelectedWorkSchedule.Status"
                                         Converter="{StaticResource radioButtonToBoolConverter}"
                                         ConverterParameter="1" />
                            </control:GridReadOnlyControl.IsReadOnly>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="105" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <TextBlock x:Name="txtblWorkScheduleName"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       Style="{DynamicResource TextBlockNormal}"
                                       Text="Schedule Name:"
                                       TextWrapping="NoWrap" />
                            <TextBox x:Name="txtWorkScheduleName"
                                     Grid.Column="1"
                                     Width="400"
                                     Margin="0,2"
                                     HorizontalAlignment="Left"
                                     MaxLength="200"
                                     Padding="2,0"
                                     TextWrapping="NoWrap">
                                <TextBox.Text>
                                    <Binding Path="SelectedWorkSchedule.WorkScheduleName"
                                             UpdateSourceTrigger="PropertyChanged"
                                             NotifyOnValidationError="True"
                                             ValidatesOnDataErrors="True" />
                                </TextBox.Text>
                            </TextBox>
                            <TextBlock x:Name="txtblStatus"
                                       Grid.Column="1"
                                       Margin="467,0,0,0"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       Style="{DynamicResource TextBlockNormal}"
                                       Text="Status:"
                                       TextWrapping="NoWrap" />
                            <ComboBox x:Name="cboStatus"
                                      Grid.Column="1"
                                      Width="110"
                                      Height="21"
                                      Margin="513,2,0,2"
                                      HorizontalAlignment="Left"
                                      Background="{Binding SelectedItem.BackColor, ElementName=cboStatus}"
                                      DisplayMemberPath="Text"
                                      Foreground="{Binding SelectedItem.ForeColor, ElementName=cboStatus}"
                                      IsEnabled="False"
                                      ItemsSource="{x:Static helper:Common.ScheduleStatuses}"
                                      SelectedValue="{Binding SelectedWorkSchedule.Status}"
                                      SelectedValuePath="Value" />
                        </control:GridReadOnlyControl>
                    </AdornerDecorator>
                    <!--  region The fake tab work schedule  -->
                    <control:ListBoxCustom x:Name="lstBoxWorkSchedule"
                                           Grid.Row="2"
                                           Margin="10,0"
                                           Background="{DynamicResource TabControlBackground}"
                                           BorderBrush="{DynamicResource TabControlBorder}"
                                           BorderThickness="1"
                                           ItemContainerStyle="{StaticResource ListBoxItemIsDeleteCollapsedStyle}"
                                           ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                        <ListBox.SelectedIndex>
                            <Binding Path="SelectedIndex"
                                     Mode="OneWay"
                                     UpdateSourceTrigger="PropertyChanged"
                                     ElementName="tabControlWorkSchedule" />
                        </ListBox.SelectedIndex>
                        <ListBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Grid IsItemsHost="True" />
                            </ItemsPanelTemplate>
                        </ListBox.ItemsPanel>
                        <ListBoxItem x:Name="lstBoxItemContentScheduleDetail">
                            <Grid x:Name="grdContentScheduleDetail">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="105" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <GroupBox x:Name="grpWorkScheduleType"
                                          Margin="10,5,10,0"
                                          Background="#19FFFFFF">
                                    <GroupBox.Header>
                                        <TextBlock x:Name="txtblWorkScheduleType"
                                                   FontSize="14"
                                                   FontWeight="Bold"
                                                   Foreground="{DynamicResource GroupboxHeaderForeground}"
                                                   Text="Schedule Type"
                                                   TextWrapping="NoWrap" />
                                    </GroupBox.Header>
                                    <control:GridReadOnlyControl x:Name="grdContentScheduleType"
                                                                 Width="Auto"
                                                                 Margin="0,5,0,0">
                                        <control:GridReadOnlyControl.IsReadOnly>
                                            <Binding Path="SelectedWorkSchedule.Status"
                                                     Converter="{StaticResource radioButtonToBoolConverter}"
                                                     ConverterParameter="1" />
                                        </control:GridReadOnlyControl.IsReadOnly>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="24" />
                                            <RowDefinition Height="24" />
                                            <RowDefinition Height="24" />
                                        </Grid.RowDefinitions>
                                        <RadioButton x:Name="radFixed"
                                                     Margin="10,0,0,0"
                                                     HorizontalAlignment="Left"
                                                     VerticalAlignment="Center"
                                                     Content="Fixed: The Employee must complete a Clock-In and Out schedule"
                                                     Foreground="White"
                                                     GroupName="grpFixed"
                                                     IsChecked="{Binding SelectedWorkSchedule.WorkScheduleType, ConverterParameter=1, Converter={StaticResource radioButtonToBoolConverter}}" />
                                        <RadioButton x:Name="radVariable"
                                                     Grid.Row="1"
                                                     Margin="10,0,0,0"
                                                     HorizontalAlignment="Left"
                                                     VerticalAlignment="Center"
                                                     Content="Variable: The Employee must complete a specified number of daily hours"
                                                     Foreground="White"
                                                     GroupName="grpVariable"
                                                     IsChecked="{Binding SelectedWorkSchedule.WorkScheduleType, ConverterParameter=2, Converter={StaticResource radioButtonToBoolConverter}}" />
                                        <RadioButton x:Name="radRotation"
                                                     Grid.Row="3"
                                                     Margin="10,0,0,0"
                                                     HorizontalAlignment="Left"
                                                     VerticalAlignment="Center"
                                                     Content="Rotation ( the schedule changes automatically each week )"
                                                     Foreground="White"
                                                     GroupName="grpRotation"
                                                     IsChecked="{Binding SelectedWorkSchedule.WorkScheduleType, ConverterParameter=3, Converter={StaticResource radioButtonToBoolConverter}}" />
                                        <TextBlock x:Name="txtblRotate"
                                                   Grid.Row="2"
                                                   Margin="383,0,0,0"
                                                   HorizontalAlignment="Left"
                                                   VerticalAlignment="Center"
                                                   Foreground="White"
                                                   IsEnabled="{Binding IsChecked, ElementName=radRotation}"
                                                   Text="Schedules to rotate:"
                                                   TextWrapping="NoWrap" />
                                        <WPFToolkit:IntegerUpDown x:Name="udRotate"
                                                                  Grid.Row="2"
                                                                  Width="50"
                                                                  Margin="490,0,0,2"
                                                                  HorizontalAlignment="Left"
                                                                  VerticalAlignment="Center"
                                                                  Increment="1"
                                                                  IsEnabled="{Binding IsChecked, ElementName=radRotation}"
                                                                  Maximum="4"
                                                                  Minimum="{Binding SelectedWorkSchedule.MinRotation,Mode=OneWay}"
                                                                  Value="{Binding SelectedWorkSchedule.Rotate,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" Height="21" />
                                    </control:GridReadOnlyControl>
                                </GroupBox>
                                <!--  region The fake tab work week  -->
                                <control:ListBoxCustom x:Name="lstBoxWorkWeek"
                                                       Grid.Row="2"
                                                       Margin="10,0,10,10"
                                                       Background="{x:Null}"
                                                       BorderBrush="{DynamicResource TabControlBorder}"
                                                       BorderThickness="1"
                                                       IsSynchronizedWithCurrentItem="True"
                                                       ItemContainerStyle="{StaticResource ListBoxItemIsDeleteCollapsedStyle}"
                                                       ItemsSource="{Binding SelectedWorkSchedule.WorkWeekCollection, Mode=OneWay}"
                                                       VirtualizingStackPanel.IsVirtualizing="True"
                                                       VirtualizingStackPanel.VirtualizationMode="Standard">
                                    <ListBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <Grid IsItemsHost="True" />
                                        </ItemsPanelTemplate>
                                    </ListBox.ItemsPanel>
                                </control:ListBoxCustom>
                                <TabControl x:Name="tabWorkWeek"
                                            Grid.Row="1"
                                            Margin="12,10,10,0"
                                            IsSynchronizedWithCurrentItem="True"
                                            ItemContainerStyle="{StaticResource TabItemIsDeleteCollapsedStyle}"
                                            ItemsSource="{Binding SelectedWorkSchedule.WorkWeekCollection, Mode=OneWay}"
                                            SelectedItem="{Binding SelectedWorkSchedule.SelectedWorkWeek, Mode=TwoWay}"
                                            VirtualizingStackPanel.IsVirtualizing="True"
                                            VirtualizingStackPanel.VirtualizationMode="Standard">
                                    <TabControl.Template>
                                        <ControlTemplate TargetType="TabControl">
                                            <TabPanel IsItemsHost="True" />
                                            <!--  no content presenter  -->
                                        </ControlTemplate>
                                    </TabControl.Template>
                                    <TabControl.ItemTemplate>
                                        <DataTemplate>
                                            <Grid x:Name="grdTabItemWeek">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="110" />
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="Auto" />
                                                </Grid.ColumnDefinitions>
                                                <TextBlock x:Name="txtblTabWeek1"
                                                           HorizontalAlignment="Center"
                                                           VerticalAlignment="Center"
                                                           Foreground="White"
                                                           Style="{DynamicResource TabItemTextBlock}"
                                                           Text="{Binding Week, Mode=OneWay, StringFormat=Total Hours Week \{0\}:}"
                                                           TextWrapping="NoWrap" />
                                                <Rectangle x:Name="bgTabWeekTime"
                                                           Grid.Column="1"
                                                           Stroke="White" />
                                                <TextBlock x:Name="txtblTabWeekTime"
                                                           Grid.Column="1"
                                                           Margin="5,0"
                                                           HorizontalAlignment="Center"
                                                           VerticalAlignment="Center"
                                                           FontWeight="Bold"
                                                           Foreground="#FFFF0000"
                                                           Text="{Binding TotalHours, Mode=OneWay}"
                                                           TextWrapping="NoWrap" />
                                                <TextBlock Grid.Column="2"
                                                           Style="{DynamicResource TextBlockNormal}"
                                                           Tag="{Binding IsNotHasWorkDay, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" />
                                            </Grid>
                                        </DataTemplate>
                                    </TabControl.ItemTemplate>
                                </TabControl>
                                <!--  endregion The fake tab work week  -->
                            </Grid>
                        </ListBoxItem>
                        <ListBoxItem x:Name="lstBoxItemEmployees">
                            <Grid x:Name="grdEmployees">
                                <GroupBox x:Name="gbList"
                                          Grid.Row="2"
                                          Margin="10">
                                    <GroupBox.Header>
                                        <TextBlock x:Name="txtblList"
                                                   Foreground="{DynamicResource GroupboxHeaderForeground}"
                                                   Style="{DynamicResource GroupboxTextBlock}"
                                                   Text="List"
                                                   TextWrapping="NoWrap" />
                                    </GroupBox.Header>
                                    <Grid x:Name="grdList"
                                          Margin="0,4,0,0">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="55" />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <StackPanel x:Name="stkpBtnAddRemoveWorkSchedule"
                                                    Height="Auto"
                                                    Margin="10,0,0,0"
                                                    HorizontalAlignment="Left"
                                                    VerticalAlignment="Center"
                                                    Orientation="Horizontal">
                                            <Button x:Name="btnAssignWorkSchedule"
                                                    Command="{Binding AssignWorkScheduleCommand}"
                                                    Width="40"
                                                    Height="40"
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    Style="{DynamicResource ButtonSystem}">
                                                <StackPanel x:Name="stkpBtnAssignWorkSchedule"
                                                            HorizontalAlignment="Center"
                                                            VerticalAlignment="Center"
                                                            Orientation="Horizontal">
                                                    <Rectangle x:Name="imgAssignWorkSchedule"
                                                               Width="35"
                                                               Height="35"
                                                               Fill="{DynamicResource AssignWorkSchedule}" />
                                                    <TextBlock x:Name="txtblAssignWorkSchedule"
                                                               Margin="5,0,0,0"
                                                               VerticalAlignment="Center"
                                                               Foreground="White"
                                                               Style="{DynamicResource ButtonSystemTextBlock}"
                                                               Text="Assign Permission"
                                                               TextWrapping="NoWrap"
                                                               Visibility="Collapsed" />
                                                </StackPanel>
                                            </Button>
                                            <Button x:Name="btnUnassignWorkSchedule"
                                                    Command="{Binding UnassignWorkScheduleCommand}"
                                                    Width="40"
                                                    Height="40"
                                                    Margin="10,0,0,0"
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    CommandParameter="{Binding SelectedItems, ElementName=dtgrdEmployeeList}"
                                                    Style="{DynamicResource ButtonSystem}">
                                                <StackPanel x:Name="stkpBtnUnassignWorkSchedule"
                                                            HorizontalAlignment="Center"
                                                            VerticalAlignment="Center"
                                                            Orientation="Horizontal">
                                                    <Rectangle x:Name="imgUnassignWorkSchedule"
                                                               Width="35"
                                                               Height="35"
                                                               Fill="{DynamicResource RemoveWorkSchedule}" />
                                                    <TextBlock x:Name="txtblUnassignWorkSchedule"
                                                               Margin="5,0,0,0"
                                                               VerticalAlignment="Center"
                                                               Style="{DynamicResource ButtonSystemTextBlock}"
                                                               Text="Unassign Work Schedule"
                                                               TextWrapping="NoWrap"
                                                               Visibility="Collapsed" />
                                                </StackPanel>
                                            </Button>
                                        </StackPanel>
                                        <cpcDataGridControl:DataGridControl x:Name="dtgrdEmployeeList"
                                                                            Grid.Row="1"
                                                                            Margin="5"
                                                                            AutoGenerateColumns="False"
                                                                            CanUserAddRows="False"
                                                                            IsReadOnly="True"
                                                                            NumberOfItems="{Binding SelectedWorkSchedule.NumberOfEmployees,Mode=OneWay}"
                                                                            ItemsSource="{Binding SelectedWorkSchedule.EmployeeCollection}"
                                                                            SelectionUnit="FullRow"
                                                                            Style="{DynamicResource DatagridWithRowHeader}">
                                            <cpcDataGridControl:DataGridControl.Columns>
                                                <DataGridTextColumn Width="25"
                                                                    Visibility="Collapsed">
                                                    <DataGridTextColumn.HeaderTemplate>
                                                        <DataTemplate>
                                                            <CheckBox />
                                                        </DataTemplate>
                                                    </DataGridTextColumn.HeaderTemplate>
                                                </DataGridTextColumn>
                                                <DataGridTextColumn Header="Employee #"
                                                                    Binding="{Binding GuestNo}"
                                                                    Width="90" />
                                                <DataGridTextColumn Header="First Name"
                                                                    Binding="{Binding FirstName}"
                                                                    Width="*"
                                                                    MaxWidth="512" />
                                                <DataGridTextColumn Header="Last Name"
                                                                    Binding="{Binding LastName}"
                                                                    Width="*"
                                                                    MaxWidth="512" />
                                                <DataGridTextColumn Header="Start Date"
                                                                    Binding="{Binding EmployeeScheduleModel.StartDate, StringFormat=d}"
                                                                    Width="110" />
                                                <DataGridTextColumn Header="Status"
                                                                    Binding="{Binding EmployeeScheduleModel.StatusName}"
                                                                    Width="70" />
                                            </cpcDataGridControl:DataGridControl.Columns>
                                        </cpcDataGridControl:DataGridControl>
                                        <Grid x:Name="dtgrdEmployeeItem2_Copy2"
                                              Grid.Row="1"
                                              Margin="6,26,6,0"
                                              VerticalAlignment="Top"
                                              Visibility="Collapsed">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="0" />
                                                <ColumnDefinition Width="90" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="110" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="25" />
                                                <RowDefinition Height="25" />
                                                <RowDefinition Height="25" />
                                            </Grid.RowDefinitions>
                                            <CheckBox HorizontalAlignment="Center"
                                                      VerticalAlignment="Center" />
                                            <CheckBox Grid.Row="1"
                                                      HorizontalAlignment="Center"
                                                      VerticalAlignment="Center" />
                                            <CheckBox Grid.Row="2"
                                                      HorizontalAlignment="Center"
                                                      VerticalAlignment="Center" />
                                            <TextBlock x:Name="txtblTemplateName7_Copy"
                                                       Grid.Column="1"
                                                       Margin="0,0,5,0"
                                                       HorizontalAlignment="{DynamicResource DatagridRightHorizontalAlignment}"
                                                       VerticalAlignment="Center"
                                                       Foreground="Black"
                                                       Text="00000001"
                                                       TextWrapping="NoWrap" />
                                            <TextBlock x:Name="txtblTemplateName8_Copy"
                                                       Grid.Row="2"
                                                       Grid.Column="1"
                                                       Margin="0,0,5,0"
                                                       HorizontalAlignment="{DynamicResource DatagridRightHorizontalAlignment}"
                                                       VerticalAlignment="Center"
                                                       Foreground="Black"
                                                       Text="00000003"
                                                       TextWrapping="NoWrap" />
                                            <TextBlock x:Name="txtblTemplateName9_Copy"
                                                       Grid.Row="1"
                                                       Grid.Column="1"
                                                       Margin="0,0,5,0"
                                                       HorizontalAlignment="{DynamicResource DatagridRightHorizontalAlignment}"
                                                       VerticalAlignment="Center"
                                                       Foreground="Black"
                                                       Text="00000002"
                                                       TextWrapping="NoWrap" />
                                            <TextBlock x:Name="txtblTemplateName1_Copy"
                                                       Grid.Column="2"
                                                       Margin="5,0,0,0"
                                                       HorizontalAlignment="{DynamicResource DatagridLeftHorizontalAlignment}"
                                                       VerticalAlignment="Center"
                                                       Foreground="Black"
                                                       Text="Marry"
                                                       TextWrapping="NoWrap" />
                                            <TextBlock x:Name="txtblTemplateName2_Copy"
                                                       Grid.Row="2"
                                                       Grid.Column="2"
                                                       Margin="5,0,0,0"
                                                       HorizontalAlignment="{DynamicResource DatagridLeftHorizontalAlignment}"
                                                       VerticalAlignment="Center"
                                                       Foreground="Black"
                                                       Text="Bill"
                                                       TextWrapping="NoWrap" />
                                            <TextBlock x:Name="txtblTemplateName3_Copy"
                                                       Grid.Row="1"
                                                       Grid.Column="2"
                                                       Margin="5,0,0,0"
                                                       HorizontalAlignment="{DynamicResource DatagridLeftHorizontalAlignment}"
                                                       VerticalAlignment="Center"
                                                       Foreground="Black"
                                                       Text="John"
                                                       TextWrapping="NoWrap" />
                                            <TextBlock x:Name="txtblTemplateName4_Copy"
                                                       Grid.Column="3"
                                                       Margin="5,0,0,0"
                                                       HorizontalAlignment="{DynamicResource DatagridLeftHorizontalAlignment}"
                                                       VerticalAlignment="Center"
                                                       Foreground="Black"
                                                       Text="Ly"
                                                       TextWrapping="NoWrap" />
                                            <TextBlock x:Name="txtblTemplateName5_Copy"
                                                       Grid.Row="2"
                                                       Grid.Column="3"
                                                       Margin="5,0,0,0"
                                                       HorizontalAlignment="{DynamicResource DatagridLeftHorizontalAlignment}"
                                                       VerticalAlignment="Center"
                                                       Foreground="Black"
                                                       Text="Gate"
                                                       TextWrapping="NoWrap" />
                                            <TextBlock x:Name="txtblTemplateName6_Copy"
                                                       Grid.Row="1"
                                                       Grid.Column="3"
                                                       Margin="5,0,0,0"
                                                       HorizontalAlignment="{DynamicResource DatagridLeftHorizontalAlignment}"
                                                       VerticalAlignment="Center"
                                                       Foreground="Black"
                                                       Text="D.Rockffer"
                                                       TextWrapping="NoWrap" />
                                            <TextBlock x:Name="txtblTemplateDate1_Copy"
                                                       Grid.Column="4"
                                                       Margin="0,0,5,0"
                                                       HorizontalAlignment="{DynamicResource DatagridRightHorizontalAlignment}"
                                                       VerticalAlignment="Center"
                                                       Foreground="Black"
                                                       Text="12/02/2010"
                                                       TextWrapping="NoWrap" />
                                            <TextBlock x:Name="txtblTemplateDate2_Copy"
                                                       Grid.Row="2"
                                                       Grid.Column="4"
                                                       Margin="0,0,5,0"
                                                       HorizontalAlignment="{DynamicResource DatagridRightHorizontalAlignment}"
                                                       VerticalAlignment="Center"
                                                       Foreground="Black"
                                                       Text="12/02/2010"
                                                       TextWrapping="NoWrap" />
                                            <TextBlock x:Name="txtblTemplateDate3_Copy"
                                                       Grid.Row="1"
                                                       Grid.Column="4"
                                                       Margin="0,0,5,0"
                                                       HorizontalAlignment="{DynamicResource DatagridRightHorizontalAlignment}"
                                                       VerticalAlignment="Center"
                                                       Foreground="Black"
                                                       Text="12/02/2010"
                                                       TextWrapping="NoWrap"
                                                       d:LayoutOverrides="GridBox" />
                                        </Grid>
                                    </Grid>
                                </GroupBox>
                            </Grid>
                        </ListBoxItem>
                    </control:ListBoxCustom>
                    <TabControl x:Name="tabControlWorkSchedule"
                                Grid.Row="1"
                                Margin="12,10,10,0"
                                Background="{DynamicResource TabControlBackground}"
                                BorderBrush="{DynamicResource TabControlBorder}">
                        <TabControl.Template>
                            <ControlTemplate TargetType="TabControl">
                                <TabPanel IsItemsHost="True" />
                                <!--  no content presenter  -->
                            </ControlTemplate>
                        </TabControl.Template>
                        <TabItem x:Name="tabItemScheduleDetail"
                                 Header="Schedule Detail" />
                        <TabItem x:Name="tabItemEmployees"
                                 Header="Employees" />
                    </TabControl>
                    <!--  endregion The fake tab work schedule  -->
                </Grid>
                <Border x:Name="brdContentEmployeeSchedule"
                        Grid.Row="1"
                        Grid.Column="1"
                        Margin="10"
                        Background="#19FFFFFF"
                        BorderBrush="White"
                        BorderThickness="1" d:IsHidden="True">
                    <Border.Visibility>
                        <Binding Path="IsChangeMode"
                                 Mode="OneWay"
                                 UpdateSourceTrigger="PropertyChanged"
                                 Converter="{StaticResource boolToVisibilityConverter}" />
                    </Border.Visibility>
                    <Grid x:Name="grdSearchandChange"
                          Width="Auto"
                          Margin="10">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="25" />
                            <RowDefinition Height="25" />
                            <RowDefinition Height="15" />
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <TextBlock x:Name="txtblCurrentSchedule"
                                   Margin="10,0,0,0"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Center"
                                   Style="{DynamicResource TextBlockNormal}"
                                   Text="Current Schedule:"
                                   TextWrapping="Wrap" />
                        <ComboBox x:Name="cmbCurrentSchedule"
                                  Width="430"
                                  Margin="110,2,0,2"
                                  HorizontalAlignment="Left"
                                  DisplayMemberPath="WorkScheduleName"
                                  ItemsSource="{Binding CurrentWorkScheduleCollection}"
                                  SelectedItem="{Binding CurrentWorkSchedule, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectionChanged">
                                    <command:EventToCommand Command="{Binding SelectionCurrentCommand}"
                                                            CommandParameter="{Binding SelectedItem, ElementName=cmbCurrentSchedule}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </ComboBox>
                        <TextBlock x:Name="txtblChangeTo"
                                   Grid.Row="1"
                                   Margin="10,0,0,0"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Center"
                                   Style="{DynamicResource TextBlockNormal}"
                                   Text="Change To:"
                                   TextWrapping="Wrap" />
                        <ComboBox x:Name="cmbChangeTo"
                                  Grid.Row="1"
                                  Width="430"
                                  Margin="110,2,0,2"
                                  HorizontalAlignment="Left"
                                  DisplayMemberPath="WorkScheduleName"
                                  ItemsSource="{Binding ChangeToWorkScheduleCollection}"
                                  SelectedItem="{Binding ChangeToWorkSchedule, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="SelectionChanged">
                                    <command:EventToCommand Command="{Binding SelectionChangeToCommand}"
                                                            CommandParameter="{Binding SelectedItem, ElementName=cmbChangeTo}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </ComboBox>
                        <Rectangle x:Name="Line5"
                                   Grid.Row="2"
                                   Height="1"
                                   Margin="2,0"
                                   HorizontalAlignment="Stretch"
                                   VerticalAlignment="Center"
                                   Fill="{DynamicResource Spilter_Line_Background}" />
                        <Grid x:Name="grdContentEmployeesList"
                              Grid.Row="3"
                              Margin="0,0,0,10">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="25" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="40" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid x:Name="grdSearch"
                                  Grid.ColumnSpan="2"
                                  Margin="0,2,24,2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="40" />
                                </Grid.ColumnDefinitions>
                                <control:FilterText Text="{Binding TextSearch, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                <!--
                                    <TextBox x:Name="txtSearch"
                                    TextWrapping="Wrap"
                                    Text="All"
                                    d:LayoutOverrides="Height" />
                                -->
                                <TextBlock x:Name="txtblResult"
                                           Grid.Column="1"
                                           Margin="5,0,0,0"
                                           HorizontalAlignment="Left"
                                           VerticalAlignment="Center"
                                           FontWeight="Bold"
                                           Style="{DynamicResource TextBlockNormal}"
                                           d:LayoutOverrides="Height" Visibility="Collapsed" />
                            </Grid>
                            <cpcDataGridControl:DataGridControl x:Name="dtgrdLeftEmployeeList"
                                                                Grid.Row="1"
                                                                Margin="0,5.1,10,0"
                                                                AutoGenerateColumns="False"
                                                                CanUserAddRows="False"
                                                                IsReadOnly="True"
                                                                IsSynchronizedWithCurrentItem="True"
                                                                ItemsSource="{Binding LeftEmployeeCollection}"
                                                                SelectionUnit="FullRow"
                                                              
                                                                Style="{DynamicResource DatagridWithoutRowHeader}"
                                                                VirtualizingStackPanel.IsVirtualizing="True"
                                                                VirtualizingStackPanel.VirtualizationMode="Recycling" NumberOfItems="{Binding TotalItem, Mode=OneWay}">
                                <cpcDataGridControl:DataGridControl.Columns>
                                    <DataGridCheckBoxColumn Width="25"
                                                            Visibility="Collapsed">
                                        <DataGridCheckBoxColumn.HeaderTemplate>
                                            <DataTemplate>
                                                <CheckBox />
                                            </DataTemplate>
                                        </DataGridCheckBoxColumn.HeaderTemplate>
                                    </DataGridCheckBoxColumn>
                                    <DataGridTextColumn Header="Employee #"
                                                        Binding="{Binding GuestNo}"
                                                        Width="90" />
                                    <DataGridTextColumn Header="First Name"
                                                        Binding="{Binding FirstName}"
                                                        Width="*" />
                                    <DataGridTextColumn Header="Last Name"
                                                        Binding="{Binding LastName}"
                                                        Width="*" />
                                </cpcDataGridControl:DataGridControl.Columns>
                            </cpcDataGridControl:DataGridControl>
                            <StackPanel x:Name="stkpbtnEmployeeList"
                                        Grid.Row="2"
                                        Grid.Column="1"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Orientation="Vertical">
                                <Button x:Name="btnNext1"
                                        Command="{Binding MoveCommand}"
                                        Width="25"
                                        Height="25"
                                        Margin="0,0,0,0"
                                        CommandParameter="{Binding SelectedItems, ElementName=dtgrdLeftEmployeeList}"
                                        Style="{DynamicResource ButtonSystem}">
                                    <Rectangle x:Name="imgNext1"
                                               Width="15"
                                               Height="15"
                                               Fill="{DynamicResource PlayArrow}"
                                               StrokeThickness="0" />
                                </Button>
                                <Button x:Name="btnBack1"
                                        Command="{Binding BackCommand}"
                                        Width="25"
                                        Height="25"
                                        CommandParameter="{Binding SelectedItems, ElementName=dtgrdRightEmployeeList}"
                                        Style="{DynamicResource ButtonSystem}">
                                    <Rectangle x:Name="imgBack1"
                                               Width="15"
                                               Height="15"
                                               Fill="{DynamicResource RevisePlayArrow}"
                                               StrokeThickness="0" />
                                </Button>
                            </StackPanel>
                            <cpcDataGridControl:DataGridControl x:Name="dtgrdRightEmployeeList"
                                                                Grid.Row="1"
                                                                Grid.Column="2"
                                                                Margin="10,5.1,0,0"
                                                                AutoGenerateColumns="False"
                                                                CanUserAddRows="False"
                                                                IsReadOnly="True"
                                                                IsSynchronizedWithCurrentItem="True"
                                                                ItemsSource="{Binding RightEmployeeCollection}"
                                                                SelectionUnit="FullRow"
                                                                Style="{DynamicResource DatagridWithoutRowHeader}"
                                                                VirtualizingStackPanel.IsVirtualizing="True"
                                                                VirtualizingStackPanel.VirtualizationMode="Recycling" NumberOfItems="{Binding RightEmployeeCollection.Count}">
                                <cpcDataGridControl:DataGridControl.Columns>
                                    <DataGridCheckBoxColumn Width="25"
                                                            Visibility="Collapsed">
                                        <DataGridCheckBoxColumn.HeaderTemplate>
                                            <DataTemplate>
                                                <CheckBox />
                                            </DataTemplate>
                                        </DataGridCheckBoxColumn.HeaderTemplate>
                                    </DataGridCheckBoxColumn>
                                    <DataGridTextColumn Header="Employee #"
                                                        Binding="{Binding GuestNo}"
                                                        Width="90" />
                                    <DataGridTextColumn Header="First Name"
                                                        Binding="{Binding FirstName}"
                                                        Width="*" />
                                    <DataGridTextColumn Header="Last Name"
                                                        Binding="{Binding LastName}"
                                                        Width="*" />
                                </cpcDataGridControl:DataGridControl.Columns>
                            </cpcDataGridControl:DataGridControl>
                        </Grid>
                        <StackPanel x:Name="stkStartDate"
                                    Grid.Row="4"
                                    Height="20"
                                    VerticalAlignment="Bottom"
                                    Orientation="Horizontal">
                            <TextBlock x:Name="txtblStartDate"
                                       Style="{DynamicResource TextBlockNormal}"
                                       Text="* Select the start date for this schedule: " VerticalAlignment="Center" />
                            <DatePicker x:Name="dtpStartDate"
                                        Width="110"
                                        SelectedDate="{Binding StartDate, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" Margin="5,0,0,0" />
                        </StackPanel>
                    </Grid>
                </Border>
            </Grid>
        </Grid>
    </Grid>
    <UserControl.InputBindings>
        <KeyBinding Command="{Binding NewCommand}"
                    Gesture="Control+N" />
        <KeyBinding Command="{Binding SaveCommand}"
                    Gesture="Control+S" />
        <KeyBinding Command="{Binding ChangeScheduleCommand}"
                    Gesture="Control+W" />
        <KeyBinding Command="{Binding BarListClickCommand}"
                    Gesture="Control+Shift+L" />
    </UserControl.InputBindings>
</UserControl>
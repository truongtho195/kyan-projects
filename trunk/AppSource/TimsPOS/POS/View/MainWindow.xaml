<r:RibbonWindow xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:c="clr-namespace:CPC.Toolkit.Command" xmlns:close="clr-namespace:CPC.Toolkit.Behavior" xmlns:converter="clr-namespace:CPC.Converter" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:helper="clr-namespace:CPC.Helper" xmlns:local="clr-namespace:CPC.POS" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:r="clr-namespace:Microsoft.Windows.Controls.Ribbon;assembly=RibbonControlsLibrary" xmlns:Service="clr-namespace:CPC.Service" xmlns:System="clr-namespace:System;assembly=mscorlib" xmlns:textBoxControl="clr-namespace:CPCToolkitExt.TextBoxControl;assembly=CPCToolkitExt" xmlns:themeClassic="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic" xmlns:themeLuna="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Luna" xmlns:Microsoft_Windows_Controls_Ribbon_Primitives="clr-namespace:Microsoft.Windows.Controls.Ribbon.Primitives;assembly=RibbonControlsLibrary" xmlns:Custom="http://schemas.microsoft.com/winfx/2006/xaml/presentation/shell" x:Class="CPC.POS.MainWindow"
                x:Name="Window"
                Title="Truong Giang - Smart POS"
                Width="1024"
                Height="768"
                MinWidth="800"
                MinHeight="600"
                Background="{DynamicResource WindowBackgroundBrush}"
                Icon="/POS.ico"
                Service:DialogService.IsRegisteredView="True"
                WindowStartupLocation="CenterScreen"
                WindowState="Maximized"
                mc:Ignorable="d">
    <!--  Window Resources  -->
    <r:RibbonWindow.Resources>
        <converter:ListToCollapsedConverter x:Key="listToCollapsedConverter" />
        <!--  Window Background Brush  -->
        <LinearGradientBrush x:Key="WindowBackgroundBrush">
            <GradientStop Offset="0"
                          Color="#FFE7E9EB" />
            <GradientStop Offset="1"
                          Color="#FFC6CACF" />
        </LinearGradientBrush>
        <!--  ComboBoxItemStyle  -->
        <Style x:Key="ComboBoxItemStyle"
               TargetType="{x:Type ComboBoxItem}">
            <Setter Property="Background"
                    Value="{DynamicResource TitleBarBackground}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="Bd"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="true">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter Grid.ColumnSpan="2"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <Button x:Name="btnClose"
                                        Command="{Binding DataContext.CloseViewCommand, ElementName=Window}"
                                        Grid.Column="1"
                                        Width="20"
                                        Height="20"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Center"
                                        CommandParameter="{Binding}"
                                        Cursor="Hand"
                                        Style="{DynamicResource ButtonMiniClose}">
                                    <Grid x:Name="grdClose">
                                        <Path Width="14"
                                              Height="14"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Data="M5.75,0.25 L9.25,0.25 9.25,5.7499999 14.75,5.7499999 14.75,9.25 9.25,9.25 9.25,14.75 5.75,14.75 5.75,9.25 0.25,9.25 0.25,5.7499999 5.75,5.7499999 z"
                                              Fill="{DynamicResource TitleBar_ButtonClose_Arrow}"
                                              RenderTransformOrigin="0.5,0.5"
                                              Stretch="Fill"
                                              StrokeThickness="0.5">
                                            <Path.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform ScaleX="1"
                                                                    ScaleY="1" />
                                                    <SkewTransform AngleX="0"
                                                                   AngleY="0" />
                                                    <RotateTransform Angle="-45" />
                                                    <TranslateTransform X="0"
                                                                        Y="0" />
                                                </TransformGroup>
                                            </Path.RenderTransform>
                                        </Path>
                                    </Grid>
                                </Button>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted"
                                     Value="true">
                                <Setter TargetName="Bd"
                                        Property="Background"
                                        Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                <Setter Property="Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsEnabled"
                                     Value="false">
                                <Setter Property="Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="HorizontalContentAlignment"
                    Value="Left" />
            <Setter Property="FontWeight"
                    Value="Bold" />
            <Setter Property="Margin"
                    Value="3,0,3,3" />
            <Setter Property="Height"
                    Value="32" />
        </Style>
        <Style x:Key="ComboBoxTransparentButtonStyle"
               TargetType="{x:Type ToggleButton}">
            <Setter Property="MinWidth"
                    Value="0" />
            <Setter Property="MinHeight"
                    Value="0" />
            <Setter Property="Width"
                    Value="Auto" />
            <Setter Property="Height"
                    Value="Auto" />
            <Setter Property="Background"
                    Value="Transparent" />
            <Setter Property="Focusable"
                    Value="false" />
            <Setter Property="ClickMode"
                    Value="Press" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid Background="{TemplateBinding Background}"
                              SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto"
                                                  SharedSizeGroup="ComboBoxButton" />
                            </Grid.ColumnDefinitions>
                            <themeLuna:ScrollChrome x:Name="Chrome"
                                                    Grid.Column="1"
                                                    Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                                    HasOuterBorder="false"
                                                    Padding="1,0,0,0"
                                                    RenderMouseOver="{TemplateBinding IsMouseOver}"
                                                    RenderPressed="{TemplateBinding IsChecked}"
                                                    ThemeColor="NormalColor"
                                                    themeLuna:ScrollChrome.ScrollGlyph="DownArrow" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--  ComboBoxStyle  -->
        <Style x:Key="ComboBoxStyle"
               TargetType="{x:Type ComboBox}">
            <Setter Property="Foreground"
                    Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
            <Setter Property="Background"
                    Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
            <Setter Property="Padding"
                    Value="1" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                    Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                    Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll"
                    Value="true" />
            <Setter Property="ScrollViewer.PanningMode"
                    Value="Both" />
            <Setter Property="Stylus.IsFlicksEnabled"
                    Value="False" />
            <Setter Property="VerticalContentAlignment"
                    Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid SnapsToDevicePixels="true">
                            <Border x:Name="Bd"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}">
                                <ToggleButton IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                              Style="{StaticResource ComboBoxTransparentButtonStyle}" />
                            </Border>
                            <Popup x:Name="PART_Popup"
                                   Width="215"
                                   AllowsTransparency="true"
                                   Focusable="false"
                                   HorizontalOffset="-190"
                                   IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                   Placement="Top"
                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                                   VerticalOffset="-4">
                                <themeClassic:SystemDropShadowChrome x:Name="Shdw"
                                                                     MinWidth="{TemplateBinding ActualWidth}"
                                                                     MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                                     Color="Transparent">
                                    <Border x:Name="DropDownBorder"
                                            Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                                            BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}">
                                        <ScrollViewer x:Name="DropDownScrollViewer">
                                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                                <Canvas>
                                                    <Rectangle x:Name="OpaqueRect"
                                                               Width="{Binding ActualWidth, ElementName=DropDownBorder}"
                                                               Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                                                               Fill="{Binding Background, ElementName=DropDownBorder}" />
                                                </Canvas>
                                                <ItemsPresenter x:Name="ItemsPresenter"
                                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                            </Grid>
                                        </ScrollViewer>
                                    </Border>
                                </themeClassic:SystemDropShadowChrome>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelectionBoxHighlighted"
                                               Value="true" />
                                    <Condition Property="IsDropDownOpen"
                                               Value="false" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                            </MultiTrigger>
                            <Trigger Property="IsSelectionBoxHighlighted"
                                     Value="true" />
                            <Trigger SourceName="PART_Popup"
                                     Property="HasDropShadow"
                                     Value="true">
                                <Setter TargetName="Shdw"
                                        Property="Margin"
                                        Value="0,0,5,5" />
                                <Setter TargetName="Shdw"
                                        Property="Color"
                                        Value="#71000000" />
                            </Trigger>
                            <Trigger Property="HasItems"
                                     Value="false">
                                <Setter TargetName="DropDownBorder"
                                        Property="MinHeight"
                                        Value="95" />
                            </Trigger>
                            <Trigger Property="IsEnabled"
                                     Value="false">
                                <Setter Property="Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                <Setter TargetName="Bd"
                                        Property="Background"
                                        Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsGrouping"
                                     Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll"
                                        Value="false" />
                            </Trigger>
                            <Trigger SourceName="DropDownScrollViewer"
                                     Property="ScrollViewer.CanContentScroll"
                                     Value="false">
                                <Setter TargetName="OpaqueRect"
                                        Property="Canvas.Top"
                                        Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                                <Setter TargetName="OpaqueRect"
                                        Property="Canvas.Left"
                                        Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Height"
                    Value="16" />
            <Setter Property="Width"
                    Value="Auto" />
            <Setter Property="BorderThickness"
                    Value="0" />
            <Setter Property="Margin"
                    Value="0,0,5,0" />
            <Setter Property="FontSize"
                    Value="12" />
            <Style.Triggers>
                <Trigger Property="IsEditable"
                         Value="true">
                    <Setter Property="IsTabStop"
                            Value="false" />
                    <Setter Property="Padding"
                            Value="0,1" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--  ComboBox Opened Over Control List Style  -->
        <Style TargetType="{x:Type r:RibbonGroup}">
            <Setter Property="Margin"
                    Value="1" />
            <Setter Property="Padding"
                    Value="3,0" />
            <Setter Property="FocusVisualStyle"
                    Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type r:RibbonGroup}">
                        <Border x:Name="GroupBorder"
                                Margin="1,2,0,0"
                                Background="{TemplateBinding Background}">
                            <Grid x:Name="MainGrid">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto"
                                                   MinHeight="16" />
                                </Grid.RowDefinitions>
                                <Border x:Name="PART_HotBackground"
                                        Grid.RowSpan="3"
                                        Background="{TemplateBinding MouseOverBackground}"
                                        BorderBrush="{TemplateBinding MouseOverBorderBrush}"
                                        BorderThickness="1"
                                        CornerRadius="2"
                                        Opacity="0"
                                        SnapsToDevicePixels="True" />
                                <Border x:Name="SeparatorBorder"
                                        Grid.RowSpan="3"
                                        Grid.Column="0"
                                        VerticalAlignment="Stretch"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="3"
                                        SnapsToDevicePixels="True" />
                                <Border Margin="2,1,2,0"
                                        Padding="3,0">
                                    <Grid>
                                        <ItemsPresenter x:Name="ItemsPresenter" />
                                        <ContentControl x:Name="TemplateContentControl"
                                                        Focusable="False"
                                                        Visibility="Collapsed" />
                                    </Grid>
                                </Border>
                                <Border x:Name="LabelSeparatorBorder"
                                        Grid.Row="1"
                                        Height="1"
                                        Margin="5,1,5,-1" />
                                <Border Grid.Row="2"
                                        Background="#FFB2B2B2"
                                        CornerRadius="0,0,3,3" Margin="1,0,1,1">
                                	<ContentPresenter x:Name="PART_Header"
                                		MaxHeight="16"
                                		Margin="2,0"
                                		HorizontalAlignment="Center"
                                		VerticalAlignment="Center"
                                		Content="{TemplateBinding Header}"
                                		ContentSource="Header"
                                		ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                		ContentTemplate="{TemplateBinding HeaderTemplate}"
                                		TextElement.Foreground="#FF000000" />
                                </Border>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled"
                                     Value="False">
                                <Setter TargetName="MainGrid"
                                        Property="TextElement.Foreground"
                                        Value="#FF9E9E9E" />
                            </Trigger>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2"
                                                         Storyboard.TargetName="PART_HotBackground"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.4"
                                                         Storyboard.TargetName="PART_HotBackground"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                               Value="False" />
                                    <Condition Binding="{Binding HighContrast}"
                                               Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="MainGrid"
                                        Property="TextElement.Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background"
                    Value="Transparent" />
            <Setter Property="BorderBrush"
                    Value="{Binding Ribbon.BorderBrush, RelativeSource={RelativeSource Self}}" />
            <Setter Property="MouseOverBackground">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0.5"
                                         EndPoint="1,0.5">
                        <GradientStop Offset="0"
                                      Color="#01FFFFFF" />
                        <GradientStop Offset="0.5"
                                      Color="#80FFFFFF" />
                        <GradientStop Offset="1"
                                      Color="#01FFFFFF" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="MouseOverBorderBrush"
                    Value="Transparent" />
            <Setter Property="ToolTipService.InitialShowDelay"
                    Value="900" />
            <Setter Property="ToolTipService.ShowDuration"
                    Value="20000" />
            <Setter Property="ToolTipService.BetweenShowDelay"
                    Value="0" />
            <Style.Triggers>
                <Trigger Property="IsCollapsed"
                         Value="True">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type r:RibbonGroup}">
                                <Grid x:Name="MainGrid">
                                    <r:RibbonToggleButton x:Name="PART_ToggleButton"
                                                          Margin="0,3,0,0"
                                                          Background="{TemplateBinding Background}"
                                                          Content="{TemplateBinding Header}"
                                                          ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                                          ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                          LargeImageSource="{TemplateBinding LargeImageSource}"
                                                          SmallImageSource="{TemplateBinding SmallImageSource}">
                                        <r:RibbonToggleButton.Style>
                                            <Style TargetType="{x:Type r:RibbonToggleButton}">
                                                <Setter Property="Focusable"
                                                        Value="True" />
                                                <Setter Property="BorderBrush"
                                                        Value="{Binding BorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type r:RibbonGroup}}}" />
                                                <Setter Property="MouseOverBorderBrush"
                                                        Value="Transparent" />
                                                <Setter Property="MouseOverBackground"
                                                        Value="#40FFFFFF" />
                                                <Setter Property="FocusedBackground"
                                                        Value="{Binding Ribbon.FocusedBackground, RelativeSource={RelativeSource Self}}" />
                                                <Setter Property="FocusedBorderBrush"
                                                        Value="Transparent" />
                                                <Setter Property="CheckedBackground"
                                                        Value="Transparent" />
                                                <Setter Property="CheckedBorderBrush"
                                                        Value="Transparent" />
                                                <Setter Property="ClickMode"
                                                        Value="Press" />
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type r:RibbonToggleButton}">
                                                            <ControlTemplate.Resources>
                                                                <DataTemplate x:Key="{DataTemplateKey DataType={x:Type System:String}}"
                                                                              DataType="{x:Type System:String}">
                                                                    <r:RibbonTwoLineText Margin="2,4,2,0"
                                                                                         VerticalAlignment="Top"
                                                                                         LineHeight="13"
                                                                                         LineStackingStrategy="BlockLineHeight"
                                                                                         PathFill="{TemplateBinding TextElement.Foreground}"
                                                                                         r:RibbonTwoLineText.HasTwoLines="{TemplateBinding r:RibbonTwoLineText.HasTwoLines}"
                                                                                         r:RibbonTwoLineText.PathData="{TemplateBinding r:RibbonTwoLineText.PathData}"
                                                                                         Text="{Binding}"
                                                                                         TextAlignment="Center" />
                                                                </DataTemplate>
                                                            </ControlTemplate.Resources>
                                                            <Grid x:Name="MainGrid"
                                                                  SnapsToDevicePixels="True">
                                                                <Border x:Name="ButtonInnerBorder"
                                                                        Margin="1"
                                                                        BorderBrush="#FFEAF1FB"
                                                                        BorderThickness="1"
                                                                        CornerRadius="2" />
                                                                <Border x:Name="ButtonOuterBorder"
                                                                        Background="{TemplateBinding Background}"
                                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                                        BorderThickness="1"
                                                                        CornerRadius="2" />
                                                                <Border x:Name="PART_HotBackground"
                                                                        Background="{TemplateBinding MouseOverBackground}"
                                                                        BorderBrush="{TemplateBinding MouseOverBorderBrush}"
                                                                        BorderThickness="1"
                                                                        CornerRadius="2"
                                                                        Opacity="0" />
                                                                <Grid Margin="2">
                                                                    <Grid.RowDefinitions>
                                                                        <RowDefinition Height="Auto" />
                                                                        <RowDefinition />
                                                                    </Grid.RowDefinitions>
                                                                    <Border x:Name="ImageOuterBorder"
                                                                            Grid.Row="0">
                                                                        <Border x:Name="ImageMiddleBorder"
                                                                                Width="32"
                                                                                Height="32"
                                                                                Margin="3"
                                                                                HorizontalAlignment="Center"
                                                                                VerticalAlignment="Top"
                                                                                BorderBrush="#FFAEBECF"
                                                                                BorderThickness="0"
                                                                                CornerRadius="3">
                                                                            <Grid>
                                                                                <Border x:Name="ImageInnerBorder"
                                                                                        BorderBrush="#FFFCFCFC"
                                                                                        BorderThickness="0"
                                                                                        CornerRadius="3" />
                                                                                <Image x:Name="GroupImage"
                                                                                       Width="32"
                                                                                       Height="32"
                                                                                       HorizontalAlignment="Center"
                                                                                       VerticalAlignment="Center"
                                                                                       RenderOptions.BitmapScalingMode="NearestNeighbor"
                                                                                       Source="{TemplateBinding LargeImageSource}" />
                                                                            </Grid>
                                                                        </Border>
                                                                    </Border>
                                                                    <Border x:Name="LabelBorder"
                                                                            Grid.Row="1"
                                                                            Grid.RowSpan="2">
                                                                        <Border.Background>
                                                                            <RadialGradientBrush Center="0.5,0.5"
                                                                                                 GradientOrigin="0.5,1"
                                                                                                 RadiusX="1"
                                                                                                 RadiusY="0.5">
                                                                                <GradientStop Offset="0"
                                                                                              Color="#30FFFFFF" />
                                                                                <GradientStop Offset="1"
                                                                                              Color="#08808080" />
                                                                            </RadialGradientBrush>
                                                                        </Border.Background>
                                                                        <ContentPresenter Content="{TemplateBinding Content}"
                                                                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                          r:RibbonTwoLineText.HasTwoLines="True"
                                                                                          r:RibbonTwoLineText.PathData="M0,0L2.5,3 5,0z" />
                                                                    </Border>
                                                                </Grid>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="LargeImageSource"
                                                                         Value="{x:Null}">
                                                                    <Setter TargetName="GroupImage"
                                                                            Property="Source"
                                                                            Value="{Binding SmallImageSource, RelativeSource={RelativeSource TemplatedParent}}" />
                                                                    <Setter TargetName="GroupImage"
                                                                            Property="Width"
                                                                            Value="16" />
                                                                    <Setter TargetName="GroupImage"
                                                                            Property="Height"
                                                                            Value="16" />
                                                                    <Setter TargetName="ImageMiddleBorder"
                                                                            Property="BorderThickness"
                                                                            Value="1" />
                                                                    <Setter TargetName="ImageMiddleBorder"
                                                                            Property="Background">
                                                                        <Setter.Value>
                                                                            <LinearGradientBrush StartPoint="0,0"
                                                                                                 EndPoint="0,1">
                                                                                <GradientStop Offset="0"
                                                                                              Color="#88FFFFFF" />
                                                                                <GradientStop Offset="1"
                                                                                              Color="#88DBE7F4" />
                                                                            </LinearGradientBrush>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter TargetName="ImageInnerBorder"
                                                                            Property="BorderThickness"
                                                                            Value="1" />
                                                                    <Setter TargetName="ImageInnerBorder"
                                                                            Property="Background"
                                                                            Value="#50FFFFFF" />
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled"
                                                                         Value="False">
                                                                    <Setter TargetName="GroupImage"
                                                                            Property="Opacity"
                                                                            Value="0.5" />
                                                                    <Setter TargetName="MainGrid"
                                                                            Property="TextElement.Foreground"
                                                                            Value="#FF9E9E9E" />
                                                                </Trigger>
                                                                <DataTrigger Binding="{Binding HighContrast}"
                                                                             Value="True">
                                                                    <Setter TargetName="MainGrid"
                                                                            Property="TextElement.Foreground"
                                                                            Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
                                                                    <Setter TargetName="ImageMiddleBorder"
                                                                            Property="Background"
                                                                            Value="Transparent" />
                                                                    <Setter TargetName="ImageMiddleBorder"
                                                                            Property="BorderThickness"
                                                                            Value="0" />
                                                                    <Setter TargetName="ImageInnerBorder"
                                                                            Property="Background"
                                                                            Value="Transparent" />
                                                                    <Setter TargetName="ImageInnerBorder"
                                                                            Property="BorderThickness"
                                                                            Value="0" />
                                                                    <Setter TargetName="PART_HotBackground"
                                                                            Property="Background"
                                                                            Value="Transparent" />
                                                                    <Setter TargetName="LabelBorder"
                                                                            Property="Background"
                                                                            Value="Transparent" />
                                                                    <Setter TargetName="ButtonOuterBorder"
                                                                            Property="Background"
                                                                            Value="Transparent" />
                                                                    <Setter TargetName="ButtonOuterBorder"
                                                                            Property="BorderBrush"
                                                                            Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
                                                                    <Setter TargetName="ButtonOuterBorder"
                                                                            Property="CornerRadius"
                                                                            Value="0" />
                                                                    <Setter TargetName="ButtonInnerBorder"
                                                                            Property="CornerRadius"
                                                                            Value="0" />
                                                                    <Setter TargetName="ButtonInnerBorder"
                                                                            Property="BorderThickness"
                                                                            Value="0,1,0,0" />
                                                                </DataTrigger>
                                                                <MultiDataTrigger>
                                                                    <MultiDataTrigger.Conditions>
                                                                        <Condition Binding="{Binding HighContrast}"
                                                                                   Value="True" />
                                                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                                                                                   Value="True" />
                                                                    </MultiDataTrigger.Conditions>
                                                                    <Setter TargetName="ButtonInnerBorder"
                                                                            Property="Background"
                                                                            Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                                                    <Setter TargetName="ButtonInnerBorder"
                                                                            Property="BorderThickness"
                                                                            Value="1" />
                                                                    <Setter TargetName="MainGrid"
                                                                            Property="TextElement.Foreground"
                                                                            Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                                                </MultiDataTrigger>
                                                                <MultiDataTrigger>
                                                                    <MultiDataTrigger.Conditions>
                                                                        <Condition Binding="{Binding HighContrast}"
                                                                                   Value="True" />
                                                                        <Condition Binding="{Binding IsKeyboardFocused, RelativeSource={RelativeSource Self}}"
                                                                                   Value="True" />
                                                                    </MultiDataTrigger.Conditions>
                                                                    <Setter TargetName="ButtonInnerBorder"
                                                                            Property="Background"
                                                                            Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                                                    <Setter TargetName="ButtonInnerBorder"
                                                                            Property="BorderThickness"
                                                                            Value="1" />
                                                                    <Setter TargetName="MainGrid"
                                                                            Property="TextElement.Foreground"
                                                                            Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                                                </MultiDataTrigger>
                                                                <MultiDataTrigger>
                                                                    <MultiDataTrigger.Conditions>
                                                                        <Condition Binding="{Binding HighContrast}"
                                                                                   Value="True" />
                                                                        <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}"
                                                                                   Value="True" />
                                                                    </MultiDataTrigger.Conditions>
                                                                    <Setter TargetName="ButtonOuterBorder"
                                                                            Property="Background"
                                                                            Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                                                    <Setter TargetName="MainGrid"
                                                                            Property="TextElement.Foreground"
                                                                            Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                                                </MultiDataTrigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsMouseOver"
                                                                                   Value="True" />
                                                                        <Condition Property="IsChecked"
                                                                                   Value="False" />
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter TargetName="PART_HotBackground"
                                                                            Property="Opacity"
                                                                            Value="1" />
                                                                </MultiTrigger>
                                                                <MultiDataTrigger>
                                                                    <MultiDataTrigger.Conditions>
                                                                        <Condition Binding="{Binding HighContrast}"
                                                                                   Value="False" />
                                                                        <Condition Binding="{Binding IsKeyboardFocused, RelativeSource={RelativeSource Self}}"
                                                                                   Value="True" />
                                                                        <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}"
                                                                                   Value="False" />
                                                                    </MultiDataTrigger.Conditions>
                                                                    <Setter TargetName="PART_HotBackground"
                                                                            Property="Opacity"
                                                                            Value="1" />
                                                                    <Setter TargetName="PART_HotBackground"
                                                                            Property="Background"
                                                                            Value="{Binding FocusedBackground, RelativeSource={RelativeSource TemplatedParent}}" />
                                                                    <Setter TargetName="PART_HotBackground"
                                                                            Property="BorderBrush"
                                                                            Value="{Binding FocusedBorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                                                                </MultiDataTrigger>
                                                                <MultiDataTrigger>
                                                                    <MultiDataTrigger.Conditions>
                                                                        <Condition Binding="{Binding HighContrast}"
                                                                                   Value="False" />
                                                                        <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}"
                                                                                   Value="True" />
                                                                    </MultiDataTrigger.Conditions>
                                                                    <Setter TargetName="PART_HotBackground"
                                                                            Property="Opacity"
                                                                            Value="1" />
                                                                    <Setter TargetName="PART_HotBackground"
                                                                            Property="Background"
                                                                            Value="{Binding CheckedBackground, RelativeSource={RelativeSource TemplatedParent}}" />
                                                                    <Setter TargetName="PART_HotBackground"
                                                                            Property="BorderBrush"
                                                                            Value="{Binding CheckedBorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                                                                    <Setter TargetName="ImageOuterBorder"
                                                                            Property="Background"
                                                                            Value="#20BBBBBB" />
                                                                    <Setter TargetName="LabelBorder"
                                                                            Property="Background">
                                                                        <Setter.Value>
                                                                            <RadialGradientBrush Center="0.5,1"
                                                                                                 GradientOrigin="0.5,0.95"
                                                                                                 RadiusX="0.9"
                                                                                                 RadiusY="0.5">
                                                                                <GradientStop Offset="0"
                                                                                              Color="#AAFFFFFF" />
                                                                                <GradientStop Offset="1"
                                                                                              Color="#40BBBBBB" />
                                                                            </RadialGradientBrush>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </MultiDataTrigger>
                                                                <MultiDataTrigger>
                                                                    <MultiDataTrigger.Conditions>
                                                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                                                                   Value="False" />
                                                                        <Condition Binding="{Binding HighContrast}"
                                                                                   Value="True" />
                                                                    </MultiDataTrigger.Conditions>
                                                                    <Setter TargetName="MainGrid"
                                                                            Property="TextElement.Foreground"
                                                                            Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                                                </MultiDataTrigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </r:RibbonToggleButton.Style>
                                    </r:RibbonToggleButton>
                                    <Popup x:Name="PART_Popup"
                                           AllowsTransparency="True"
                                           Focusable="False"
                                           IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                           Placement="Bottom"
                                           PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                        <themeClassic:SystemDropShadowChrome x:Name="Shdw"
                                                                             CornerRadius="2"
                                                                             Focusable="True"
                                                                             FocusVisualStyle="{x:Null}"
                                                                             KeyTipService.IsKeyTipScope="True"
                                                                             RenderOptions.ClearTypeHint="Enabled"
                                                                             SnapsToDevicePixels="True"
                                                                             Color="Transparent">
                                            <Grid x:Name="PopupGrid"
                                                  Height="{TemplateBinding ActualHeight}"
                                                  Margin="0,1.5,0,0">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="*" />
                                                    <RowDefinition Height="Auto"
                                                                   MinHeight="16" />
                                                </Grid.RowDefinitions>
                                                <Border x:Name="PopupBorder"
                                                        Grid.RowSpan="2"
                                                        Background="{TemplateBinding Background}"
                                                        BorderBrush="{Binding Ribbon.BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                                                        BorderThickness="1" />
                                                <Border x:Name="PART_HotBackground"
                                                        Grid.RowSpan="2"
                                                        Background="{TemplateBinding MouseOverBackground}"
                                                        BorderBrush="{TemplateBinding MouseOverBorderBrush}"
                                                        BorderThickness="1"
                                                        CornerRadius="2"
                                                        Opacity="0"
                                                        SnapsToDevicePixels="True" />
                                                <Border x:Name="PART_RibbonControlsHostBorder"
                                                        Margin="2,3.5,2,0"
                                                        Padding="3,0">
                                                    <Grid>
                                                        <ItemsPresenter x:Name="ItemsPresenter"
                                                                        Grid.IsSharedSizeScope="True"
                                                                        KeyboardNavigation.DirectionalNavigation="Cycle"
                                                                        KeyboardNavigation.TabNavigation="Cycle"
                                                                        SnapsToDevicePixels="True" />
                                                        <ContentControl x:Name="TemplateContentControl"
                                                                        Focusable="False"
                                                                        Visibility="Collapsed" />
                                                    </Grid>
                                                </Border>
                                                <Grid Grid.Row="1"
                                                      Margin="2,0,2,1">
                                                    <ContentPresenter x:Name="PART_Header"
                                                                      MaxHeight="15"
                                                                      Margin="2,0"
                                                                      HorizontalAlignment="Center"
                                                                      VerticalAlignment="Center"
                                                                      Content="{TemplateBinding Header}"
                                                                      ContentSource="Header"
                                                                      ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                                                      ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                                      TextElement.Foreground="#FF9E9E9E" />
                                                </Grid>
                                            </Grid>
                                        </themeClassic:SystemDropShadowChrome>
                                    </Popup>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding HighContrast}"
                                                       Value="False" />
                                            <Condition Binding="{Binding Background, RelativeSource={RelativeSource Self}}"
                                                       Value="Transparent" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="PopupBorder"
                                                Property="Background"
                                                Value="{Binding Ribbon.Background, RelativeSource={RelativeSource TemplatedParent}}" />
                                    </MultiDataTrigger>
                                    <Trigger Property="IsEnabled"
                                             Value="False">
                                        <Setter TargetName="MainGrid"
                                                Property="TextElement.Foreground"
                                                Value="#FF9E9E9E" />
                                    </Trigger>
                                    <DataTrigger Binding="{Binding HighContrast}"
                                                 Value="True">
                                        <Setter TargetName="MainGrid"
                                                Property="TextElement.Foreground"
                                                Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
                                        <Setter TargetName="PART_HotBackground"
                                                Property="Background"
                                                Value="Transparent" />
                                        <Setter TargetName="PART_Popup"
                                                Property="PopupAnimation"
                                                Value="None" />
                                        <Setter TargetName="PopupBorder"
                                                Property="BorderBrush"
                                                Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
                                        <Setter TargetName="PopupBorder"
                                                Property="Background"
                                                Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                        <Setter TargetName="Shdw"
                                                Property="CornerRadius"
                                                Value="0" />
                                    </DataTrigger>
                                    <Trigger SourceName="PART_Popup"
                                             Property="HasDropShadow"
                                             Value="True">
                                        <Setter TargetName="Shdw"
                                                Property="Margin"
                                                Value="0,0,5,5" />
                                        <Setter TargetName="Shdw"
                                                Property="Color"
                                                Value="#71000000" />
                                    </Trigger>
                                    <Trigger SourceName="PART_Popup"
                                             Property="IsOpen"
                                             Value="False">
                                        <Setter TargetName="PART_Popup"
                                                Property="PopupAnimation"
                                                Value="None" />
                                    </Trigger>
                                    <EventTrigger RoutedEvent="Mouse.MouseEnter"
                                                  SourceName="Shdw">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.2"
                                                                 Storyboard.TargetName="PART_HotBackground"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="1" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                    <EventTrigger RoutedEvent="Mouse.MouseLeave"
                                                  SourceName="Shdw">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.4"
                                                                 Storyboard.TargetName="PART_HotBackground"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                    <Trigger Property="IsInQuickAccessToolBar"
                                             Value="True">
                                        <Setter TargetName="PopupGrid"
                                                Property="Height"
                                                Value="91" />
                                        <Setter TargetName="PART_ToggleButton"
                                                Property="Style">
                                            <Setter.Value>
                                                <Style TargetType="{x:Type r:RibbonToggleButton}">
                                                    <Setter Property="RenderOptions.BitmapScalingMode"
                                                            Value="NearestNeighbor" />
                                                    <Setter Property="Focusable"
                                                            Value="True" />
                                                    <Setter Property="BorderBrush"
                                                            Value="#80808080" />
                                                    <Setter Property="Background"
                                                            Value="#AAFFFFFF" />
                                                    <Setter Property="MouseOverBorderBrush"
                                                            Value="Transparent" />
                                                    <Setter Property="MouseOverBackground">
                                                        <Setter.Value>
                                                            <LinearGradientBrush StartPoint="0,0"
                                                                                 EndPoint="1,1">
                                                                <GradientStop Offset="0"
                                                                              Color="#80FFFFFF" />
                                                                <GradientStop Offset="0.5"
                                                                              Color="#60FFFFFF" />
                                                                <GradientStop Offset="1"
                                                                              Color="#40808080" />
                                                            </LinearGradientBrush>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="FocusedBackground"
                                                            Value="{Binding Ribbon.FocusedBackground, RelativeSource={RelativeSource Self}}" />
                                                    <Setter Property="FocusedBorderBrush"
                                                            Value="Transparent" />
                                                    <Setter Property="CheckedBackground">
                                                        <Setter.Value>
                                                            <LinearGradientBrush StartPoint="0,0"
                                                                                 EndPoint="1,1">
                                                                <GradientStop Offset="0"
                                                                              Color="#80808080" />
                                                                <GradientStop Offset="1"
                                                                              Color="#80FFFFFF" />
                                                            </LinearGradientBrush>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="CheckedBorderBrush"
                                                            Value="Transparent" />
                                                    <Setter Property="Margin"
                                                            Value="0,-1,0,0" />
                                                    <Setter Property="ClickMode"
                                                            Value="Press" />
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type r:RibbonToggleButton}">
                                                                <Border x:Name="OuterBorder"
                                                                        Background="{TemplateBinding Background}"
                                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                                        BorderThickness="1"
                                                                        CornerRadius="3">
                                                                    <Grid>
                                                                        <Border x:Name="InnerBorder"
                                                                                Background="{TemplateBinding MouseOverBackground}"
                                                                                BorderBrush="{TemplateBinding MouseOverBorderBrush}"
                                                                                CornerRadius="3"
                                                                                Opacity="0" />
                                                                        <Image x:Name="GroupImage"
                                                                               Width="16"
                                                                               Height="16"
                                                                               Margin="3,2"
                                                                               HorizontalAlignment="Center"
                                                                               VerticalAlignment="Center"
                                                                               RenderOptions.BitmapScalingMode="{TemplateBinding RenderOptions.BitmapScalingMode}"
                                                                               Source="{TemplateBinding SmallImageSource}" />
                                                                    </Grid>
                                                                </Border>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsEnabled"
                                                                             Value="False">
                                                                        <Setter TargetName="GroupImage"
                                                                                Property="Opacity"
                                                                                Value="0.5" />
                                                                    </Trigger>
                                                                    <MultiDataTrigger>
                                                                        <MultiDataTrigger.Conditions>
                                                                            <Condition Binding="{Binding HighContrast}"
                                                                                       Value="False" />
                                                                            <Condition Binding="{Binding Background, RelativeSource={RelativeSource Self}}"
                                                                                       Value="Transparent" />
                                                                        </MultiDataTrigger.Conditions>
                                                                        <Setter TargetName="OuterBorder"
                                                                                Property="Background"
                                                                                Value="{Binding Ribbon.Background, RelativeSource={RelativeSource TemplatedParent}}" />
                                                                    </MultiDataTrigger>
                                                                    <MultiDataTrigger>
                                                                        <MultiDataTrigger.Conditions>
                                                                            <Condition Binding="{Binding HighContrast}"
                                                                                       Value="False" />
                                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                                                                                       Value="True" />
                                                                            <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}"
                                                                                       Value="False" />
                                                                        </MultiDataTrigger.Conditions>
                                                                        <Setter TargetName="InnerBorder"
                                                                                Property="Opacity"
                                                                                Value="1" />
                                                                        <Setter TargetName="OuterBorder"
                                                                                Property="Background"
                                                                                Value="Transparent" />
                                                                    </MultiDataTrigger>
                                                                    <MultiDataTrigger>
                                                                        <MultiDataTrigger.Conditions>
                                                                            <Condition Binding="{Binding HighContrast}"
                                                                                       Value="False" />
                                                                            <Condition Binding="{Binding IsKeyboardFocused, RelativeSource={RelativeSource Self}}"
                                                                                       Value="True" />
                                                                            <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}"
                                                                                       Value="False" />
                                                                        </MultiDataTrigger.Conditions>
                                                                        <Setter TargetName="InnerBorder"
                                                                                Property="Opacity"
                                                                                Value="1" />
                                                                        <Setter TargetName="InnerBorder"
                                                                                Property="Background"
                                                                                Value="{Binding FocusedBackground, RelativeSource={RelativeSource TemplatedParent}}" />
                                                                        <Setter TargetName="InnerBorder"
                                                                                Property="BorderBrush"
                                                                                Value="{Binding FocusedBorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                                                                        <Setter TargetName="OuterBorder"
                                                                                Property="Background"
                                                                                Value="Transparent" />
                                                                    </MultiDataTrigger>
                                                                    <MultiDataTrigger>
                                                                        <MultiDataTrigger.Conditions>
                                                                            <Condition Binding="{Binding HighContrast}"
                                                                                       Value="False" />
                                                                            <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}"
                                                                                       Value="True" />
                                                                        </MultiDataTrigger.Conditions>
                                                                        <Setter TargetName="InnerBorder"
                                                                                Property="Background"
                                                                                Value="{Binding CheckedBackground, RelativeSource={RelativeSource TemplatedParent}}" />
                                                                        <Setter TargetName="InnerBorder"
                                                                                Property="BorderBrush"
                                                                                Value="{Binding CheckedBorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                                                                        <Setter TargetName="InnerBorder"
                                                                                Property="Opacity"
                                                                                Value="1" />
                                                                        <Setter TargetName="OuterBorder"
                                                                                Property="Background"
                                                                                Value="Transparent" />
                                                                        <Setter TargetName="OuterBorder"
                                                                                Property="BorderBrush"
                                                                                Value="#AA808080" />
                                                                    </MultiDataTrigger>
                                                                    <DataTrigger Binding="{Binding HighContrast}"
                                                                                 Value="True">
                                                                        <Setter TargetName="OuterBorder"
                                                                                Property="CornerRadius"
                                                                                Value="0" />
                                                                        <Setter TargetName="OuterBorder"
                                                                                Property="BorderBrush"
                                                                                Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                                                        <Setter TargetName="OuterBorder"
                                                                                Property="Background"
                                                                                Value="Transparent" />
                                                                    </DataTrigger>
                                                                    <MultiDataTrigger>
                                                                        <MultiDataTrigger.Conditions>
                                                                            <Condition Binding="{Binding HighContrast}"
                                                                                       Value="True" />
                                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                                                                                       Value="True" />
                                                                        </MultiDataTrigger.Conditions>
                                                                        <Setter TargetName="OuterBorder"
                                                                                Property="Background"
                                                                                Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                                                    </MultiDataTrigger>
                                                                    <MultiDataTrigger>
                                                                        <MultiDataTrigger.Conditions>
                                                                            <Condition Binding="{Binding HighContrast}"
                                                                                       Value="True" />
                                                                            <Condition Binding="{Binding IsKeyboardFocused, RelativeSource={RelativeSource Self}}"
                                                                                       Value="True" />
                                                                        </MultiDataTrigger.Conditions>
                                                                        <Setter TargetName="OuterBorder"
                                                                                Property="Background"
                                                                                Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                                                    </MultiDataTrigger>
                                                                    <MultiDataTrigger>
                                                                        <MultiDataTrigger.Conditions>
                                                                            <Condition Binding="{Binding HighContrast}"
                                                                                       Value="True" />
                                                                            <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}"
                                                                                       Value="True" />
                                                                        </MultiDataTrigger.Conditions>
                                                                        <Setter TargetName="OuterBorder"
                                                                                Property="Background"
                                                                                Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                                                        <Setter TargetName="OuterBorder"
                                                                                Property="BorderBrush"
                                                                                Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
                                                                    </MultiDataTrigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter TargetName="PART_ToggleButton"
                                                Property="Margin"
                                                Value="0" />
                                    </Trigger>
                                    <Trigger Property="IsDropDownOpen"
                                             Value="True">
                                        <Setter TargetName="MainGrid"
                                                Property="ToolTipService.IsEnabled"
                                                Value="False" />
                                    </Trigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                                       Value="False" />
                                            <Condition Binding="{Binding HighContrast}"
                                                       Value="True" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="MainGrid"
                                                Property="TextElement.Foreground"
                                                Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                    </MultiDataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
    	
    	
    </r:RibbonWindow.Resources>
    <Grid x:Name="grdLayout" Background="{DynamicResource UserControl_Background_Image}">
        <Grid x:Name="grdMain">
            <Grid.IsEnabled>
                <Binding Path="IsLockScreen"
                         Mode="OneWay"
                         UpdateSourceTrigger="PropertyChanged">
                    <Binding.Converter>
                        <converter:ReserseBoolConverter />
                    </Binding.Converter>
                </Binding>
            </Grid.IsEnabled>
            <Grid.RowDefinitions>
            	<RowDefinition x:Name="RibbonRow"
            		Height="Auto" />
            	<RowDefinition x:Name="ClientRow"
            		Height="*" />
            	<RowDefinition x:Name="StatusRow"
            		Height="Auto" />
            </Grid.RowDefinitions>
            <r:Ribbon x:Name="ribbon" Background="#FFA7A7A7" >
                <!--
                    <r:Ribbon.QuickAccessToolBar>
                    <r:RibbonQuickAccessToolBar>
                    <r:RibbonButton Label="Delete All"
                    SmallImageSource="/Image/delete.ico"
                    Command="{Binding CloseAllViewCommand}" />
                    </r:RibbonQuickAccessToolBar>
                    </r:Ribbon.QuickAccessToolBar>
                -->
                <!--
                    <r:RibbonTab Header="Unknown">
                    <r:RibbonGroup Header="Unknown">
                    <r:RibbonButton Command="{Binding OpenViewCommand}"
                    CommandParameter="Archive"
                    Label="Archive"
                    LargeImageSource="/Image/RibbonImages/RibbonArchive.png" />
                    <r:RibbonButton Command="{Binding OpenViewCommand}"
                    CommandParameter="GroupPermission"
                    Label="Permission Group"
                    LargeImageSource="/Image/RibbonImages/RibbonGroupPermissionList.png" />
                    <r:RibbonButton Command="{Binding OpenViewCommand}"
                    CommandParameter="CurrentStock"
                    Label="Current Stock"
                    LargeImageSource="/Image/RibbonImages/RibbonCurrentStock.png" />
                    <r:RibbonButton Command="{Binding OpenViewCommand}"
                    CommandParameter="LayawayHistory"
                    Label="Layaway History"
                    LargeImageSource="/Image/RibbonImages/RibbonLayawayOrderHistory.png" />
                    </r:RibbonGroup>
                    </r:RibbonTab>
                -->
                <!--
                    <r:RibbonGroup Header="">
                    <r:RibbonButton Command="{Binding OpenViewCommand}"
                    CommandParameter=""
                    Label=""
                    LargeImageSource="/Image/RibbonImages/" />
                    <r:RibbonButton Command="{Binding OpenViewCommand}"
                    CommandParameter=""
                    Label=""
                    LargeImageSource="/Image/RibbonImages/" />
                    </r:RibbonGroup>
                -->
                <r:Ribbon.ApplicationMenu>
                    <r:RibbonApplicationMenu>
                        <r:RibbonApplicationMenuItem Header="Company Setting"
                                                     Command="{Binding OpenViewCommand}"
                                                     CommandParameter="CompanySetting"
                                                     ImageSource="/Image/RibbonImages/Ribbon Company.png" />
                        <r:RibbonApplicationMenuItem Header="Department"
                                                     Command="{Binding OpenViewCommand}"
                                                     CommandParameter="Department"
                                                     ImageSource="/Image/RibbonImages/RibbonDepartment.png" />
                        <r:RibbonApplicationMenuItem Header="LogOut"
                                                     Command="{Binding LogOutCommand}"
                                                     ImageSource="/Image/RibbonImages/RibbonLogout.png"
                                                     ToolTipDescription="LogOut"
                                                     ToolTipTitle="LogOut" />
                    </r:RibbonApplicationMenu>
                </r:Ribbon.ApplicationMenu>
                <r:RibbonTab Header="Employee">
                    <r:RibbonGroup Header="Employee" BorderThickness="1" BorderBrush="Gray">
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="Employee"
                                        Label="Create New"
                                        LargeImageSource="/Image/RibbonImages/RibbonCreateEmployee.png" />
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="EmployeeList"
                                        Label="Employee List"
                                        LargeImageSource="/Image/RibbonImages/RibbonEmployeeList.png" />
                    </r:RibbonGroup>
                    <!--  End TimeClock  -->
                    <!--  Begin TimeClock  -->
                    <r:RibbonGroup Header="Holiday and Schedule"
                                   SmallImageSource="/Image/RibbonImages/RibbonCreateSchedule.png" BorderBrush="Gray" BorderThickness="1">
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="WorkSchedule"
                                        Label="Schedule"
                                        LargeImageSource="/Image/RibbonImages/RibbonCreateSchedule.png" />
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="Holiday"
                                        Label="Holiday"
                                        LargeImageSource="/Image/RibbonImages/RibbonCreateHoliday.png" />
                    </r:RibbonGroup>
                    <r:RibbonGroup Header="Timelog &amp; work permission"
                                   SmallImageSource="/Image/RibbonImages/RibbonTimeClockManualEventEditing.png" BorderBrush="Gray" BorderThickness="1">
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="ManualEventEditing"
                                        Label="Manual editing timelog"
                                        LargeImageSource="/Image/RibbonImages/RibbonTimeClockManualEventEditing.png" />
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="WorkPermission"
                                        Label="Create permission"
                                        LargeImageSource="/Image/RibbonImages/RibbonCreateWorkPermission.png" />
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="WorkPermissionList"
                                        Label="Permission list"
                                        LargeImageSource="/Image/RibbonImages/RibbonWorkPermissionList.png" />
                    </r:RibbonGroup>
                </r:RibbonTab>
                <r:RibbonTab Header="Sales" BorderThickness="1" BorderBrush="Black">
                    <r:RibbonGroup Header="Customer" BorderBrush="Gray" BorderThickness="1">
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="Customer"
                                        Label="Create New"
                                        LargeImageSource="/Image/RibbonImages/RibbonCreateCustomer.png" />
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="CustomerList"
                                        Label="Customer List"
                                        LargeImageSource="/Image/RibbonImages/RibbonCustomerList.png" />
                    </r:RibbonGroup>
                    <r:RibbonGroup Header="Reward" BorderBrush="Gray" BorderThickness="1">
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="RewardSetup"
                                        Label="Reward Setup"
                                        LargeImageSource="/Image/RibbonImages/RibbonRewardSetup.png" />
                        <!--
                            <r:RibbonButton Command="{Binding OpenViewCommand}"
                            CommandParameter="RewardHistory"
                            Label="Reward History"
                            LargeImageSource="/Image/RibbonImages/RibbonRewardHistory.png" />
                        -->
                    </r:RibbonGroup>
                    <!--
                        <r:RibbonGroup Header="Sales Return">
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                        CommandParameter="SOReturn"
                        Label="SO Return"
                        LargeImageSource="/Image/RibbonImages/RibbonSaleOrderReturn.png" />
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                        CommandParameter="SOReturnList"
                        Label="SO Return List"
                        LargeImageSource="/Image/RibbonImages/RibbonSalesOrderList.png" />
                        </r:RibbonGroup>
                    -->
                    <!--
                        <r:RibbonGroup>
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                        CommandParameter="GiftCard"
                        Label="Gift Card"
                        LargeImageSource="/Image/RibbonImages/RibbonGiftCard.png" />
                        </r:RibbonGroup>
                    -->
                    <r:RibbonGroup Header="Sales Quote" BorderBrush="Gray" BorderThickness="1">
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="Quotation"
                                        Label="Quotation"
                                        LargeImageSource="/Image/RibbonImages/RibbonQuotation.png" />
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="QuotationList"
                                        Label="Quotation List"
                                        LargeImageSource="/Image/RibbonImages/RibbonQuotationList.png" />
                    </r:RibbonGroup>
                    <r:RibbonGroup Header="Sales Order" BorderBrush="Gray" BorderThickness="1">
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="SalesOrder"
                                        Label="Sales Order"
                                        LargeImageSource="/Image/RibbonImages/RibbonSaleOrder.png" />
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="SalesOrderList"
                                        Label="SO List"
                                        LargeImageSource="/Image/RibbonImages/RibbonSalesOrderList.png" />
                    </r:RibbonGroup>
                    <r:RibbonGroup Header="Sales Order Locked"
                                   BorderBrush="Gray"
                                   BorderThickness="1">
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="SalesOrderLockedList"
                                        Label="SO Locked List"
                                        LargeImageSource="/Image/RibbonImages/RibbonSOListLock.png" />
                    </r:RibbonGroup>
                </r:RibbonTab>
                <r:RibbonTab Header="Purchase" BorderThickness="1" BorderBrush="Black">
                    <r:RibbonGroup Header="Vendor" BorderThickness="1" BorderBrush="Gray">
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="Vendor"
                                        Label="Create New"
                                        LargeImageSource="/Image/RibbonImages/RibbonVendor.png" />
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="Vendor List"
                                        Label="Vendor List"
                                        LargeImageSource="/Image/RibbonImages/RibbonVendorList.png" />
                    </r:RibbonGroup>
                    <r:RibbonGroup Header="Purchase Order" BorderThickness="1" BorderBrush="Gray">
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="PurchaseOrder"
                                        Label="Purchase Order"
                                        LargeImageSource="/Image/RibbonImages/RibbonPurchaseOrder.png" />
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="PurchaseOrderList"
                                        Label="PO List"
                                        LargeImageSource="/Image/RibbonImages/RibbonPurchaseOrderList.png" />
                    </r:RibbonGroup>
                    <!--
                        <r:RibbonGroup Header="Purchase Return">
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                        CommandParameter="POReturn"
                        Label="PO Return"
                        LargeImageSource="/Image/RibbonImages/RibbonPurchaseOrderReturn.png" />
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                        CommandParameter="POReturnList"
                        Label="PO Return List"
                        LargeImageSource="/Image/RibbonImages/RibbonPurchaseOrderReturn.png" />
                        </r:RibbonGroup>
                    -->
                </r:RibbonTab>
                <r:RibbonTab Header="Inventory" BorderThickness="1" BorderBrush="Black">
                    <r:RibbonGroup Header="Product" BorderThickness="1" BorderBrush="Gray">
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="Product"
                                        Label="Create New"
                                        LargeImageSource="/Image/RibbonImages/RibbonProduct.png" />
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="ProductList"
                                        Label="Product List"
                                        LargeImageSource="/Image/RibbonImages/RibbonProductList.png" />
                        <!--
                            <r:RibbonButton Command="{Binding OpenViewCommand}"
                            CommandParameter="MovementHistory"
                            Label="Movement History"
                            LargeImageSource="/Image/RibbonImages/RibbonPromotionHistory.png" />
                        -->
                    </r:RibbonGroup>
                    <r:RibbonGroup Header="Pricing" BorderThickness="1" BorderBrush="Gray">
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="Pricing"
                                        Label="Pricing"
                                        LargeImageSource="/Image/RibbonImages/RibbonProductPricing.png" />
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="PricingList"
                                        Label="Pricing List"
                                        LargeImageSource="/Image/RibbonImages/RibbonProductPricingList.png" />
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="Discount"
                                        Label="Discount"
                                        LargeImageSource="/Image/RibbonImages/RibbonDiscount.png" />
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="DiscountList"
                                        Label="Discount List"
                                        LargeImageSource="/Image/RibbonImages/RibbonDiscountList.png" />
                    </r:RibbonGroup>
                    <r:RibbonGroup Header="Stock" BorderThickness="1" BorderBrush="Gray">
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="CurrentStock"
                                        Label="Current Stock"
                                        LargeImageSource="/Image/RibbonImages/RibbonCurrentStock.png" />
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="CountSheet"
                                        Label="Count Sheet"
                                        LargeImageSource="/Image/RibbonImages/RibbonCountSheet.png" />
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="CountSheetList"
                                        Label="Count Sheet List"
                                        LargeImageSource="/Image/RibbonImages/RibbonCountSheetList.png" />
                        <!--
                            <r:RibbonButton Command="{Binding OpenViewCommand}"
                            CommandParameter="ReorderStock"
                            Label="Reorder Stock"
                            LargeImageSource="/Image/RibbonImages/RibbonReorderStock.png" />
                            <r:RibbonButton Command="{Binding OpenViewCommand}"
                            CommandParameter="WorkOrder"
                            Label="Work Order"
                            LargeImageSource="/Image/RibbonImages/RibbonWorkOrder.png" />
                            <r:RibbonButton Command="{Binding OpenViewCommand}"
                            CommandParameter="WorkOrderList"
                            Label="Work Order List"
                            LargeImageSource="/Image/RibbonImages/RibbonWorkOrderList.png" />
                        -->
                        <!--
                            <r:RibbonButton Command="{Binding OpenViewCommand}"
                            CommandParameter="StockAdjustment"
                            Label="Stock Adjustment"
                            LargeImageSource="/Image/RibbonImages/RibbonAdjustStock.png" />
                            <r:RibbonButton Command="{Binding OpenViewCommand}"
                            CommandParameter="StockAdjustmentList"
                            Label="Stock Adjustment List"
                            LargeImageSource="/Image/RibbonImages/RibbonAdjustStockList.png" />
                        -->
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="TransferStock"
                                        Label="Transfer Stock"
                                        LargeImageSource="/Image/RibbonImages/RibbonTransferStock.png" />
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="TransferStockList"
                                        Label="Transfer List"
                                        LargeImageSource="/Image/RibbonImages/RibbonTransferStockList.png" />
                    </r:RibbonGroup>
                </r:RibbonTab>
                <!--
                    <r:RibbonTab Header="Report">
                    <r:RibbonGroup Header="Report">
                    <r:RibbonButton Command="{Binding OpenViewCommand}"
                    CommandParameter="InventoryReport"
                    Label="Inventory Report"
                    LargeImageSource="/Image/RibbonImages/RibbonProductList.png" />
                    <r:RibbonButton Command="{Binding OpenViewCommand}"
                    CommandParameter="SalesReport"
                    Label="Sales Report"
                    LargeImageSource="/Image/RibbonImages/RibbonSalesOrderList.png" />
                    <r:RibbonButton Command="{Binding OpenViewCommand}"
                    CommandParameter="PurchaseReport"
                    Label="Purchase Report"
                    LargeImageSource="/Image/RibbonImages/RibbonPurchaseOrderList.png" />
                    </r:RibbonGroup>
                    </r:RibbonTab>
                -->
                <r:RibbonTab Header="Configuration" BorderThickness="1" BorderBrush="Black">
                    <r:RibbonGroup Header="Settings" BorderBrush="Gray" BorderThickness="1">
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="Attachment"
                                        Label="Attachment"
                                        LargeImageSource="/Image/RibbonImages/RibbonAttachFile.png" />
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="SalesTax"
                                        Label="Sales Tax"
                                        LargeImageSource="/Image/RibbonImages/RibbonTaxCode.png" />
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="UserPermission"
                                        Label="User Permission"
                                        LargeImageSource="/Image/RibbonImages/RibbonUserPermissionList.png" />
                        <r:RibbonMenuButton Label="Style"
                                            LargeImageSource="/Image/RibbonImages/RibbonStyle.png">
                            <r:RibbonMenuItem Header="Grey"
                                              Command="{Binding ChangeStyleCommand}"
                                              CommandParameter="Grey" />

                            <r:RibbonMenuItem Header="Red"
                                              Command="{Binding ChangeStyleCommand}"
                                              CommandParameter="Red" />
                        </r:RibbonMenuButton>
                    </r:RibbonGroup>
                </r:RibbonTab>

            </r:Ribbon>
            <StatusBar x:Name="statusBar"
                       Grid.Row="2"
                       Background="{DynamicResource Bottom_TitleBar_Background}" BorderBrush="{DynamicResource Bottom_TitleBar_Border}" BorderThickness="0,1,0,0">
                <StatusBarItem Padding="3">
            		<StackPanel x:Name="stkpStore" Orientation="Horizontal">
                		<TextBlock x:Name="txtblStore"
                			TextWrapping="Wrap" Text="Store:" d:LayoutOverrides="Width" />
                		<TextBlock x:Name="txtblBindingStore"
                			TextWrapping="Wrap" Text="1 District" d:LayoutOverrides="Width" Margin="5,0,0,0" />
                	</StackPanel>
            	</StatusBarItem>
                <StatusBarItem Width="1" Padding="0" Background="#FF4B4B4B" Margin="5,0"/>
                <StatusBarItem Padding="3">
                	<StackPanel x:Name="stkpTaxLocation" Orientation="Horizontal">
                		<TextBlock x:Name="txtblTaxLocation"
                			TextWrapping="Wrap" Text="Tax Location:" d:LayoutOverrides="Width" />
                		<TextBlock x:Name="txtblBindingTaxLocation"
                			TextWrapping="Wrap" Text="Ho Chi Minh City" d:LayoutOverrides="Width" Margin="5,0,0,0" />
                	</StackPanel>
                </StatusBarItem>
                <StatusBarItem Width="1" Padding="0" Background="#FF4B4B4B" Margin="5,0"/>
                <StatusBarItem Padding="3">
                	<StackPanel x:Name="stkpTaxCode" Orientation="Horizontal">
                		<TextBlock x:Name="txtblTaxCode"
                			TextWrapping="Wrap" Text="Tax Code:" d:LayoutOverrides="Width" />
                		<TextBlock x:Name="txtblBindingTaxCode"
                			TextWrapping="Wrap" Text="0123456789" d:LayoutOverrides="Width" Margin="5,0,0,0" />
                	</StackPanel>
                </StatusBarItem>
                <StatusBarItem Width="1" Padding="0" Background="#FF4B4B4B" Margin="5,0"/>
                <StatusBarItem DockPanel.Dock="Right">
                    <ComboBox x:Name="cboOpenedOverControlList"
                              MinWidth="32"
                              FontWeight="Bold"
                              IsReadOnly="True"
                              ItemContainerStyle="{DynamicResource ComboBoxItemStyle}"
                              ItemsSource="{Binding HiddenHostList}"
                              SelectedItem="{Binding SelectedHiddenHost}"
                              Style="{DynamicResource ComboBoxStyle}"
                              Visibility="{Binding HiddenHostVisibility}" VerticalAlignment="Center" />
                </StatusBarItem>
                <StatusBarItem>
                    <TextBlock x:Name="tbUserLogin"
                               Margin="8,0,0,0"
                               Foreground="Red"
                               Text="{Binding LoginName}"
                               TextWrapping="Wrap" />
                </StatusBarItem>
                <StatusBarItem>
                    <TextBlock x:Name="tbStatus"
                               Margin="8,0,0,0"
                               DockPanel.Dock="Left"
                               Foreground="#FF2D2D2D"
                               Text="Status"
                               TextWrapping="Wrap" />
                </StatusBarItem>
                <StatusBarItem>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock x:Name="txtblServer"
                                   Margin="3"
                                   Text="{Binding Server}" />
                        <TextBlock x:Name="txtblDatabse"
                                   Margin="3"
                                   Text="{Binding Database}" />
                    </StackPanel>
                </StatusBarItem>
            </StatusBar>
            <Border x:Name="brdstatusBar" BorderBrush="White" BorderThickness="1" Height="1" VerticalAlignment="Top" d:LayoutOverrides="VerticalAlignment" Grid.Row="2" Margin="0,1,0,0"/>
            <Grid x:Name="grdMainView"
                  Grid.Row="1"
                  Margin="5" />
        </Grid>
        <Grid x:Name="grdLogin"
              Background="#F2000000" d:IsHidden="True">
            <Grid.Visibility>
                <Binding Path="IsLockScreen"
                         Mode="OneWay"
                         UpdateSourceTrigger="PropertyChanged">
                    <Binding.Converter>
                        <converter:BoolToVisibilityConverter />
                    </Binding.Converter>
                </Binding>
            </Grid.Visibility>
        </Grid>
    </Grid>
</r:RibbonWindow>

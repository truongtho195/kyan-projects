//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("WPFlashCardDBModel", "FK_Lessons_1", "Cards", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TestCenter.Database.Card), "Lessons", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TestCenter.Database.Lesson), true)]
[assembly: EdmRelationshipAttribute("WPFlashCardDBModel", "FK_Lessons_0", "Categories", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(TestCenter.Database.Category), "Lessons", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TestCenter.Database.Lesson), true)]
[assembly: EdmRelationshipAttribute("WPFlashCardDBModel", "FK_StudyDetails_0", "Lessons", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TestCenter.Database.Lesson), "StudyDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TestCenter.Database.StudyDetail), true)]
[assembly: EdmRelationshipAttribute("WPFlashCardDBModel", "FK_StudyDetails_1", "Studies", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TestCenter.Database.Study), "StudyDetails", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TestCenter.Database.StudyDetail), true)]
[assembly: EdmRelationshipAttribute("WPFlashCardDBModel", "FK_BackSides_0", "BackSideType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TestCenter.Database.BackSideType), "BackSide", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TestCenter.Database.BackSide), true)]
[assembly: EdmRelationshipAttribute("WPFlashCardDBModel", "FK_BackSides_1", "Lesson", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(TestCenter.Database.Lesson), "BackSide", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(TestCenter.Database.BackSide), true)]

#endregion

namespace TestCenter.Database
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class WPFlashCardDBEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new WPFlashCardDBEntities object using the connection string found in the 'WPFlashCardDBEntities' section of the application configuration file.
        /// </summary>
        public WPFlashCardDBEntities() : base("name=WPFlashCardDBEntities", "WPFlashCardDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new WPFlashCardDBEntities object.
        /// </summary>
        public WPFlashCardDBEntities(string connectionString) : base(connectionString, "WPFlashCardDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new WPFlashCardDBEntities object.
        /// </summary>
        public WPFlashCardDBEntities(EntityConnection connection) : base(connection, "WPFlashCardDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BackSideType> BackSideTypes
        {
            get
            {
                if ((_BackSideTypes == null))
                {
                    _BackSideTypes = base.CreateObjectSet<BackSideType>("BackSideTypes");
                }
                return _BackSideTypes;
            }
        }
        private ObjectSet<BackSideType> _BackSideTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Card> Cards
        {
            get
            {
                if ((_Cards == null))
                {
                    _Cards = base.CreateObjectSet<Card>("Cards");
                }
                return _Cards;
            }
        }
        private ObjectSet<Card> _Cards;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Category> Categories
        {
            get
            {
                if ((_Categories == null))
                {
                    _Categories = base.CreateObjectSet<Category>("Categories");
                }
                return _Categories;
            }
        }
        private ObjectSet<Category> _Categories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Lesson> Lessons
        {
            get
            {
                if ((_Lessons == null))
                {
                    _Lessons = base.CreateObjectSet<Lesson>("Lessons");
                }
                return _Lessons;
            }
        }
        private ObjectSet<Lesson> _Lessons;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Setup> Setups
        {
            get
            {
                if ((_Setups == null))
                {
                    _Setups = base.CreateObjectSet<Setup>("Setups");
                }
                return _Setups;
            }
        }
        private ObjectSet<Setup> _Setups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Study> Studies
        {
            get
            {
                if ((_Studies == null))
                {
                    _Studies = base.CreateObjectSet<Study>("Studies");
                }
                return _Studies;
            }
        }
        private ObjectSet<Study> _Studies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<StudyDetail> StudyDetails
        {
            get
            {
                if ((_StudyDetails == null))
                {
                    _StudyDetails = base.CreateObjectSet<StudyDetail>("StudyDetails");
                }
                return _StudyDetails;
            }
        }
        private ObjectSet<StudyDetail> _StudyDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserLesson> UserLessons
        {
            get
            {
                if ((_UserLessons == null))
                {
                    _UserLessons = base.CreateObjectSet<UserLesson>("UserLessons");
                }
                return _UserLessons;
            }
        }
        private ObjectSet<UserLesson> _UserLessons;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<User> Users
        {
            get
            {
                if ((_Users == null))
                {
                    _Users = base.CreateObjectSet<User>("Users");
                }
                return _Users;
            }
        }
        private ObjectSet<User> _Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BackSide> BackSides
        {
            get
            {
                if ((_BackSides == null))
                {
                    _BackSides = base.CreateObjectSet<BackSide>("BackSides");
                }
                return _BackSides;
            }
        }
        private ObjectSet<BackSide> _BackSides;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BackSideTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBackSideTypes(BackSideType backSideType)
        {
            base.AddObject("BackSideTypes", backSideType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Cards EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCards(Card card)
        {
            base.AddObject("Cards", card);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Categories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCategories(Category category)
        {
            base.AddObject("Categories", category);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Lessons EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLessons(Lesson lesson)
        {
            base.AddObject("Lessons", lesson);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Setups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSetups(Setup setup)
        {
            base.AddObject("Setups", setup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Studies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStudies(Study study)
        {
            base.AddObject("Studies", study);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the StudyDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToStudyDetails(StudyDetail studyDetail)
        {
            base.AddObject("StudyDetails", studyDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserLessons EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserLessons(UserLesson userLesson)
        {
            base.AddObject("UserLessons", userLesson);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUsers(User user)
        {
            base.AddObject("Users", user);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BackSides EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBackSides(BackSide backSide)
        {
            base.AddObject("BackSides", backSide);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WPFlashCardDBModel", Name="BackSide")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BackSide : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BackSide object.
        /// </summary>
        /// <param name="backSideID">Initial value of the BackSideID property.</param>
        public static BackSide CreateBackSide(global::System.String backSideID)
        {
            BackSide backSide = new BackSide();
            backSide.BackSideID = backSideID;
            return backSide;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BackSideID
        {
            get
            {
                return _BackSideID;
            }
            set
            {
                if (_BackSideID != value)
                {
                    OnBackSideIDChanging(value);
                    ReportPropertyChanging("BackSideID");
                    _BackSideID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("BackSideID");
                    OnBackSideIDChanged();
                }
            }
        }
        private global::System.String _BackSideID;
        partial void OnBackSideIDChanging(global::System.String value);
        partial void OnBackSideIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LessonID
        {
            get
            {
                return _LessonID;
            }
            set
            {
                OnLessonIDChanging(value);
                ReportPropertyChanging("LessonID");
                _LessonID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LessonID");
                OnLessonIDChanged();
            }
        }
        private global::System.String _LessonID;
        partial void OnLessonIDChanging(global::System.String value);
        partial void OnLessonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Content
        {
            get
            {
                return _Content;
            }
            set
            {
                OnContentChanging(value);
                ReportPropertyChanging("Content");
                _Content = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Content");
                OnContentChanged();
            }
        }
        private global::System.String _Content;
        partial void OnContentChanging(global::System.String value);
        partial void OnContentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> BackSideTypeID
        {
            get
            {
                return _BackSideTypeID;
            }
            set
            {
                OnBackSideTypeIDChanging(value);
                ReportPropertyChanging("BackSideTypeID");
                _BackSideTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BackSideTypeID");
                OnBackSideTypeIDChanged();
            }
        }
        private Nullable<global::System.Int64> _BackSideTypeID;
        partial void OnBackSideTypeIDChanging(Nullable<global::System.Int64> value);
        partial void OnBackSideTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> IsMain
        {
            get
            {
                return _IsMain;
            }
            set
            {
                OnIsMainChanging(value);
                ReportPropertyChanging("IsMain");
                _IsMain = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsMain");
                OnIsMainChanged();
            }
        }
        private Nullable<global::System.Byte> _IsMain;
        partial void OnIsMainChanging(Nullable<global::System.Byte> value);
        partial void OnIsMainChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WPFlashCardDBModel", "FK_BackSides_0", "BackSideType")]
        public BackSideType BackSideType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BackSideType>("WPFlashCardDBModel.FK_BackSides_0", "BackSideType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BackSideType>("WPFlashCardDBModel.FK_BackSides_0", "BackSideType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BackSideType> BackSideTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BackSideType>("WPFlashCardDBModel.FK_BackSides_0", "BackSideType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BackSideType>("WPFlashCardDBModel.FK_BackSides_0", "BackSideType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WPFlashCardDBModel", "FK_BackSides_1", "Lesson")]
        public Lesson Lesson
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lesson>("WPFlashCardDBModel.FK_BackSides_1", "Lesson").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lesson>("WPFlashCardDBModel.FK_BackSides_1", "Lesson").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Lesson> LessonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lesson>("WPFlashCardDBModel.FK_BackSides_1", "Lesson");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Lesson>("WPFlashCardDBModel.FK_BackSides_1", "Lesson", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WPFlashCardDBModel", Name="BackSideType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BackSideType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BackSideType object.
        /// </summary>
        /// <param name="backSideTypeID">Initial value of the BackSideTypeID property.</param>
        /// <param name="backSideName">Initial value of the BackSideName property.</param>
        public static BackSideType CreateBackSideType(global::System.Int64 backSideTypeID, global::System.String backSideName)
        {
            BackSideType backSideType = new BackSideType();
            backSideType.BackSideTypeID = backSideTypeID;
            backSideType.BackSideName = backSideName;
            return backSideType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 BackSideTypeID
        {
            get
            {
                return _BackSideTypeID;
            }
            set
            {
                if (_BackSideTypeID != value)
                {
                    OnBackSideTypeIDChanging(value);
                    ReportPropertyChanging("BackSideTypeID");
                    _BackSideTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BackSideTypeID");
                    OnBackSideTypeIDChanged();
                }
            }
        }
        private global::System.Int64 _BackSideTypeID;
        partial void OnBackSideTypeIDChanging(global::System.Int64 value);
        partial void OnBackSideTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String BackSideName
        {
            get
            {
                return _BackSideName;
            }
            set
            {
                OnBackSideNameChanging(value);
                ReportPropertyChanging("BackSideName");
                _BackSideName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("BackSideName");
                OnBackSideNameChanged();
            }
        }
        private global::System.String _BackSideName;
        partial void OnBackSideNameChanging(global::System.String value);
        partial void OnBackSideNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WPFlashCardDBModel", "FK_BackSides_0", "BackSide")]
        public EntityCollection<BackSide> BackSides
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BackSide>("WPFlashCardDBModel.FK_BackSides_0", "BackSide");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BackSide>("WPFlashCardDBModel.FK_BackSides_0", "BackSide", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WPFlashCardDBModel", Name="Card")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Card : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Card object.
        /// </summary>
        /// <param name="cardID">Initial value of the CardID property.</param>
        /// <param name="cardName">Initial value of the CardName property.</param>
        /// <param name="remark">Initial value of the Remark property.</param>
        public static Card CreateCard(global::System.String cardID, global::System.String cardName, global::System.String remark)
        {
            Card card = new Card();
            card.CardID = cardID;
            card.CardName = cardName;
            card.Remark = remark;
            return card;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CardID
        {
            get
            {
                return _CardID;
            }
            set
            {
                if (_CardID != value)
                {
                    OnCardIDChanging(value);
                    ReportPropertyChanging("CardID");
                    _CardID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CardID");
                    OnCardIDChanged();
                }
            }
        }
        private global::System.String _CardID;
        partial void OnCardIDChanging(global::System.String value);
        partial void OnCardIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CardName
        {
            get
            {
                return _CardName;
            }
            set
            {
                OnCardNameChanging(value);
                ReportPropertyChanging("CardName");
                _CardName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CardName");
                OnCardNameChanged();
            }
        }
        private global::System.String _CardName;
        partial void OnCardNameChanging(global::System.String value);
        partial void OnCardNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Remark
        {
            get
            {
                return _Remark;
            }
            set
            {
                OnRemarkChanging(value);
                ReportPropertyChanging("Remark");
                _Remark = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Remark");
                OnRemarkChanged();
            }
        }
        private global::System.String _Remark;
        partial void OnRemarkChanging(global::System.String value);
        partial void OnRemarkChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WPFlashCardDBModel", "FK_Lessons_1", "Lessons")]
        public EntityCollection<Lesson> Lessons
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Lesson>("WPFlashCardDBModel.FK_Lessons_1", "Lessons");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Lesson>("WPFlashCardDBModel.FK_Lessons_1", "Lessons", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WPFlashCardDBModel", Name="Category")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Category : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Category object.
        /// </summary>
        /// <param name="categoryID">Initial value of the CategoryID property.</param>
        /// <param name="categoryName">Initial value of the CategoryName property.</param>
        /// <param name="categoryOf">Initial value of the CategoryOf property.</param>
        public static Category CreateCategory(global::System.String categoryID, global::System.String categoryName, global::System.Int32 categoryOf)
        {
            Category category = new Category();
            category.CategoryID = categoryID;
            category.CategoryName = categoryName;
            category.CategoryOf = categoryOf;
            return category;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                if (_CategoryID != value)
                {
                    OnCategoryIDChanging(value);
                    ReportPropertyChanging("CategoryID");
                    _CategoryID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CategoryID");
                    OnCategoryIDChanged();
                }
            }
        }
        private global::System.String _CategoryID;
        partial void OnCategoryIDChanging(global::System.String value);
        partial void OnCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CategoryName
        {
            get
            {
                return _CategoryName;
            }
            set
            {
                OnCategoryNameChanging(value);
                ReportPropertyChanging("CategoryName");
                _CategoryName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CategoryName");
                OnCategoryNameChanged();
            }
        }
        private global::System.String _CategoryName;
        partial void OnCategoryNameChanging(global::System.String value);
        partial void OnCategoryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CategoryOf
        {
            get
            {
                return _CategoryOf;
            }
            set
            {
                OnCategoryOfChanging(value);
                ReportPropertyChanging("CategoryOf");
                _CategoryOf = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryOf");
                OnCategoryOfChanged();
            }
        }
        private global::System.Int32 _CategoryOf;
        partial void OnCategoryOfChanging(global::System.Int32 value);
        partial void OnCategoryOfChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WPFlashCardDBModel", "FK_Lessons_0", "Lessons")]
        public EntityCollection<Lesson> Lessons
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Lesson>("WPFlashCardDBModel.FK_Lessons_0", "Lessons");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Lesson>("WPFlashCardDBModel.FK_Lessons_0", "Lessons", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WPFlashCardDBModel", Name="Lesson")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Lesson : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Lesson object.
        /// </summary>
        /// <param name="lessonID">Initial value of the LessonID property.</param>
        /// <param name="categoryID">Initial value of the CategoryID property.</param>
        public static Lesson CreateLesson(global::System.String lessonID, global::System.String categoryID)
        {
            Lesson lesson = new Lesson();
            lesson.LessonID = lessonID;
            lesson.CategoryID = categoryID;
            return lesson;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LessonID
        {
            get
            {
                return _LessonID;
            }
            set
            {
                if (_LessonID != value)
                {
                    OnLessonIDChanging(value);
                    ReportPropertyChanging("LessonID");
                    _LessonID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("LessonID");
                    OnLessonIDChanged();
                }
            }
        }
        private global::System.String _LessonID;
        partial void OnLessonIDChanging(global::System.String value);
        partial void OnLessonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LessonName
        {
            get
            {
                return _LessonName;
            }
            set
            {
                OnLessonNameChanging(value);
                ReportPropertyChanging("LessonName");
                _LessonName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LessonName");
                OnLessonNameChanged();
            }
        }
        private global::System.String _LessonName;
        partial void OnLessonNameChanging(global::System.String value);
        partial void OnLessonNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CategoryID
        {
            get
            {
                return _CategoryID;
            }
            set
            {
                OnCategoryIDChanging(value);
                ReportPropertyChanging("CategoryID");
                _CategoryID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CategoryID");
                OnCategoryIDChanged();
            }
        }
        private global::System.String _CategoryID;
        partial void OnCategoryIDChanging(global::System.String value);
        partial void OnCategoryIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CardID
        {
            get
            {
                return _CardID;
            }
            set
            {
                OnCardIDChanging(value);
                ReportPropertyChanging("CardID");
                _CardID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CardID");
                OnCardIDChanged();
            }
        }
        private global::System.String _CardID;
        partial void OnCardIDChanging(global::System.String value);
        partial void OnCardIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WPFlashCardDBModel", "FK_Lessons_1", "Cards")]
        public Card Card
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Card>("WPFlashCardDBModel.FK_Lessons_1", "Cards").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Card>("WPFlashCardDBModel.FK_Lessons_1", "Cards").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Card> CardReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Card>("WPFlashCardDBModel.FK_Lessons_1", "Cards");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Card>("WPFlashCardDBModel.FK_Lessons_1", "Cards", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WPFlashCardDBModel", "FK_Lessons_0", "Categories")]
        public Category Category
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("WPFlashCardDBModel.FK_Lessons_0", "Categories").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("WPFlashCardDBModel.FK_Lessons_0", "Categories").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Category> CategoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Category>("WPFlashCardDBModel.FK_Lessons_0", "Categories");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Category>("WPFlashCardDBModel.FK_Lessons_0", "Categories", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WPFlashCardDBModel", "FK_StudyDetails_0", "StudyDetails")]
        public EntityCollection<StudyDetail> StudyDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StudyDetail>("WPFlashCardDBModel.FK_StudyDetails_0", "StudyDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StudyDetail>("WPFlashCardDBModel.FK_StudyDetails_0", "StudyDetails", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WPFlashCardDBModel", "FK_BackSides_1", "BackSide")]
        public EntityCollection<BackSide> BackSides
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BackSide>("WPFlashCardDBModel.FK_BackSides_1", "BackSide");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BackSide>("WPFlashCardDBModel.FK_BackSides_1", "BackSide", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WPFlashCardDBModel", Name="Setup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Setup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Setup object.
        /// </summary>
        /// <param name="setupID">Initial value of the SetupID property.</param>
        /// <param name="viewTimeSecond">Initial value of the ViewTimeSecond property.</param>
        /// <param name="distanceTimeSecond">Initial value of the DistanceTimeSecond property.</param>
        public static Setup CreateSetup(global::System.String setupID, global::System.Int32 viewTimeSecond, global::System.Int32 distanceTimeSecond)
        {
            Setup setup = new Setup();
            setup.SetupID = setupID;
            setup.ViewTimeSecond = viewTimeSecond;
            setup.DistanceTimeSecond = distanceTimeSecond;
            return setup;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String SetupID
        {
            get
            {
                return _SetupID;
            }
            set
            {
                if (_SetupID != value)
                {
                    OnSetupIDChanging(value);
                    ReportPropertyChanging("SetupID");
                    _SetupID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("SetupID");
                    OnSetupIDChanged();
                }
            }
        }
        private global::System.String _SetupID;
        partial void OnSetupIDChanging(global::System.String value);
        partial void OnSetupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ViewTimeSecond
        {
            get
            {
                return _ViewTimeSecond;
            }
            set
            {
                OnViewTimeSecondChanging(value);
                ReportPropertyChanging("ViewTimeSecond");
                _ViewTimeSecond = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ViewTimeSecond");
                OnViewTimeSecondChanged();
            }
        }
        private global::System.Int32 _ViewTimeSecond;
        partial void OnViewTimeSecondChanging(global::System.Int32 value);
        partial void OnViewTimeSecondChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DistanceTimeSecond
        {
            get
            {
                return _DistanceTimeSecond;
            }
            set
            {
                OnDistanceTimeSecondChanging(value);
                ReportPropertyChanging("DistanceTimeSecond");
                _DistanceTimeSecond = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DistanceTimeSecond");
                OnDistanceTimeSecondChanged();
            }
        }
        private global::System.Int32 _DistanceTimeSecond;
        partial void OnDistanceTimeSecondChanging(global::System.Int32 value);
        partial void OnDistanceTimeSecondChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsLimitCard
        {
            get
            {
                return _IsLimitCard;
            }
            set
            {
                OnIsLimitCardChanging(value);
                ReportPropertyChanging("IsLimitCard");
                _IsLimitCard = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsLimitCard");
                OnIsLimitCardChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsLimitCard;
        partial void OnIsLimitCardChanging(Nullable<global::System.Boolean> value);
        partial void OnIsLimitCardChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> LimitCardNum
        {
            get
            {
                return _LimitCardNum;
            }
            set
            {
                OnLimitCardNumChanging(value);
                ReportPropertyChanging("LimitCardNum");
                _LimitCardNum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LimitCardNum");
                OnLimitCardNumChanged();
            }
        }
        private Nullable<global::System.Int32> _LimitCardNum;
        partial void OnLimitCardNumChanging(Nullable<global::System.Int32> value);
        partial void OnLimitCardNumChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsEnableSlideShow
        {
            get
            {
                return _IsEnableSlideShow;
            }
            set
            {
                OnIsEnableSlideShowChanging(value);
                ReportPropertyChanging("IsEnableSlideShow");
                _IsEnableSlideShow = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsEnableSlideShow");
                OnIsEnableSlideShowChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsEnableSlideShow;
        partial void OnIsEnableSlideShowChanging(Nullable<global::System.Boolean> value);
        partial void OnIsEnableSlideShowChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsEnableLoop
        {
            get
            {
                return _IsEnableLoop;
            }
            set
            {
                OnIsEnableLoopChanging(value);
                ReportPropertyChanging("IsEnableLoop");
                _IsEnableLoop = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsEnableLoop");
                OnIsEnableLoopChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsEnableLoop;
        partial void OnIsEnableLoopChanging(Nullable<global::System.Boolean> value);
        partial void OnIsEnableLoopChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsEnableSoundForShow
        {
            get
            {
                return _IsEnableSoundForShow;
            }
            set
            {
                OnIsEnableSoundForShowChanging(value);
                ReportPropertyChanging("IsEnableSoundForShow");
                _IsEnableSoundForShow = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsEnableSoundForShow");
                OnIsEnableSoundForShowChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsEnableSoundForShow;
        partial void OnIsEnableSoundForShowChanging(Nullable<global::System.Boolean> value);
        partial void OnIsEnableSoundForShowChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsShuffle
        {
            get
            {
                return _IsShuffle;
            }
            set
            {
                OnIsShuffleChanging(value);
                ReportPropertyChanging("IsShuffle");
                _IsShuffle = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsShuffle");
                OnIsShuffleChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsShuffle;
        partial void OnIsShuffleChanging(Nullable<global::System.Boolean> value);
        partial void OnIsShuffleChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsOpenLastStudy
        {
            get
            {
                return _IsOpenLastStudy;
            }
            set
            {
                OnIsOpenLastStudyChanging(value);
                ReportPropertyChanging("IsOpenLastStudy");
                _IsOpenLastStudy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsOpenLastStudy");
                OnIsOpenLastStudyChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsOpenLastStudy;
        partial void OnIsOpenLastStudyChanging(Nullable<global::System.Boolean> value);
        partial void OnIsOpenLastStudyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> SpeechWhenShow
        {
            get
            {
                return _SpeechWhenShow;
            }
            set
            {
                OnSpeechWhenShowChanging(value);
                ReportPropertyChanging("SpeechWhenShow");
                _SpeechWhenShow = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SpeechWhenShow");
                OnSpeechWhenShowChanged();
            }
        }
        private Nullable<global::System.Boolean> _SpeechWhenShow;
        partial void OnSpeechWhenShowChanging(Nullable<global::System.Boolean> value);
        partial void OnSpeechWhenShowChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WPFlashCardDBModel", Name="Study")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Study : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Study object.
        /// </summary>
        /// <param name="studyID">Initial value of the StudyID property.</param>
        /// <param name="lastStudyDate">Initial value of the LastStudyDate property.</param>
        public static Study CreateStudy(global::System.Guid studyID, global::System.DateTime lastStudyDate)
        {
            Study study = new Study();
            study.StudyID = studyID;
            study.LastStudyDate = lastStudyDate;
            return study;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid StudyID
        {
            get
            {
                return _StudyID;
            }
            set
            {
                if (_StudyID != value)
                {
                    OnStudyIDChanging(value);
                    ReportPropertyChanging("StudyID");
                    _StudyID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StudyID");
                    OnStudyIDChanged();
                }
            }
        }
        private global::System.Guid _StudyID;
        partial void OnStudyIDChanging(global::System.Guid value);
        partial void OnStudyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastStudyDate
        {
            get
            {
                return _LastStudyDate;
            }
            set
            {
                OnLastStudyDateChanging(value);
                ReportPropertyChanging("LastStudyDate");
                _LastStudyDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastStudyDate");
                OnLastStudyDateChanged();
            }
        }
        private global::System.DateTime _LastStudyDate;
        partial void OnLastStudyDateChanging(global::System.DateTime value);
        partial void OnLastStudyDateChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WPFlashCardDBModel", "FK_StudyDetails_1", "StudyDetails")]
        public EntityCollection<StudyDetail> StudyDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StudyDetail>("WPFlashCardDBModel.FK_StudyDetails_1", "StudyDetails");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StudyDetail>("WPFlashCardDBModel.FK_StudyDetails_1", "StudyDetails", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WPFlashCardDBModel", Name="StudyDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StudyDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StudyDetail object.
        /// </summary>
        /// <param name="studyDetailID">Initial value of the StudyDetailID property.</param>
        public static StudyDetail CreateStudyDetail(global::System.Guid studyDetailID)
        {
            StudyDetail studyDetail = new StudyDetail();
            studyDetail.StudyDetailID = studyDetailID;
            return studyDetail;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid StudyDetailID
        {
            get
            {
                return _StudyDetailID;
            }
            set
            {
                if (_StudyDetailID != value)
                {
                    OnStudyDetailIDChanging(value);
                    ReportPropertyChanging("StudyDetailID");
                    _StudyDetailID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("StudyDetailID");
                    OnStudyDetailIDChanged();
                }
            }
        }
        private global::System.Guid _StudyDetailID;
        partial void OnStudyDetailIDChanging(global::System.Guid value);
        partial void OnStudyDetailIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LessonID
        {
            get
            {
                return _LessonID;
            }
            set
            {
                OnLessonIDChanging(value);
                ReportPropertyChanging("LessonID");
                _LessonID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LessonID");
                OnLessonIDChanged();
            }
        }
        private global::System.String _LessonID;
        partial void OnLessonIDChanging(global::System.String value);
        partial void OnLessonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> StudyID
        {
            get
            {
                return _StudyID;
            }
            set
            {
                OnStudyIDChanging(value);
                ReportPropertyChanging("StudyID");
                _StudyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StudyID");
                OnStudyIDChanged();
            }
        }
        private Nullable<global::System.Guid> _StudyID;
        partial void OnStudyIDChanging(Nullable<global::System.Guid> value);
        partial void OnStudyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsLastStudy
        {
            get
            {
                return _IsLastStudy;
            }
            set
            {
                OnIsLastStudyChanging(value);
                ReportPropertyChanging("IsLastStudy");
                _IsLastStudy = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsLastStudy");
                OnIsLastStudyChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsLastStudy;
        partial void OnIsLastStudyChanging(Nullable<global::System.Boolean> value);
        partial void OnIsLastStudyChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WPFlashCardDBModel", "FK_StudyDetails_0", "Lessons")]
        public Lesson Lesson
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lesson>("WPFlashCardDBModel.FK_StudyDetails_0", "Lessons").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lesson>("WPFlashCardDBModel.FK_StudyDetails_0", "Lessons").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Lesson> LessonReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lesson>("WPFlashCardDBModel.FK_StudyDetails_0", "Lessons");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Lesson>("WPFlashCardDBModel.FK_StudyDetails_0", "Lessons", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("WPFlashCardDBModel", "FK_StudyDetails_1", "Studies")]
        public Study Study
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Study>("WPFlashCardDBModel.FK_StudyDetails_1", "Studies").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Study>("WPFlashCardDBModel.FK_StudyDetails_1", "Studies").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Study> StudyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Study>("WPFlashCardDBModel.FK_StudyDetails_1", "Studies");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Study>("WPFlashCardDBModel.FK_StudyDetails_1", "Studies", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WPFlashCardDBModel", Name="User")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class User : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new User object.
        /// </summary>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        public static User CreateUser(global::System.Int64 userID, global::System.String userName)
        {
            User user = new User();
            user.UserID = userID;
            user.UserName = userName;
            return user;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Int64 _UserID;
        partial void OnUserIDChanging(global::System.Int64 value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FullName
        {
            get
            {
                return _FullName;
            }
            set
            {
                OnFullNameChanging(value);
                ReportPropertyChanging("FullName");
                _FullName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FullName");
                OnFullNameChanged();
            }
        }
        private global::System.String _FullName;
        partial void OnFullNameChanging(global::System.String value);
        partial void OnFullNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LastLogin
        {
            get
            {
                return _LastLogin;
            }
            set
            {
                OnLastLoginChanging(value);
                ReportPropertyChanging("LastLogin");
                _LastLogin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastLogin");
                OnLastLoginChanged();
            }
        }
        private Nullable<global::System.DateTime> _LastLogin;
        partial void OnLastLoginChanging(Nullable<global::System.DateTime> value);
        partial void OnLastLoginChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="WPFlashCardDBModel", Name="UserLesson")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserLesson : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserLesson object.
        /// </summary>
        /// <param name="userLessonID">Initial value of the UserLessonID property.</param>
        public static UserLesson CreateUserLesson(global::System.Int64 userLessonID)
        {
            UserLesson userLesson = new UserLesson();
            userLesson.UserLessonID = userLessonID;
            return userLesson;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 UserLessonID
        {
            get
            {
                return _UserLessonID;
            }
            set
            {
                if (_UserLessonID != value)
                {
                    OnUserLessonIDChanging(value);
                    ReportPropertyChanging("UserLessonID");
                    _UserLessonID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserLessonID");
                    OnUserLessonIDChanged();
                }
            }
        }
        private global::System.Int64 _UserLessonID;
        partial void OnUserLessonIDChanging(global::System.Int64 value);
        partial void OnUserLessonIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                OnUserIDChanging(value);
                ReportPropertyChanging("UserID");
                _UserID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserID");
                OnUserIDChanged();
            }
        }
        private Nullable<global::System.Int64> _UserID;
        partial void OnUserIDChanging(Nullable<global::System.Int64> value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int64> LessonID
        {
            get
            {
                return _LessonID;
            }
            set
            {
                OnLessonIDChanging(value);
                ReportPropertyChanging("LessonID");
                _LessonID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LessonID");
                OnLessonIDChanged();
            }
        }
        private Nullable<global::System.Int64> _LessonID;
        partial void OnLessonIDChanging(Nullable<global::System.Int64> value);
        partial void OnLessonIDChanged();

        #endregion
    
    }

    #endregion
    
}

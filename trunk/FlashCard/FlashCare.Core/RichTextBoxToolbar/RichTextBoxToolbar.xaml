<UserControl xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Luna"
             x:Class="RichTextBoxControl.RichTextBoxToolbar"
             x:Name="ucControl"
             mc:Ignorable="d">
    <UserControl.Resources>
        <!-- Flat Button -->
        <ControlTemplate x:Key="FlatButtonControlTemplate"
                         TargetType="{x:Type Button}">
            <Border x:Name="OuterBorder"
                    BorderBrush="Transparent"
                    BorderThickness="1"
                    CornerRadius="2">
                <Border x:Name="InnerBorder"
                        Background="Transparent"
                        BorderBrush="Transparent"
                        BorderThickness="1"
                        CornerRadius="2">
                    <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      RecognizesAccessKey="True"
                                      Margin="{TemplateBinding Padding}" />
                </Border>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver"
                         Value="True">
                    <Setter TargetName="OuterBorder"
                            Property="BorderBrush"
                            Value="#FF7CA0CC" />
                    <Setter TargetName="InnerBorder"
                            Property="BorderBrush"
                            Value="#FFE4EFFD" />
                    <Setter TargetName="InnerBorder"
                            Property="Background"
                            Value="#FFDAE7F5" />
                </Trigger>
                <Trigger Property="IsPressed"
                         Value="True">
                    <Setter TargetName="OuterBorder"
                            Property="BorderBrush"
                            Value="#FF2E4E76" />
                    <Setter TargetName="InnerBorder"
                            Property="BorderBrush"
                            Value="#FF116EE4" />
                    <Setter TargetName="InnerBorder"
                            Property="Background"
                            Value="#FF3272B8" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- Flat Toggle Button -->
        <ControlTemplate x:Key="FlatToggleButtonControlTemplate"
                         TargetType="{x:Type ToggleButton}">
            <Border x:Name="OuterBorder"
                    BorderBrush="Transparent"
                    BorderThickness="1"
                    CornerRadius="2">
                <Border x:Name="InnerBorder"
                        Background="Transparent"
                        BorderBrush="Transparent"
                        BorderThickness="1"
                        CornerRadius="2">
                    <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      RecognizesAccessKey="True"
                                      Margin="{TemplateBinding Padding}" />
                </Border>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver"
                         Value="True">
                    <Setter TargetName="OuterBorder"
                            Property="BorderBrush"
                            Value="#FF7CA0CC" />
                    <Setter TargetName="InnerBorder"
                            Property="BorderBrush"
                            Value="#FFE4EFFD" />
                    <Setter TargetName="InnerBorder"
                            Property="Background"
                            Value="#FFDAE7F5" />
                </Trigger>
                <Trigger Property="IsPressed"
                         Value="True">
                    <Setter TargetName="OuterBorder"
                            Property="BorderBrush"
                            Value="#FF2E4E76" />
                    <Setter TargetName="InnerBorder"
                            Property="BorderBrush"
                            Value="#FF116EE4" />
                    <Setter TargetName="InnerBorder"
                            Property="Background"
                            Value="#FF3272B8" />
                </Trigger>
                <Trigger Property="IsChecked"
                         Value="True">
                    <Setter TargetName="OuterBorder"
                            Property="BorderBrush"
                            Value="#FFFFC00A" />
                    <Setter TargetName="InnerBorder"
                            Property="BorderBrush"
                            Value="#FFFFDE7F" />
                    <Setter TargetName="InnerBorder"
                            Property="Background"
                            Value="#FFFFD458" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <SolidColorBrush x:Key="ListBorder"
                         Color="#FF7F9DB9" />
        <Style x:Key="{x:Type TextBoxBase}"
               TargetType="{x:Type TextBoxBase}">
            <Setter Property="Background"
                    Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
            <Setter Property="BorderBrush"
                    Value="{StaticResource ListBorder}" />
            <Setter Property="Foreground"
                    Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="KeyboardNavigation.TabNavigation"
                    Value="None" />
            <Setter Property="BorderThickness"
                    Value="1" />
            <Setter Property="HorizontalContentAlignment"
                    Value="Left" />
            <Setter Property="Padding"
                    Value="2" />
            <Setter Property="FocusVisualStyle"
                    Value="{x:Null}" />
            <Setter Property="AllowDrop"
                    Value="true" />
            <Setter Property="ScrollViewer.PanningMode"
                    Value="VerticalFirst" />
            <Setter Property="Stylus.IsFlicksEnabled"
                    Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBoxBase}">
                        <Border x:Name="Bd"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="true"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center">
                            <ScrollViewer x:Name="PART_ContentHost"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled"
                                     Value="false">
                                <Setter Property="Background"
                                        TargetName="Bd"
                                        Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                <Setter Property="Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="{x:Type Hyperlink}"
               TargetType="{x:Type Hyperlink}">
            <Setter Property="Foreground"
                    Value="Blue" />
            <Setter Property="TextDecorations"
                    Value="Underline" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver"
                         Value="true">
                    <Setter Property="Foreground"
                            Value="Red" />
                </Trigger>
                <Trigger Property="IsEnabled"
                         Value="false">
                    <Setter Property="Foreground"
                            Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                </Trigger>
                <Trigger Property="IsEnabled"
                         Value="true">
                    <Setter Property="Cursor"
                            Value="Hand" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="RichTextBoxStyle1"
               TargetType="{x:Type RichTextBox}"
               BasedOn="{StaticResource {x:Type TextBoxBase}}">
            <Setter Property="MinWidth"
                    Value="10" />
        </Style>
        <Style x:Key="myComboBoxItemStyle"
               TargetType="{x:Type ComboBoxItem}">
            <Setter Property="HorizontalContentAlignment"
                    Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="VerticalContentAlignment"
                    Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="Padding"
                    Value="0" />
            <Setter Property="Background"
                    Value="#02FFFFFF" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="Bd"
                                SnapsToDevicePixels="true"
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                Background="#02B64141">
                            <ToggleButton x:Name="tgbtnColor"
                                          ToolTip="{Binding Name}"
                                          Background="{Binding Name}"
                                          BorderBrush="{Binding Name}"
                                          IsChecked="{TemplateBinding IsSelected}"
                                          Click="tgbtnColor_Click" />
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger SourceName="tgbtnColor"
                                     Property="IsChecked"
                                     Value="True">
                                <Setter Property="IsSelected"
                                        Value="True" />
                            </Trigger>
                            <Trigger SourceName="tgbtnColor"
                                     Property="IsChecked"
                                     Value="False">
                                <Setter Property="IsSelected"
                                        Value="False" />
                            </Trigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>

                </Setter.Value>
            </Setter>
            <Setter Property="Width"
                    Value="20" />
            <Setter Property="Height"
                    Value="20" />
            <Setter Property="Content"
                    Value="" />


        </Style>
        <Style x:Key="ComboBoxColorStyle"
               TargetType="{x:Type ComboBox}">
            <Setter Property="FocusVisualStyle"
                    Value="{StaticResource ComboBoxFocusVisual}" />
            <Setter Property="Foreground"
                    Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
            <Setter Property="Background"
                    Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
            <Setter Property="BorderBrush"
                    Value="{StaticResource ListBorder}" />
            <Setter Property="BorderThickness"
                    Value="1" />
            <Setter Property="Padding"
                    Value="1" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                    Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                    Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll"
                    Value="true" />
            <Setter Property="ScrollViewer.PanningMode"
                    Value="Both" />
            <Setter Property="Stylus.IsFlicksEnabled"
                    Value="False" />
            <Setter Property="VerticalContentAlignment"
                    Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid SnapsToDevicePixels="true" Background="#00000000">
                            <Border  x:Name="Bd"
                        		BorderBrush="{TemplateBinding BorderBrush}"
                        		BorderThickness="{TemplateBinding BorderThickness}"
                        		Background="{TemplateBinding Background}"
                        		Padding="1">
                        		<Grid Grid.IsSharedSizeScope="true">
                        			<Grid.ColumnDefinitions>
                        				<ColumnDefinition Width="1" />
                        				<ColumnDefinition Width="*" />
                        				<ColumnDefinition SharedSizeGroup="ComboBoxButton"
                        					Width="Auto" />
                        			</Grid.ColumnDefinitions>
                        			<Border x:Name="SelectedItemBorder"
                        				Grid.ColumnSpan="2"
                        				Margin="{TemplateBinding Padding}" />
                        			<ContentPresenter Visibility="Collapsed"
                        				ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                        				ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                        				Content="{TemplateBinding SelectionBoxItem}"
                        				Grid.Column="1"
                        				ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                        				HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        				Margin="{TemplateBinding Padding}"
                        				SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                        				VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        			<ToggleButton Grid.ColumnSpan="3"
                        				IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                        				Style="{DynamicResource ComboBoxTransparentButtonStyle}" />
                        			<Rectangle Fill="{Binding SelectionBoxItem.Name, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ComboBox}}}"
                        				Grid.Column="1" StrokeThickness="0.25" VerticalAlignment="Bottom" MinWidth="20" Margin="1,0,1,1" Stroke="#FF919191" Width="20" Height="4" />
                        			<TextBlock Grid.Column="1" HorizontalAlignment="Center" TextWrapping="Wrap" Text="A" d:LayoutOverrides="Height" VerticalAlignment="Top" FontWeight="Bold" FontSize="14.667"/>
                        		</Grid>
                        	</Border>
                        	<Popup x:Name="PART_Popup"
                        		AllowsTransparency="true"
                        		Focusable="false"
                        		IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                        		PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                        		Placement="Bottom">
                        		<Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw"
                        			Color="Transparent"
                        			MaxHeight="{TemplateBinding MaxDropDownHeight}"
                        			MinWidth="{TemplateBinding ActualWidth}">
                        			<Border x:Name="DropDownBorder"
                        				BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                        				BorderThickness="1"
                        				Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                        				<ScrollViewer x:Name="DropDownScrollViewer">
                        					<Grid RenderOptions.ClearTypeHint="Enabled">
                        						<Canvas HorizontalAlignment="Left"
                        							Height="0"
                        							VerticalAlignment="Top"
                        							Width="0">
                        							<Rectangle x:Name="OpaqueRect"
                        								Fill="{Binding Background, ElementName=DropDownBorder}"
                        								Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                        								Width="{Binding ActualWidth, ElementName=DropDownBorder}" />
                        						</Canvas>
                        						<ItemsPresenter x:Name="ItemsPresenter"
                        							KeyboardNavigation.DirectionalNavigation="Contained"
                        							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        					</Grid>
                        				</ScrollViewer>
                        			</Border>
                        		</Microsoft_Windows_Themes:SystemDropShadowChrome>
                        	</Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelectionBoxHighlighted"
                                               Value="true" />
                                    <Condition Property="IsDropDownOpen"
                                               Value="false" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                            </MultiTrigger>
                            <Trigger Property="IsSelectionBoxHighlighted"
                                     Value="true">
                                <Setter Property="Background"
                                        TargetName="SelectedItemBorder"
                                        Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            </Trigger>
                            <Trigger Property="HasDropShadow"
                                     SourceName="PART_Popup"
                                     Value="true">
                                <Setter Property="Margin"
                                        TargetName="Shdw"
                                        Value="0,0,5,5" />
                                <Setter Property="Color"
                                        TargetName="Shdw"
                                        Value="#71000000" />
                            </Trigger>
                            <Trigger Property="HasItems"
                                     Value="false">
                                <Setter Property="MinHeight"
                                        TargetName="DropDownBorder"
                                        Value="95" />
                            </Trigger>
                            <Trigger Property="IsEnabled"
                                     Value="false">
                                <Setter Property="Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                <Setter Property="Background"
                                        TargetName="Bd"
                                        Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsGrouping"
                                     Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll"
                                        Value="false" />
                            </Trigger>
                            <Trigger Property="ScrollViewer.CanContentScroll"
                                     SourceName="DropDownScrollViewer"
                                     Value="false">
                                <Setter Property="Canvas.Top"
                                        TargetName="OpaqueRect"
                                        Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                                <Setter Property="Canvas.Left"
                                        TargetName="OpaqueRect"
                                        Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsEditable"
                         Value="true">
                    <Setter Property="IsTabStop"
                            Value="false" />
                    <Setter Property="Padding"
                            Value="0,1" />
                    <Setter Property="Template"
                            Value="{StaticResource ComboBoxEditableTemplate}" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid HorizontalAlignment="{Binding HorizontalAlignment, ElementName=ucControl}"
          VerticalAlignment="{Binding VerticalAlignment, ElementName=ucControl}"
          MinWidth="{Binding MinWidth, ElementName=ucControl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
          MinHeight="{Binding MinHeight, ElementName=ucControl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
          MaxHeight="{Binding MaxHeight, ElementName=ucControl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
          MaxWidth="{Binding MaxWidth, ElementName=ucControl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
          Width="{Binding Width, ElementName=ucControl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
          Height="{Binding Height, ElementName=ucControl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
        <RichTextBox x:Name="rtContent"
                     BorderBrush="{Binding BorderBrush, ElementName=ucControl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     BorderThickness="{Binding BorderThickness, ElementName=ucControl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     Foreground="{Binding Foreground, ElementName=ucControl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     Background="{Binding Background, ElementName=ucControl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     IsReadOnly="{Binding IsReadOnly, ElementName=ucControl, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     HorizontalContentAlignment="Stretch"
                     VerticalContentAlignment="Stretch" />
        <Popup x:Name="popup"
               Placement="Mouse"
               PopupAnimation="Slide"
               VerticalAlignment="Center">
            <Border Margin="0"
                    MinWidth="200"
                    BorderThickness="{Binding ToolbarBorderThickness, ElementName=ucControl}"
                    BorderBrush="{Binding ToolbarBorderBrush, ElementName=ucControl}"
                    Background="{Binding ToolbarBackground, ElementName=ucControl}"
                    SnapsToDevicePixels="True"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Center">
            	<Border.Effect>
            		<DropShadowEffect/>
            	</Border.Effect>
                <WrapPanel Orientation="Horizontal"
                           VerticalAlignment="Center" Width="320">
                    <!-- Font family combo box  -->
                    <ComboBox x:Name="FontFamilyCombo"
                              Height="23"
                              Width="100"
                              Margin="5,2,0,2"
                              IsEditable="True"
                              d:LayoutOverrides="Height">
                        <ComboBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel Width="250" />
                            </ItemsPanelTemplate>
                        </ComboBox.ItemsPanel>
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding}"
                                           FontFamily="{Binding}"
                                           FontSize="15"
                                           Height="20" />
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>

                    <!-- Font size combo box -->
                    <ComboBox x:Name="FontSizeCombo"
                              Height="23"
                              Width="40"
                              Margin="5,2,5,2"
                              IsEditable="True"
                              d:LayoutOverrides="Height" />
                    <ComboBox x:Name="cbTextColor"
                              ItemContainerStyle="{DynamicResource myComboBoxItemStyle}"
                              MaxDropDownHeight="341.333333333333"
                              HorizontalContentAlignment="Center"
                              Style="{DynamicResource ComboBoxColorStyle}"
                              Height="23">

                        <ComboBox.ItemsPanel>
                            <ItemsPanelTemplate>
                            	<WrapPanel Width="200" />
                            </ItemsPanelTemplate>
                        </ComboBox.ItemsPanel>

                    </ComboBox>

                    <Button Command="ApplicationCommands.Cut"
                            CommandTarget="{Binding ElementName=rtContent}"
                            ToolTip="Cut"
                            Height="22">
                        <Image Source="Images\editcut.png"
                               Stretch="None"
                               SnapsToDevicePixels="True" />
                    </Button>

                    <Button Command="ApplicationCommands.Copy"
                            CommandTarget="{Binding ElementName=rtContent}"
                            Template="{StaticResource FlatButtonControlTemplate}"
                            ToolTip="Copy"
                            Height="22">
                        <Image Source="Images\editcopy.png"
                               Stretch="None"
                               SnapsToDevicePixels="True" />
                    </Button>

                    <Button Command="ApplicationCommands.Paste"
                            CommandTarget="{Binding ElementName=rtContent}"
                            Template="{StaticResource FlatButtonControlTemplate}"
                            ToolTip="Paste"
                            Height="22">
                        <Image Source="Images\editpaste.png"
                               Stretch="None"
                               SnapsToDevicePixels="True" />
                    </Button>

                    <Button Command="ApplicationCommands.Undo"
                            CommandTarget="{Binding ElementName=rtContent}"
                            Template="{StaticResource FlatButtonControlTemplate}"
                            ToolTip="Undo"
                            Height="22">
                        <Image Source="Images\editundo.png"
                               Stretch="None"
                               SnapsToDevicePixels="True" />
                    </Button>

                    <Button Command="ApplicationCommands.Redo"
                            CommandTarget="{Binding ElementName=rtContent}"
                            Template="{StaticResource FlatButtonControlTemplate}"
                            ToolTip="Redo"
                            Height="22">
                        <Image Source="Images\editredo.png"
                               Stretch="None"
                               SnapsToDevicePixels="True" />
                    </Button>

                    <Image Source="Images\separator.png"
                           Stretch="None"
                           SnapsToDevicePixels="True"
                           Height="24" />

                    <ToggleButton x:Name="BoldButton"
                                  Command="EditingCommands.ToggleBold"
                                  CommandTarget="{Binding ElementName=rtContent}"
                                  Template="{StaticResource FlatToggleButtonControlTemplate}"
                                  ToolTip="Bold"
                                  Height="22">
                        <Image Source="Images\fontbold.png"
                               Stretch="None"
                               SnapsToDevicePixels="True" />
                    </ToggleButton>

                    <ToggleButton x:Name="ItalicButton"
                                  Command="EditingCommands.ToggleItalic"
                                  CommandTarget="{Binding ElementName=rtContent}"
                                  Template="{StaticResource FlatToggleButtonControlTemplate}"
                                  ToolTip="Italic"
                                  Height="22">
                        <Image Source="Images\fontitalic.png"
                               Stretch="None"
                               SnapsToDevicePixels="True" />
                    </ToggleButton>

                    <ToggleButton x:Name="UnderlineButton"
                                  Command="EditingCommands.ToggleUnderline"
                                  CommandTarget="{Binding ElementName=rtContent}"
                                  Template="{StaticResource FlatToggleButtonControlTemplate}"
                                  ToolTip="Underline"
                                  Height="22">
                        <Image Source="Images\fontunderline.png"
                               Stretch="None"
                               SnapsToDevicePixels="True" />
                    </ToggleButton>
                    <Image Source="Images\separator.png"
                           Stretch="None"
                           SnapsToDevicePixels="True"
                           Height="24" />

                    <Button x:Name="btnNormalText"
                            ToolTip="Format as normal (non-code) text"
                            Visibility="{Binding CodeControlsVisibility, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                            Template="{StaticResource FlatButtonControlTemplate}"
                            Height="22">
                        <Image Source="Images\normaltext.png"
                               Stretch="None"
                               SnapsToDevicePixels="True" />
                    </Button>

                    <Button x:Name="btnCodeBlock"
                            ToolTip="Format as code block"
                            Visibility="{Binding CodeControlsVisibility, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                            Template="{StaticResource FlatButtonControlTemplate}"
                            Height="22">
                        <Image Source="Images\codeblock.png"
                               Stretch="None"
                               SnapsToDevicePixels="True" />
                    </Button>

                    <Button x:Name="btnInlineCode"
                            ToolTip="Format as inline code"
                            Visibility="{Binding CodeControlsVisibility, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                            Template="{StaticResource FlatButtonControlTemplate}"
                            Height="22">
                        <Image Source="Images\codeinline.png"
                               Stretch="None"
                               SnapsToDevicePixels="True" />
                    </Button>

                    <Image Source="Images\separator.png"
                           Stretch="None"
                           SnapsToDevicePixels="True"
                           Visibility="{Binding CodeControlsVisibility, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                           Height="24" />

                    <ToggleButton x:Name="btnLeftButton"
                                  Click="OnAlignmentButtonClick"
                                  Command="EditingCommands.AlignLeft"
                                  CommandTarget="{Binding ElementName=rtContent}"
                                  Template="{StaticResource FlatToggleButtonControlTemplate}"
                                  ToolTip="Align Left"
                                  Height="22">
                        <Image Source="Images\alignleft.png"
                               Stretch="None"
                               SnapsToDevicePixels="True" />
                    </ToggleButton>

                    <ToggleButton x:Name="btnCenterButton"
                                  Click="OnAlignmentButtonClick"
                                  Command="EditingCommands.AlignCenter"
                                  CommandTarget="{Binding ElementName=rtContent}"
                                  Template="{StaticResource FlatToggleButtonControlTemplate}"
                                  ToolTip="Align Center"
                                  Height="22">
                        <Image Source="Images\aligncenter.png"
                               Stretch="None"
                               SnapsToDevicePixels="True" />
                    </ToggleButton>

                    <ToggleButton x:Name="btnRightButton"
                                  Click="OnAlignmentButtonClick"
                                  Command="EditingCommands.AlignRight"
                                  CommandTarget="{Binding ElementName=rtContent}"
                                  Template="{StaticResource FlatToggleButtonControlTemplate}"
                                  ToolTip="Align Right"
                                  Height="22">
                        <Image Source="Images\alignright.png"
                               Stretch="None"
                               SnapsToDevicePixels="True" />
                    </ToggleButton>

                    <ToggleButton x:Name="JustifyButton"
                                  Command="EditingCommands.AlignJustify"
                                  CommandTarget="{Binding ElementName=rtContent}"
                                  Template="{StaticResource FlatToggleButtonControlTemplate}"
                                  ToolTip="Align Justify"
                                  Height="22">
                        <Image Source="Images\alignjustify.png"
                               Stretch="None"
                               SnapsToDevicePixels="True" />
                    </ToggleButton>
                    <Image Source="Images\separator.png"
                           Stretch="None"
                           SnapsToDevicePixels="True"
                           Height="24" />

                    <ToggleButton x:Name="btnBulletsButton"
                                  Command="EditingCommands.ToggleBullets"
                                  CommandTarget="{Binding ElementName=rtContent}"
                                  Template="{StaticResource FlatToggleButtonControlTemplate}"
                                  ToolTip="Bullets"
                                  Height="22">
                        <Image Source="Images\listbullets.png"
                               Stretch="None"
                               SnapsToDevicePixels="True" />
                    </ToggleButton>

                    <ToggleButton x:Name="btnNumberingButton"
                                  Command="EditingCommands.ToggleNumbering"
                                  CommandTarget="{Binding ElementName=rtContent}"
                                  Template="{StaticResource FlatToggleButtonControlTemplate}"
                                  ToolTip="Numbering"
                                  Height="22">
                        <Image Source="Images\listnumbers.png"
                               Stretch="None"
                               SnapsToDevicePixels="True" />
                    </ToggleButton>

                    <Image Source="Images\separator.png"
                           Stretch="None"
                           Height="24" />

                    <Button Command="EditingCommands.IncreaseIndentation"
                            CommandTarget="{Binding ElementName=rtContent}"
                            Template="{StaticResource FlatButtonControlTemplate}"
                            ToolTip="Increase Indentation"
                            Height="22">
                        <Image Source="Images\indentincrease.png"
                               Stretch="None"
                               SnapsToDevicePixels="True" />
                    </Button>

                    <Button Command="EditingCommands.DecreaseIndentation"
                            CommandTarget="{Binding ElementName=rtContent}"
                            Template="{StaticResource FlatButtonControlTemplate}"
                            ToolTip="Decrease Indentation"
                            Height="22">
                        <Image Source="Images\indentdecrease.png"
                               Stretch="None"
                               SnapsToDevicePixels="True" />
                    </Button>

                </WrapPanel>
            </Border>
        </Popup>
    </Grid>
</UserControl>

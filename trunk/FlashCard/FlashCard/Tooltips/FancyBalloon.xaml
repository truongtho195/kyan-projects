<UserControl xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:tb="http://www.hardcodet.net/taskbar"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d"
             x:Class="FlashCard.FancyBalloon"
             xmlns:attachedCmd="clr-namespace:AttachedCommandBehavior;assembly=AttachedCommandBehavior"
             xmlns:richTextBoxControl="clr-namespace:RichTextBoxControl;assembly=RichTextBoxControl"
             xmlns:converter="clr-namespace:FlashCard.Converters"
             x:Name="me">
    <UserControl.Resources>
        <!--#Region Converters-->
        <converter:BooleanToVisibilityConverter x:Key="booleanToVisibilityConverter" />
        <converter:ValueToVisibilityConverter x:Key="valueToVisibilityConverter" />

        <!--#End Region-->
        <!--#region Storyboard-->
        <Storyboard x:Key="FadeIn">
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                           Storyboard.TargetName="Layout"
                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00"
                                      Value="0" />
                <SplineDoubleKeyFrame KeyTime="00:00:01"
                                      Value="0.95" />
                <SplineDoubleKeyFrame KeyTime="00:00:03"
                                      Value="0.95" />
                <!--				<SplineDoubleKeyFrame KeyTime="00:00:05" Value="0"/>-->
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="HighlightCloseButton" />
        <Storyboard x:Key="FadeCloseButton" />
        <Storyboard x:Key="FadeBack">
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                           Storyboard.TargetName="Layout"
                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00"
                                      Value="1" />
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000"
                                      Value="1" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="FadeOut"
                    Completed="OnFadeOutCompleted">
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                           Storyboard.TargetName="Layout"
                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00"
                                      Value="1" />
                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000"
                                      Value="0.2" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <SolidColorBrush x:Key="ListBorder"
                         Color="#828790" />
        <Storyboard x:Key="sbChangeToBack">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)"
                                           Storyboard.TargetName="grdFrame">
                <EasingDoubleKeyFrame KeyTime="0:0:0.5"
                                      Value="316" />
                <EasingDoubleKeyFrame KeyTime="0:0:1"
                                      Value="0" />
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)"
                                           Storyboard.TargetName="FrontSideWrapper">
                <EasingDoubleKeyFrame KeyTime="0:0:0.5"
                                      Value="316" />
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                           Storyboard.TargetName="FrontSideWrapper">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.5"
                                        Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                           Storyboard.TargetName="BackSideWrapper">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.5"
                                        Value="{x:Static Visibility.Visible}" />
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)"
                                           Storyboard.TargetName="BackSideWrapper">
                <EasingDoubleKeyFrame KeyTime="0:0:0.5"
                                      Value="316" />
                <EasingDoubleKeyFrame KeyTime="0:0:1"
                                      Value="0" />
            </DoubleAnimationUsingKeyFrames>
            <!--<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                           Storyboard.TargetName="grdListChoice">
                <EasingDoubleKeyFrame KeyTime="0:0:0.7"
                                      Value="1" />
            </DoubleAnimationUsingKeyFrames>
			-->
        </Storyboard>
        <DataTemplate x:Key="DataTemplate1">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <CheckBox Grid.Column="0"
                          Content="{Binding BackSideDetail}" />
            </Grid>
        </DataTemplate>
        <Storyboard x:Key="sbChangeToFront">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)"
                                           Storyboard.TargetName="grdFrame">
                <EasingDoubleKeyFrame KeyTime="0:0:0.5"
                                      Value="316" />
                <EasingDoubleKeyFrame KeyTime="0:0:1"
                                      Value="0" />
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)"
                                           Storyboard.TargetName="BackSideWrapper">
                <EasingDoubleKeyFrame KeyTime="0:0:0.5"
                                      Value="316" />
            </DoubleAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                           Storyboard.TargetName="BackSideWrapper">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.5"
                                        Value="{x:Static Visibility.Collapsed}" />
            </ObjectAnimationUsingKeyFrames>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                           Storyboard.TargetName="FrontSideWrapper">
                <DiscreteObjectKeyFrame KeyTime="0:0:0.5"
                                        Value="{x:Static Visibility.Visible}" />
            </ObjectAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)"
                                           Storyboard.TargetName="FrontSideWrapper">
                <EasingDoubleKeyFrame KeyTime="0:0:0.5"
                                      Value="316" />
                <EasingDoubleKeyFrame KeyTime="0:0:1"
                                      Value="0" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <!--#end region Storyboard-->

        <!--#Region DataTemplate-->
        <!--<attachedCmd:CommandBehaviorCollection.Behaviors>
            <attachedCmd:BehaviorBinding Event="MouseEnter"
                                         Command="{Binding FancyBallonMouseEnterCommand,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type UserControl}},Path=me}" />
            <attachedCmd:BehaviorBinding Event="MouseLeave"
                                         Command="{Binding FancyBallonMouseLeaveCommand,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type UserControl}},Path=me}" />
        </attachedCmd:CommandBehaviorCollection.Behaviors>-->



        <!--#Endregion DataTemplate-->
    </UserControl.Resources>
    <UserControl.Triggers>
        <EventTrigger RoutedEvent="tb:TaskbarIcon.BalloonShowing">
            <BeginStoryboard Storyboard="{StaticResource FadeIn}"
                             x:Name="FadeIn_BeginStoryboard" />
        </EventTrigger>
        <EventTrigger RoutedEvent="Mouse.MouseEnter">
            <StopStoryboard BeginStoryboardName="FadeIn_BeginStoryboard" />
            <BeginStoryboard x:Name="FadeBack_BeginStoryboard1"
                             Storyboard="{StaticResource FadeBack}" />
        </EventTrigger>
        <EventTrigger RoutedEvent="tb:TaskbarIcon.BalloonClosing">
            <BeginStoryboard Storyboard="{StaticResource FadeOut}"
                             x:Name="FadeOut_BeginStoryboard" />
        </EventTrigger>
        <!--<EventTrigger RoutedEvent="FrameworkElement.Loaded">
        	<BeginStoryboard Storyboard="{StaticResource sbChangeFace}"/>
        </EventTrigger>-->

        <!--<EventTrigger RoutedEvent="ButtonBase.Click"
                      SourceName="btnChangeFace">
            <BeginStoryboard Storyboard="{StaticResource sbChangeFace}" />
        </EventTrigger>-->


    </UserControl.Triggers>
    <Grid x:Name="Layout">
        <attachedCmd:CommandBehaviorCollection.Behaviors>
            <attachedCmd:BehaviorBinding Event="MouseEnter"
                                         Command="{Binding FancyBallonMouseEnterCommand}" />
            <attachedCmd:BehaviorBinding Event="MouseLeave"
                                         Command="{Binding FancyBallonMouseLeaveCommand}" />
        </attachedCmd:CommandBehaviorCollection.Behaviors>
        <Grid x:Name="grdFrame"
              RenderTransformOrigin="0.5,0.5">
            <Grid.RenderTransform>
                <TransformGroup>
                    <ScaleTransform />
                    <SkewTransform />
                    <RotateTransform />
                    <TranslateTransform />
                </TransformGroup>
            </Grid.RenderTransform>
            <Grid.RowDefinitions>
                <RowDefinition Height="34" />
                <RowDefinition />
                <RowDefinition Height="25" />
            </Grid.RowDefinitions>
            <Border x:Name="bdContent1"
                    HorizontalAlignment="Stretch"
                    BorderThickness="1,1,1,1"
                    BorderBrush="Gray"
                    Opacity="0.7"
                    Grid.RowSpan="3"
                    Background="{DynamicResource FlashCardBG}">
                <Border.Effect>
                    <DropShadowEffect Color="#FF747474" />
                </Border.Effect>
            </Border>
            <Border x:Name="bdHeader1"
                    BorderThickness="1"
                    Margin="5,0"
                    CornerRadius="0,0,5,5">
                <Border.Effect>
                    <DropShadowEffect BlurRadius="3"
                                      ShadowDepth="4"
                                      Opacity="0.5"
                                      Direction="292" />
                </Border.Effect>
                <Grid>
                    <StackPanel x:Name="stSystembutton"
                                Orientation="Horizontal"
                                VerticalAlignment="Center"
                                d:LayoutOverrides="Width"
                                HorizontalAlignment="Right"
                                Margin="0,0,5,0">
                        <Button x:Name="btnFullScreen"
                                Command="{Binding FullScreenCommand}"
                                CommandParameter="Popup"
                                Width="18"
                                Style="{DynamicResource NullButtonStyle}"
                                Background="#00000000"
                                BorderBrush="#00003C74"
                                Height="18"
                                Margin="0,0,5,0">
                            <Image Source="/FlashCard;component/Images/1337833571_full_screen.png"
                                   Stretch="Fill"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center" />
                        </Button>
                        <Button x:Name="btnHiddenPopup"
                                Command="{Binding HiddenPopupCommand}"
                                CommandParameter="Hidden"
                                Width="20"
                                Style="{DynamicResource NullButtonStyle}"
                                Background="#00000000"
                                BorderBrush="#00003C74"
                                Height="20"
                                Margin="5,0,0,0">
                            <Image Width="20"
                                   Source="/Images/Hidden.png"
                                   Stretch="Fill"
                                   ToolTip="Hide Balloon"
                                   x:Name="imgClose1"
                                   Height="20"
                                   d:LayoutOverrides="VerticalMargin" />
                        </Button>
                        <Button x:Name="btnClose"
                                Command="{Binding CancelCommand}"
                                CommandParameter="Popup"
                                Width="20"
                                Style="{DynamicResource EmptyButton}"
                                Margin="5,0,0,0"
                                Height="20">
                            <Image Width="18"
                                   Source="/Images/Close.png"
                                   Stretch="Fill"
                                   ToolTip="Close Balloon"
                                   Height="20"
                                   d:LayoutOverrides="VerticalMargin" />
                        </Button>
                    </StackPanel>
                    <Button x:Name="btnListen"
                            Command="{Binding ListenCommand}"
                            CommandParameter="Popup"
                            HorizontalAlignment="Left"
                            Margin="10,0,0,0"
                            Width="25"
                            VerticalAlignment="Center"
                            Style="{DynamicResource EmptyButton}"
                            Height="25">
                        <Image Source="/FlashCard;component/Images/1339695682_audio-volume-high.png"
                               Stretch="Fill"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center" />
                    </Button>
                </Grid>
            </Border>
            <TextBlock x:Name="tbInformation1"
                       HorizontalAlignment="Left"
                       TextWrapping="Wrap"
                       Text="{Binding SelectedLesson.TypeModel.Name}"
                       VerticalAlignment="Top"
                       Margin="15,10,0,0"
                       Foreground="#FFFDFDFD"
                       FontWeight="Bold"
                       Height="20"
                       Visibility="Collapsed" />
            <Grid x:Name="grdBottom"
                  Grid.Row="2">
                <Button x:Name="btnChangeFace"
                        Command="{Binding ChangeSideCommand}"
                        CommandParameter="Popup"
                        Content="Detail"
                        VerticalAlignment="Center"
                        Height="20"
                        BorderBrush="{x:Null}"
                        d:LayoutOverrides="GridBox"
                        HorizontalAlignment="Right"
                        Width="60"
                        Margin="0,0,5,0">
                    <Button.Background>
                        <LinearGradientBrush EndPoint="0.5,1"
                                             StartPoint="0.5,0">
                            <GradientStop Color="White"
                                          Offset="0" />
                            <GradientStop Color="White"
                                          Offset="0.9" />
                        </LinearGradientBrush>
                    </Button.Background>
                </Button>
                <StackPanel Visibility="{Binding SetupModel.IsEnableSlideShow,Mode=OneWay,Converter={StaticResource booleanToVisibilityConverter},ConverterParameter=False}"
                            HorizontalAlignment="Left"
                            Orientation="Horizontal"
                            d:LayoutOverrides="Height"
                            Margin="5,0,0,0">
                    <Button x:Name="btnBack"
                            Command="{Binding NextBackLessonCommand}"
                            CommandParameter="Back"
                            Content="Back"
                            Width="50" />
                    <Button x:Name="btnNext"
                            Command="{Binding NextBackLessonCommand}"
                            CommandParameter="Next"
                            Content="Next"
                            Width="50"
                            Margin="7,0,0,0" />
                </StackPanel>
            </Grid>
        </Grid>
        <Grid x:Name="FrontSideWrapper"
              MinHeight="150"
              MinWidth="300"
              RenderTransformOrigin="0.5,0.5"
              Visibility="Visible">
            <Grid.RenderTransform>
                <TransformGroup>
                    <ScaleTransform />
                    <SkewTransform />
                    <RotateTransform />
                    <TranslateTransform />
                </TransformGroup>
            </Grid.RenderTransform>
            <Grid.RowDefinitions>
                <RowDefinition Height="36" />
                <RowDefinition />
                <RowDefinition Height="28" />
            </Grid.RowDefinitions>
            <Grid x:Name="grdPhrase"
                  MinWidth="290"
                  MinHeight="25"
                  Visibility="{Binding SelectedLesson.TypeModel.TypeOf, ConverterParameter=1, Converter={StaticResource valueToVisibilityConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  Grid.Row="1"
                  Margin="5">

                <StackPanel d:LayoutOverrides="Width">
                    <TextBlock TextWrapping="Wrap"
                               VerticalAlignment="Center"
                               Text="{Binding SelectedLesson.LessonName}"
                               Foreground="White"
                               HorizontalAlignment="Center"
                               FontSize="21.333"
                               FontWeight="Bold" />
                    <richTextBoxControl:RichTextBoxToolbar x:Name="tbWords"
                                                           Document="{Binding SelectedLesson.Description,Mode=OneWay}"
                                                           Background="Transparent"
                                                           BorderBrush="Transparent"
                                                           HorizontalAlignment="Center"
                                                           VerticalAlignment="Center"
                                                           IsReadOnly="True"
                                                           Foreground="White"
                                                           FontSize="16"
                                                           MinHeight="25"
                                                           MinWidth="290"
                                                           Width="290" />
                </StackPanel>

            </Grid>
            <Grid x:Name="grdListChoice"
                  Visibility="{Binding SelectedLesson.TypeModel.TypeOf, ConverterParameter=2, Converter={StaticResource valueToVisibilityConverter}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                  Grid.Row="1"
                  RenderTransformOrigin="0.5,0.5"
                  d:IsHidden="True">
                <ListBox Margin="5,0"
                         Background="Transparent"
                         ItemsSource="{Binding SelectedLesson.BackSideCollection}"
                         ItemTemplate="{DynamicResource DataTemplate1}" />
            </Grid>
        </Grid>
        <Grid x:Name="BackSideWrapper"
              MinWidth="300"
              MinHeight="150"
              RenderTransformOrigin="0.5,0.5"
              Visibility="Collapsed">
            <Grid.RenderTransform>
                <TransformGroup>
                    <ScaleTransform />
                    <SkewTransform />
                    <RotateTransform />
                    <TranslateTransform />
                </TransformGroup>
            </Grid.RenderTransform>
            <Grid.RowDefinitions>
                <RowDefinition Height="36" />
                <RowDefinition />
                <RowDefinition Height="27" />
            </Grid.RowDefinitions>
            <richTextBoxControl:RichTextBoxToolbar x:Name="tblWordBackSide"
                                                   Document="{Binding SelectedLesson.BackSideModel.BackSideDetail}"
                                                   Background="Transparent"
                                                   BorderBrush="Transparent"
                                                   IsReadOnly="True"
                                                   HorizontalAlignment="Center"
                                                   VerticalAlignment="Center"
                                                   Foreground="White"
                                                   MinWidth="290"
                                                   MinHeight="50"
                                                   Margin="5"
                                                   Grid.Row="1"
                                                   Width="290" />


        </Grid>
    </Grid>


</UserControl>

<r:RibbonWindow x:Class="CPC.POS.MainWindow"
                xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                xmlns:c="clr-namespace:CPC.Toolkit.Command"
                xmlns:close="clr-namespace:CPC.Toolkit.Behavior"
                xmlns:control="clr-namespace:Xceed.Wpf.Toolkit;assembly=WPFToolkit.Extended"
                xmlns:converter="clr-namespace:CPC.Converter"
                xmlns:cpcControl="clr-namespace:CPC.Control"
                xmlns:CPCToolkitExt_OtherControl="clr-namespace:CPCToolkitExt.OtherControl;assembly=CPCToolkitExt"
                xmlns:Custom="http://schemas.microsoft.com/winfx/2006/xaml/presentation/shell"
                xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing"
                xmlns:helper="clr-namespace:CPC.Helper"
                xmlns:local="clr-namespace:CPC.POS"
                xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                xmlns:Microsoft_Windows_Controls_Ribbon_Primitives="clr-namespace:Microsoft.Windows.Controls.Ribbon.Primitives;assembly=RibbonControlsLibrary"
                xmlns:r="clr-namespace:Microsoft.Windows.Controls.Ribbon;assembly=RibbonControlsLibrary"
                xmlns:Service="clr-namespace:CPC.Service"
                xmlns:System="clr-namespace:System;assembly=mscorlib"
                xmlns:textBoxControl="clr-namespace:CPCToolkitExt.TextBoxControl;assembly=CPCToolkitExt"
                xmlns:themeClassic="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic"
                xmlns:themeLuna="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Luna"
                x:Name="Window"
                Title="Truong Giang - Smart POS"
                Width="1024"
                Height="768"
                MinWidth="800"
                MinHeight="600"
                Background="{DynamicResource MainForm_Background}"
                Icon="/POS.ico"
                Service:DialogService.IsRegisteredView="True"
                WindowStartupLocation="CenterScreen"
                WindowState="Maximized"
                mc:Ignorable="d">
    <r:RibbonWindow.Resources>
        <!--  region Converter  -->
        <converter:PermissionGroupConverter x:Key="permissionGroupConverter" />
        <converter:PermissionConverter x:Key="permissionConverter" />
        <converter:ListToCollapsedConverter x:Key="listToCollapsedConverter" />
        <converter:BoolToVisibilityConverter x:Key="boolToVisibilityConverter" />
        <converter:BoolToVisibilityConverter x:Key="CollapsedWhenFalseConverter"
                                             FalseToVisibility="Collapsed" />
        <converter:BoolToVisibilityConverter x:Key="VisibleWhenFalseConverter"
                                             FalseToVisibility="Visible" />
        <converter:EnumToBooleanConverter x:Key="enumToBooleanConverter" />
        <converter:RibbonImageConverter x:Key="ribbonImageConverter" />
        <!--  endregion Converter  -->
        <!--  ComboBoxItemStyle  -->
        <Style x:Key="ComboBoxItemStyle"
               TargetType="{x:Type ComboBoxItem}">
            <Setter Property="Background"
                    Value="{DynamicResource TitleBarBackground}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="Bd"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="true">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter Grid.ColumnSpan="2"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <Button x:Name="btnClose"
                                        Command="{Binding DataContext.CloseViewCommand, ElementName=Window}"
                                        CommandParameter="{Binding}"
                                        Grid.Column="1"
                                        Width="20"
                                        Height="20"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Center"
                                        Cursor="Hand"
                                        Style="{DynamicResource ButtonMiniClose}">
                                    <Grid x:Name="grdClose">
                                        <Path Width="14"
                                              Height="14"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              Data="M5.75,0.25 L9.25,0.25 9.25,5.7499999 14.75,5.7499999 14.75,9.25 9.25,9.25 9.25,14.75 5.75,14.75 5.75,9.25 0.25,9.25 0.25,5.7499999 5.75,5.7499999 z"
                                              Fill="{DynamicResource TitleBar_ButtonClose_Arrow}"
                                              RenderTransformOrigin="0.5,0.5"
                                              Stretch="Fill"
                                              StrokeThickness="0.5">
                                            <Path.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform ScaleX="1"
                                                                    ScaleY="1" />
                                                    <SkewTransform AngleX="0"
                                                                   AngleY="0" />
                                                    <RotateTransform Angle="-45" />
                                                    <TranslateTransform X="0"
                                                                        Y="0" />
                                                </TransformGroup>
                                            </Path.RenderTransform>
                                        </Path>
                                    </Grid>
                                </Button>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted"
                                     Value="true">
                                <Setter TargetName="Bd"
                                        Property="Background"
                                        Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                <Setter Property="Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsEnabled"
                                     Value="false">
                                <Setter Property="Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="HorizontalContentAlignment"
                    Value="Left" />
            <Setter Property="FontWeight"
                    Value="Bold" />
            <Setter Property="Margin"
                    Value="3,0,3,3" />
            <Setter Property="Height"
                    Value="32" />
        </Style>
        <!--  ComboBoxTransparentButtonStyle  -->
        <Style x:Key="ComboBoxTransparentButtonStyle"
               TargetType="{x:Type ToggleButton}">
            <Setter Property="Cursor"
                    Value="Hand" />
            <Setter Property="Background"
                    Value="Transparent" />
            <Setter Property="Focusable"
                    Value="false" />
            <Setter Property="ClickMode"
                    Value="Press" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid Background="{TemplateBinding Background}"
                              SnapsToDevicePixels="true">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto"
                                                  SharedSizeGroup="ComboBoxButton" />
                            </Grid.ColumnDefinitions>
                            <Border Grid.Column="3"
                                    Width="16"
                                    Height="16"
                                    Background="{DynamicResource ComboboxToggleButtonBackground}"
                                    BorderBrush="{DynamicResource TextBoxCanlendarComboboxBorderBrush}"
                                    BorderThickness="0"
                                    d:IsHidden="True"
                                    Visibility="Collapsed" />
                            <StackPanel Grid.Column="1"
                                        Orientation="Horizontal">
                                <Rectangle Width="15"
                                           Height="15"
                                           Fill="{DynamicResource OverflowWindow}"
                                           StrokeThickness="0" />
                                <ed:RegularPolygon x:Name="regularPolygon"
                                                   Width="7"
                                                   Height="5"
                                                   Margin="5,0"
                                                   Fill="{DynamicResource ComboboxToggleButtonArrowBackground}"
                                                   InnerRadius="1"
                                                   PointCount="3"
                                                   RenderTransformOrigin="0.5,0.5"
                                                   Stretch="Fill"
                                                   StrokeThickness="0">
                                    <ed:RegularPolygon.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform Angle="180" />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </ed:RegularPolygon.RenderTransform>
                                </ed:RegularPolygon>
                            </StackPanel>
                            <themeLuna:ScrollChrome x:Name="Chrome"
                                                    Grid.Column="1"
                                                    Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                                    HasOuterBorder="false"
                                                    Opacity="0"
                                                    Padding="1,0,0,0"
                                                    RenderMouseOver="{TemplateBinding IsMouseOver}"
                                                    RenderPressed="{TemplateBinding IsChecked}"
                                                    ThemeColor="NormalColor"
                                                    themeLuna:ScrollChrome.ScrollGlyph="DownArrow" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked"
                                     Value="True" />
                            <Trigger Property="IsMouseOver"
                                     Value="True">
                                <Setter TargetName="regularPolygon"
                                        Property="Opacity"
                                        Value="0.9" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--  ComboBox Opened Over Control List Style  -->
        <Style x:Key="ComboBoxStyle"
               TargetType="{x:Type ComboBox}">
            <Setter Property="Foreground"
                    Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
            <Setter Property="Background"
                    Value="{x:Null}" />
            <Setter Property="Padding"
                    Value="1" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                    Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                    Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll"
                    Value="true" />
            <Setter Property="ScrollViewer.PanningMode"
                    Value="Both" />
            <Setter Property="Stylus.IsFlicksEnabled"
                    Value="False" />
            <Setter Property="VerticalContentAlignment"
                    Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid SnapsToDevicePixels="true">
                            <Border x:Name="Bd"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}">
                                <ToggleButton IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                              Style="{StaticResource ComboBoxTransparentButtonStyle}" />
                            </Border>
                            <Popup x:Name="PART_Popup"
                                   Width="215"
                                   AllowsTransparency="true"
                                   d:IsHidden="True"
                                   Focusable="false"
                                   HorizontalOffset="-190"
                                   IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                   Placement="Top"
                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                                   VerticalOffset="-4">
                                <themeClassic:SystemDropShadowChrome x:Name="Shdw"
                                                                     MinWidth="{TemplateBinding ActualWidth}"
                                                                     MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                                     Color="Transparent">
                                    <Border x:Name="DropDownBorder"
                                            Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                                            BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}">
                                        <ScrollViewer x:Name="DropDownScrollViewer">
                                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                                <Canvas>
                                                    <Rectangle x:Name="OpaqueRect"
                                                               Width="{Binding ActualWidth, ElementName=DropDownBorder}"
                                                               Height="{Binding ActualHeight, ElementName=DropDownBorder}"
                                                               Fill="{Binding Background, ElementName=DropDownBorder}" />
                                                </Canvas>
                                                <ItemsPresenter x:Name="ItemsPresenter"
                                                                KeyboardNavigation.DirectionalNavigation="Contained"
                                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                            </Grid>
                                        </ScrollViewer>
                                    </Border>
                                </themeClassic:SystemDropShadowChrome>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelectionBoxHighlighted"
                                               Value="true" />
                                    <Condition Property="IsDropDownOpen"
                                               Value="false" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                            </MultiTrigger>
                            <Trigger Property="IsSelectionBoxHighlighted"
                                     Value="true" />
                            <Trigger SourceName="PART_Popup"
                                     Property="HasDropShadow"
                                     Value="true">
                                <Setter TargetName="Shdw"
                                        Property="Margin"
                                        Value="0,0,5,5" />
                                <Setter TargetName="Shdw"
                                        Property="Color"
                                        Value="#71000000" />
                            </Trigger>
                            <Trigger Property="HasItems"
                                     Value="false">
                                <Setter TargetName="DropDownBorder"
                                        Property="MinHeight"
                                        Value="95" />
                            </Trigger>
                            <Trigger Property="IsEnabled"
                                     Value="false">
                                <Setter Property="Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                <Setter TargetName="Bd"
                                        Property="Background"
                                        Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                            </Trigger>
                            <Trigger Property="IsGrouping"
                                     Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll"
                                        Value="false" />
                            </Trigger>
                            <Trigger SourceName="DropDownScrollViewer"
                                     Property="ScrollViewer.CanContentScroll"
                                     Value="false">
                                <Setter TargetName="OpaqueRect"
                                        Property="Canvas.Top"
                                        Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                                <Setter TargetName="OpaqueRect"
                                        Property="Canvas.Left"
                                        Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="BorderThickness"
                    Value="0" />
            <Setter Property="FontSize"
                    Value="12" />
            <Style.Triggers>
                <Trigger Property="IsEditable"
                         Value="true">
                    <Setter Property="IsTabStop"
                            Value="false" />
                    <Setter Property="Padding"
                            Value="0,1" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--  region RibbonGroup  -->
        <Style TargetType="{x:Type r:RibbonGroup}">
            <Setter Property="Margin"
                    Value="1" />
            <Setter Property="Padding"
                    Value="3,0" />
            <Setter Property="FocusVisualStyle"
                    Value="{x:Null}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type r:RibbonGroup}">
                        <Border x:Name="GroupBorder"
                                Margin="1,2,0,0"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{DynamicResource RibbonGroupBorder}">
                            <Grid x:Name="MainGrid">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto"
                                                   MinHeight="16" />
                                </Grid.RowDefinitions>
                                <Border x:Name="PART_HotBackground"
                                        Grid.RowSpan="3"
                                        Background="{TemplateBinding MouseOverBackground}"
                                        BorderBrush="{TemplateBinding MouseOverBorderBrush}"
                                        BorderThickness="1"
                                        CornerRadius="2"
                                        Opacity="0"
                                        SnapsToDevicePixels="True" />
                                <Border x:Name="SeparatorBorder"
                                        Grid.RowSpan="3"
                                        Grid.Column="0"
                                        VerticalAlignment="Stretch"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        CornerRadius="3"
                                        SnapsToDevicePixels="True" />
                                <Border Margin="2,1,2,0"
                                        Padding="3,0">
                                    <Grid>
                                        <ItemsPresenter x:Name="ItemsPresenter" />
                                        <ContentControl x:Name="TemplateContentControl"
                                                        Focusable="False"
                                                        Visibility="Collapsed" />
                                    </Grid>
                                </Border>
                                <Border x:Name="LabelSeparatorBorder"
                                        Grid.Row="1"
                                        Height="1"
                                        Margin="5,1,5,-1" />
                                <Border Grid.Row="2"
                                        Margin="1,0,1,1"
                                        Background="{DynamicResource RibbonGroupBackground}"
                                        CornerRadius="0,0,3,3">
                                    <ContentPresenter x:Name="PART_Header"
                                                      MaxHeight="16"
                                                      Margin="2,0"
                                                      HorizontalAlignment="Center"
                                                      VerticalAlignment="Center"
                                                      Content="{TemplateBinding Header}"
                                                      ContentSource="Header"
                                                      ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                                      ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                      TextElement.Foreground="{DynamicResource RibbonGroupForeground}" />
                                </Border>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled"
                                     Value="False">
                                <Setter TargetName="MainGrid"
                                        Property="TextElement.Foreground"
                                        Value="#FF9E9E9E" />
                            </Trigger>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.2"
                                                         Storyboard.TargetName="PART_HotBackground"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0.4"
                                                         Storyboard.TargetName="PART_HotBackground"
                                                         Storyboard.TargetProperty="Opacity"
                                                         To="0" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                               Value="False" />
                                    <Condition Binding="{Binding HighContrast}"
                                               Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="MainGrid"
                                        Property="TextElement.Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Background"
                    Value="Transparent" />
            <Setter Property="BorderBrush"
                    Value="{Binding Ribbon.BorderBrush, RelativeSource={RelativeSource Self}}" />
            <Setter Property="MouseOverBackground">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0.5"
                                         EndPoint="1,0.5">
                        <GradientStop Offset="0"
                                      Color="#01FFFFFF" />
                        <GradientStop Offset="0.5"
                                      Color="#80FFFFFF" />
                        <GradientStop Offset="1"
                                      Color="#01FFFFFF" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="MouseOverBorderBrush"
                    Value="Transparent" />
            <Setter Property="ToolTipService.InitialShowDelay"
                    Value="900" />
            <Setter Property="ToolTipService.ShowDuration"
                    Value="20000" />
            <Setter Property="ToolTipService.BetweenShowDelay"
                    Value="0" />
            <Style.Triggers>
                <Trigger Property="IsCollapsed"
                         Value="True">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type r:RibbonGroup}">
                                <Grid x:Name="MainGrid">
                                    <r:RibbonToggleButton x:Name="PART_ToggleButton"
                                                          Margin="0,3,0,0"
                                                          Background="{TemplateBinding Background}"
                                                          Content="{TemplateBinding Header}"
                                                          ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                                          ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                          LargeImageSource="{TemplateBinding LargeImageSource}"
                                                          SmallImageSource="{TemplateBinding SmallImageSource}">
                                        <r:RibbonToggleButton.Style>
                                            <Style TargetType="{x:Type r:RibbonToggleButton}">
                                                <Setter Property="Focusable"
                                                        Value="True" />
                                                <Setter Property="BorderBrush"
                                                        Value="{Binding BorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type r:RibbonGroup}}}" />
                                                <Setter Property="MouseOverBorderBrush"
                                                        Value="Transparent" />
                                                <Setter Property="MouseOverBackground"
                                                        Value="#40FFFFFF" />
                                                <Setter Property="FocusedBackground"
                                                        Value="{Binding Ribbon.FocusedBackground, RelativeSource={RelativeSource Self}}" />
                                                <Setter Property="FocusedBorderBrush"
                                                        Value="Transparent" />
                                                <Setter Property="CheckedBackground"
                                                        Value="Transparent" />
                                                <Setter Property="CheckedBorderBrush"
                                                        Value="Transparent" />
                                                <Setter Property="ClickMode"
                                                        Value="Press" />
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type r:RibbonToggleButton}">
                                                            <ControlTemplate.Resources>
                                                                <DataTemplate x:Key="{DataTemplateKey DataType={x:Type System:String}}"
                                                                              DataType="{x:Type System:String}">
                                                                    <r:RibbonTwoLineText Margin="2,4,2,0"
                                                                                         VerticalAlignment="Top"
                                                                                         LineHeight="13"
                                                                                         LineStackingStrategy="BlockLineHeight"
                                                                                         PathFill="{TemplateBinding TextElement.Foreground}"
                                                                                         r:RibbonTwoLineText.HasTwoLines="{TemplateBinding r:RibbonTwoLineText.HasTwoLines}"
                                                                                         r:RibbonTwoLineText.PathData="{TemplateBinding r:RibbonTwoLineText.PathData}"
                                                                                         Text="{Binding}"
                                                                                         TextAlignment="Center" />
                                                                </DataTemplate>
                                                            </ControlTemplate.Resources>
                                                            <Grid x:Name="MainGrid"
                                                                  SnapsToDevicePixels="True">
                                                                <Border x:Name="ButtonInnerBorder"
                                                                        Margin="1"
                                                                        BorderBrush="#FFEAF1FB"
                                                                        BorderThickness="1"
                                                                        CornerRadius="2" />
                                                                <Border x:Name="ButtonOuterBorder"
                                                                        Background="{TemplateBinding Background}"
                                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                                        BorderThickness="1"
                                                                        CornerRadius="2" />
                                                                <Border x:Name="PART_HotBackground"
                                                                        Background="{TemplateBinding MouseOverBackground}"
                                                                        BorderBrush="{TemplateBinding MouseOverBorderBrush}"
                                                                        BorderThickness="1"
                                                                        CornerRadius="2"
                                                                        Opacity="0" />
                                                                <Grid Margin="2">
                                                                    <Grid.RowDefinitions>
                                                                        <RowDefinition Height="Auto" />
                                                                        <RowDefinition />
                                                                    </Grid.RowDefinitions>
                                                                    <Border x:Name="ImageOuterBorder"
                                                                            Grid.Row="0">
                                                                        <Border x:Name="ImageMiddleBorder"
                                                                                Width="32"
                                                                                Height="32"
                                                                                Margin="3"
                                                                                HorizontalAlignment="Center"
                                                                                VerticalAlignment="Top"
                                                                                BorderBrush="#FFAEBECF"
                                                                                BorderThickness="0"
                                                                                CornerRadius="3">
                                                                            <Grid>
                                                                                <Border x:Name="ImageInnerBorder"
                                                                                        BorderBrush="#FFFCFCFC"
                                                                                        BorderThickness="0"
                                                                                        CornerRadius="3" />
                                                                                <Image x:Name="GroupImage"
                                                                                       Width="32"
                                                                                       Height="32"
                                                                                       HorizontalAlignment="Center"
                                                                                       VerticalAlignment="Center"
                                                                                       RenderOptions.BitmapScalingMode="NearestNeighbor"
                                                                                       Source="{TemplateBinding LargeImageSource}" />
                                                                            </Grid>
                                                                        </Border>
                                                                    </Border>
                                                                    <Border x:Name="LabelBorder"
                                                                            Grid.Row="1"
                                                                            Grid.RowSpan="2">
                                                                        <Border.Background>
                                                                            <RadialGradientBrush Center="0.5,0.5"
                                                                                                 GradientOrigin="0.5,1"
                                                                                                 RadiusX="1"
                                                                                                 RadiusY="0.5">
                                                                                <GradientStop Offset="0"
                                                                                              Color="#30FFFFFF" />
                                                                                <GradientStop Offset="1"
                                                                                              Color="#08808080" />
                                                                            </RadialGradientBrush>
                                                                        </Border.Background>
                                                                        <ContentPresenter Content="{TemplateBinding Content}"
                                                                                          ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                                          r:RibbonTwoLineText.HasTwoLines="True"
                                                                                          r:RibbonTwoLineText.PathData="M0,0L2.5,3 5,0z" />
                                                                    </Border>
                                                                </Grid>
                                                            </Grid>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="LargeImageSource"
                                                                         Value="{x:Null}">
                                                                    <Setter TargetName="GroupImage"
                                                                            Property="Source"
                                                                            Value="{Binding SmallImageSource, RelativeSource={RelativeSource TemplatedParent}}" />
                                                                    <Setter TargetName="GroupImage"
                                                                            Property="Width"
                                                                            Value="16" />
                                                                    <Setter TargetName="GroupImage"
                                                                            Property="Height"
                                                                            Value="16" />
                                                                    <Setter TargetName="ImageMiddleBorder"
                                                                            Property="BorderThickness"
                                                                            Value="1" />
                                                                    <Setter TargetName="ImageMiddleBorder"
                                                                            Property="Background">
                                                                        <Setter.Value>
                                                                            <LinearGradientBrush StartPoint="0,0"
                                                                                                 EndPoint="0,1">
                                                                                <GradientStop Offset="0"
                                                                                              Color="#88FFFFFF" />
                                                                                <GradientStop Offset="1"
                                                                                              Color="#88DBE7F4" />
                                                                            </LinearGradientBrush>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter TargetName="ImageInnerBorder"
                                                                            Property="BorderThickness"
                                                                            Value="1" />
                                                                    <Setter TargetName="ImageInnerBorder"
                                                                            Property="Background"
                                                                            Value="#50FFFFFF" />
                                                                </Trigger>
                                                                <Trigger Property="IsEnabled"
                                                                         Value="False">
                                                                    <Setter TargetName="GroupImage"
                                                                            Property="Opacity"
                                                                            Value="0.5" />
                                                                    <Setter TargetName="MainGrid"
                                                                            Property="TextElement.Foreground"
                                                                            Value="#FF9E9E9E" />
                                                                </Trigger>
                                                                <DataTrigger Binding="{Binding HighContrast}"
                                                                             Value="True">
                                                                    <Setter TargetName="MainGrid"
                                                                            Property="TextElement.Foreground"
                                                                            Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
                                                                    <Setter TargetName="ImageMiddleBorder"
                                                                            Property="Background"
                                                                            Value="Transparent" />
                                                                    <Setter TargetName="ImageMiddleBorder"
                                                                            Property="BorderThickness"
                                                                            Value="0" />
                                                                    <Setter TargetName="ImageInnerBorder"
                                                                            Property="Background"
                                                                            Value="Transparent" />
                                                                    <Setter TargetName="ImageInnerBorder"
                                                                            Property="BorderThickness"
                                                                            Value="0" />
                                                                    <Setter TargetName="PART_HotBackground"
                                                                            Property="Background"
                                                                            Value="Transparent" />
                                                                    <Setter TargetName="LabelBorder"
                                                                            Property="Background"
                                                                            Value="Transparent" />
                                                                    <Setter TargetName="ButtonOuterBorder"
                                                                            Property="Background"
                                                                            Value="Transparent" />
                                                                    <Setter TargetName="ButtonOuterBorder"
                                                                            Property="BorderBrush"
                                                                            Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
                                                                    <Setter TargetName="ButtonOuterBorder"
                                                                            Property="CornerRadius"
                                                                            Value="0" />
                                                                    <Setter TargetName="ButtonInnerBorder"
                                                                            Property="CornerRadius"
                                                                            Value="0" />
                                                                    <Setter TargetName="ButtonInnerBorder"
                                                                            Property="BorderThickness"
                                                                            Value="0,1,0,0" />
                                                                </DataTrigger>
                                                                <MultiDataTrigger>
                                                                    <MultiDataTrigger.Conditions>
                                                                        <Condition Binding="{Binding HighContrast}"
                                                                                   Value="True" />
                                                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                                                                                   Value="True" />
                                                                    </MultiDataTrigger.Conditions>
                                                                    <Setter TargetName="ButtonInnerBorder"
                                                                            Property="Background"
                                                                            Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                                                    <Setter TargetName="ButtonInnerBorder"
                                                                            Property="BorderThickness"
                                                                            Value="1" />
                                                                    <Setter TargetName="MainGrid"
                                                                            Property="TextElement.Foreground"
                                                                            Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                                                </MultiDataTrigger>
                                                                <MultiDataTrigger>
                                                                    <MultiDataTrigger.Conditions>
                                                                        <Condition Binding="{Binding HighContrast}"
                                                                                   Value="True" />
                                                                        <Condition Binding="{Binding IsKeyboardFocused, RelativeSource={RelativeSource Self}}"
                                                                                   Value="True" />
                                                                    </MultiDataTrigger.Conditions>
                                                                    <Setter TargetName="ButtonInnerBorder"
                                                                            Property="Background"
                                                                            Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                                                    <Setter TargetName="ButtonInnerBorder"
                                                                            Property="BorderThickness"
                                                                            Value="1" />
                                                                    <Setter TargetName="MainGrid"
                                                                            Property="TextElement.Foreground"
                                                                            Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                                                </MultiDataTrigger>
                                                                <MultiDataTrigger>
                                                                    <MultiDataTrigger.Conditions>
                                                                        <Condition Binding="{Binding HighContrast}"
                                                                                   Value="True" />
                                                                        <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}"
                                                                                   Value="True" />
                                                                    </MultiDataTrigger.Conditions>
                                                                    <Setter TargetName="ButtonOuterBorder"
                                                                            Property="Background"
                                                                            Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                                                    <Setter TargetName="MainGrid"
                                                                            Property="TextElement.Foreground"
                                                                            Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                                                </MultiDataTrigger>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsMouseOver"
                                                                                   Value="True" />
                                                                        <Condition Property="IsChecked"
                                                                                   Value="False" />
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter TargetName="PART_HotBackground"
                                                                            Property="Opacity"
                                                                            Value="1" />
                                                                </MultiTrigger>
                                                                <MultiDataTrigger>
                                                                    <MultiDataTrigger.Conditions>
                                                                        <Condition Binding="{Binding HighContrast}"
                                                                                   Value="False" />
                                                                        <Condition Binding="{Binding IsKeyboardFocused, RelativeSource={RelativeSource Self}}"
                                                                                   Value="True" />
                                                                        <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}"
                                                                                   Value="False" />
                                                                    </MultiDataTrigger.Conditions>
                                                                    <Setter TargetName="PART_HotBackground"
                                                                            Property="Opacity"
                                                                            Value="1" />
                                                                    <Setter TargetName="PART_HotBackground"
                                                                            Property="Background"
                                                                            Value="{Binding FocusedBackground, RelativeSource={RelativeSource TemplatedParent}}" />
                                                                    <Setter TargetName="PART_HotBackground"
                                                                            Property="BorderBrush"
                                                                            Value="{Binding FocusedBorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                                                                </MultiDataTrigger>
                                                                <MultiDataTrigger>
                                                                    <MultiDataTrigger.Conditions>
                                                                        <Condition Binding="{Binding HighContrast}"
                                                                                   Value="False" />
                                                                        <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}"
                                                                                   Value="True" />
                                                                    </MultiDataTrigger.Conditions>
                                                                    <Setter TargetName="PART_HotBackground"
                                                                            Property="Opacity"
                                                                            Value="1" />
                                                                    <Setter TargetName="PART_HotBackground"
                                                                            Property="Background"
                                                                            Value="{Binding CheckedBackground, RelativeSource={RelativeSource TemplatedParent}}" />
                                                                    <Setter TargetName="PART_HotBackground"
                                                                            Property="BorderBrush"
                                                                            Value="{Binding CheckedBorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                                                                    <Setter TargetName="ImageOuterBorder"
                                                                            Property="Background"
                                                                            Value="#20BBBBBB" />
                                                                    <Setter TargetName="LabelBorder"
                                                                            Property="Background">
                                                                        <Setter.Value>
                                                                            <RadialGradientBrush Center="0.5,1"
                                                                                                 GradientOrigin="0.5,0.95"
                                                                                                 RadiusX="0.9"
                                                                                                 RadiusY="0.5">
                                                                                <GradientStop Offset="0"
                                                                                              Color="#AAFFFFFF" />
                                                                                <GradientStop Offset="1"
                                                                                              Color="#40BBBBBB" />
                                                                            </RadialGradientBrush>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </MultiDataTrigger>
                                                                <MultiDataTrigger>
                                                                    <MultiDataTrigger.Conditions>
                                                                        <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                                                                   Value="False" />
                                                                        <Condition Binding="{Binding HighContrast}"
                                                                                   Value="True" />
                                                                    </MultiDataTrigger.Conditions>
                                                                    <Setter TargetName="MainGrid"
                                                                            Property="TextElement.Foreground"
                                                                            Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                                                </MultiDataTrigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </r:RibbonToggleButton.Style>
                                    </r:RibbonToggleButton>
                                    <Popup x:Name="PART_Popup"
                                           AllowsTransparency="True"
                                           Focusable="False"
                                           IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                           Placement="Bottom"
                                           PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                        <themeClassic:SystemDropShadowChrome x:Name="Shdw"
                                                                             CornerRadius="2"
                                                                             Focusable="True"
                                                                             FocusVisualStyle="{x:Null}"
                                                                             KeyTipService.IsKeyTipScope="True"
                                                                             RenderOptions.ClearTypeHint="Enabled"
                                                                             SnapsToDevicePixels="True"
                                                                             Color="Transparent">
                                            <Grid x:Name="PopupGrid"
                                                  Height="{TemplateBinding ActualHeight}"
                                                  Margin="0,1.5,0,0">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="*" />
                                                    <RowDefinition Height="Auto"
                                                                   MinHeight="16" />
                                                </Grid.RowDefinitions>
                                                <Border x:Name="PopupBorder"
                                                        Grid.RowSpan="2"
                                                        Background="{TemplateBinding Background}"
                                                        BorderBrush="{Binding Ribbon.BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                                                        BorderThickness="1" />
                                                <Border x:Name="PART_HotBackground"
                                                        Grid.RowSpan="2"
                                                        Background="{TemplateBinding MouseOverBackground}"
                                                        BorderBrush="{TemplateBinding MouseOverBorderBrush}"
                                                        BorderThickness="1"
                                                        CornerRadius="2"
                                                        Opacity="0"
                                                        SnapsToDevicePixels="True" />
                                                <Border x:Name="PART_RibbonControlsHostBorder"
                                                        Margin="2,3.5,2,0"
                                                        Padding="3,0">
                                                    <Grid>
                                                        <ItemsPresenter x:Name="ItemsPresenter"
                                                                        Grid.IsSharedSizeScope="True"
                                                                        KeyboardNavigation.DirectionalNavigation="Cycle"
                                                                        KeyboardNavigation.TabNavigation="Cycle"
                                                                        SnapsToDevicePixels="True" />
                                                        <ContentControl x:Name="TemplateContentControl"
                                                                        Focusable="False"
                                                                        Visibility="Collapsed" />
                                                    </Grid>
                                                </Border>
                                                <Grid Grid.Row="1"
                                                      Margin="2,0,2,1">
                                                    <ContentPresenter x:Name="PART_Header"
                                                                      MaxHeight="15"
                                                                      Margin="2,0"
                                                                      HorizontalAlignment="Center"
                                                                      VerticalAlignment="Center"
                                                                      Content="{TemplateBinding Header}"
                                                                      ContentSource="Header"
                                                                      ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                                                      ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                                      TextElement.Foreground="#FF9E9E9E" />
                                                </Grid>
                                            </Grid>
                                        </themeClassic:SystemDropShadowChrome>
                                    </Popup>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding HighContrast}"
                                                       Value="False" />
                                            <Condition Binding="{Binding Background, RelativeSource={RelativeSource Self}}"
                                                       Value="Transparent" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="PopupBorder"
                                                Property="Background"
                                                Value="{Binding Ribbon.Background, RelativeSource={RelativeSource TemplatedParent}}" />
                                    </MultiDataTrigger>
                                    <Trigger Property="IsEnabled"
                                             Value="False">
                                        <Setter TargetName="MainGrid"
                                                Property="TextElement.Foreground"
                                                Value="#FF9E9E9E" />
                                    </Trigger>
                                    <DataTrigger Binding="{Binding HighContrast}"
                                                 Value="True">
                                        <Setter TargetName="MainGrid"
                                                Property="TextElement.Foreground"
                                                Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
                                        <Setter TargetName="PART_HotBackground"
                                                Property="Background"
                                                Value="Transparent" />
                                        <Setter TargetName="PART_Popup"
                                                Property="PopupAnimation"
                                                Value="None" />
                                        <Setter TargetName="PopupBorder"
                                                Property="BorderBrush"
                                                Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
                                        <Setter TargetName="PopupBorder"
                                                Property="Background"
                                                Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                        <Setter TargetName="Shdw"
                                                Property="CornerRadius"
                                                Value="0" />
                                    </DataTrigger>
                                    <Trigger SourceName="PART_Popup"
                                             Property="HasDropShadow"
                                             Value="True">
                                        <Setter TargetName="Shdw"
                                                Property="Margin"
                                                Value="0,0,5,5" />
                                        <Setter TargetName="Shdw"
                                                Property="Color"
                                                Value="#71000000" />
                                    </Trigger>
                                    <Trigger SourceName="PART_Popup"
                                             Property="IsOpen"
                                             Value="False">
                                        <Setter TargetName="PART_Popup"
                                                Property="PopupAnimation"
                                                Value="None" />
                                    </Trigger>
                                    <EventTrigger RoutedEvent="Mouse.MouseEnter"
                                                  SourceName="Shdw">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.2"
                                                                 Storyboard.TargetName="PART_HotBackground"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="1" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                    <EventTrigger RoutedEvent="Mouse.MouseLeave"
                                                  SourceName="Shdw">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.4"
                                                                 Storyboard.TargetName="PART_HotBackground"
                                                                 Storyboard.TargetProperty="Opacity"
                                                                 To="0" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                    <Trigger Property="IsInQuickAccessToolBar"
                                             Value="True">
                                        <Setter TargetName="PopupGrid"
                                                Property="Height"
                                                Value="91" />
                                        <Setter TargetName="PART_ToggleButton"
                                                Property="Style">
                                            <Setter.Value>
                                                <Style TargetType="{x:Type r:RibbonToggleButton}">
                                                    <Setter Property="RenderOptions.BitmapScalingMode"
                                                            Value="NearestNeighbor" />
                                                    <Setter Property="Focusable"
                                                            Value="True" />
                                                    <Setter Property="BorderBrush"
                                                            Value="#80808080" />
                                                    <Setter Property="Background"
                                                            Value="#AAFFFFFF" />
                                                    <Setter Property="MouseOverBorderBrush"
                                                            Value="Transparent" />
                                                    <Setter Property="MouseOverBackground">
                                                        <Setter.Value>
                                                            <LinearGradientBrush StartPoint="0,0"
                                                                                 EndPoint="1,1">
                                                                <GradientStop Offset="0"
                                                                              Color="#80FFFFFF" />
                                                                <GradientStop Offset="0.5"
                                                                              Color="#60FFFFFF" />
                                                                <GradientStop Offset="1"
                                                                              Color="#40808080" />
                                                            </LinearGradientBrush>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="FocusedBackground"
                                                            Value="{Binding Ribbon.FocusedBackground, RelativeSource={RelativeSource Self}}" />
                                                    <Setter Property="FocusedBorderBrush"
                                                            Value="Transparent" />
                                                    <Setter Property="CheckedBackground">
                                                        <Setter.Value>
                                                            <LinearGradientBrush StartPoint="0,0"
                                                                                 EndPoint="1,1">
                                                                <GradientStop Offset="0"
                                                                              Color="#80808080" />
                                                                <GradientStop Offset="1"
                                                                              Color="#80FFFFFF" />
                                                            </LinearGradientBrush>
                                                        </Setter.Value>
                                                    </Setter>
                                                    <Setter Property="CheckedBorderBrush"
                                                            Value="Transparent" />
                                                    <Setter Property="Margin"
                                                            Value="0,-1,0,0" />
                                                    <Setter Property="ClickMode"
                                                            Value="Press" />
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type r:RibbonToggleButton}">
                                                                <Border x:Name="OuterBorder"
                                                                        Background="{TemplateBinding Background}"
                                                                        BorderBrush="{TemplateBinding BorderBrush}"
                                                                        BorderThickness="1"
                                                                        CornerRadius="3">
                                                                    <Grid>
                                                                        <Border x:Name="InnerBorder"
                                                                                Background="{TemplateBinding MouseOverBackground}"
                                                                                BorderBrush="{TemplateBinding MouseOverBorderBrush}"
                                                                                CornerRadius="3"
                                                                                Opacity="0" />
                                                                        <Image x:Name="GroupImage"
                                                                               Width="16"
                                                                               Height="16"
                                                                               Margin="3,2"
                                                                               HorizontalAlignment="Center"
                                                                               VerticalAlignment="Center"
                                                                               RenderOptions.BitmapScalingMode="{TemplateBinding RenderOptions.BitmapScalingMode}"
                                                                               Source="{TemplateBinding SmallImageSource}" />
                                                                    </Grid>
                                                                </Border>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsEnabled"
                                                                             Value="False">
                                                                        <Setter TargetName="GroupImage"
                                                                                Property="Opacity"
                                                                                Value="0.5" />
                                                                    </Trigger>
                                                                    <MultiDataTrigger>
                                                                        <MultiDataTrigger.Conditions>
                                                                            <Condition Binding="{Binding HighContrast}"
                                                                                       Value="False" />
                                                                            <Condition Binding="{Binding Background, RelativeSource={RelativeSource Self}}"
                                                                                       Value="Transparent" />
                                                                        </MultiDataTrigger.Conditions>
                                                                        <Setter TargetName="OuterBorder"
                                                                                Property="Background"
                                                                                Value="{Binding Ribbon.Background, RelativeSource={RelativeSource TemplatedParent}}" />
                                                                    </MultiDataTrigger>
                                                                    <MultiDataTrigger>
                                                                        <MultiDataTrigger.Conditions>
                                                                            <Condition Binding="{Binding HighContrast}"
                                                                                       Value="False" />
                                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                                                                                       Value="True" />
                                                                            <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}"
                                                                                       Value="False" />
                                                                        </MultiDataTrigger.Conditions>
                                                                        <Setter TargetName="InnerBorder"
                                                                                Property="Opacity"
                                                                                Value="1" />
                                                                        <Setter TargetName="OuterBorder"
                                                                                Property="Background"
                                                                                Value="Transparent" />
                                                                    </MultiDataTrigger>
                                                                    <MultiDataTrigger>
                                                                        <MultiDataTrigger.Conditions>
                                                                            <Condition Binding="{Binding HighContrast}"
                                                                                       Value="False" />
                                                                            <Condition Binding="{Binding IsKeyboardFocused, RelativeSource={RelativeSource Self}}"
                                                                                       Value="True" />
                                                                            <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}"
                                                                                       Value="False" />
                                                                        </MultiDataTrigger.Conditions>
                                                                        <Setter TargetName="InnerBorder"
                                                                                Property="Opacity"
                                                                                Value="1" />
                                                                        <Setter TargetName="InnerBorder"
                                                                                Property="Background"
                                                                                Value="{Binding FocusedBackground, RelativeSource={RelativeSource TemplatedParent}}" />
                                                                        <Setter TargetName="InnerBorder"
                                                                                Property="BorderBrush"
                                                                                Value="{Binding FocusedBorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                                                                        <Setter TargetName="OuterBorder"
                                                                                Property="Background"
                                                                                Value="Transparent" />
                                                                    </MultiDataTrigger>
                                                                    <MultiDataTrigger>
                                                                        <MultiDataTrigger.Conditions>
                                                                            <Condition Binding="{Binding HighContrast}"
                                                                                       Value="False" />
                                                                            <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}"
                                                                                       Value="True" />
                                                                        </MultiDataTrigger.Conditions>
                                                                        <Setter TargetName="InnerBorder"
                                                                                Property="Background"
                                                                                Value="{Binding CheckedBackground, RelativeSource={RelativeSource TemplatedParent}}" />
                                                                        <Setter TargetName="InnerBorder"
                                                                                Property="BorderBrush"
                                                                                Value="{Binding CheckedBorderBrush, RelativeSource={RelativeSource TemplatedParent}}" />
                                                                        <Setter TargetName="InnerBorder"
                                                                                Property="Opacity"
                                                                                Value="1" />
                                                                        <Setter TargetName="OuterBorder"
                                                                                Property="Background"
                                                                                Value="Transparent" />
                                                                        <Setter TargetName="OuterBorder"
                                                                                Property="BorderBrush"
                                                                                Value="#AA808080" />
                                                                    </MultiDataTrigger>
                                                                    <DataTrigger Binding="{Binding HighContrast}"
                                                                                 Value="True">
                                                                        <Setter TargetName="OuterBorder"
                                                                                Property="CornerRadius"
                                                                                Value="0" />
                                                                        <Setter TargetName="OuterBorder"
                                                                                Property="BorderBrush"
                                                                                Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                                                                        <Setter TargetName="OuterBorder"
                                                                                Property="Background"
                                                                                Value="Transparent" />
                                                                    </DataTrigger>
                                                                    <MultiDataTrigger>
                                                                        <MultiDataTrigger.Conditions>
                                                                            <Condition Binding="{Binding HighContrast}"
                                                                                       Value="True" />
                                                                            <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}"
                                                                                       Value="True" />
                                                                        </MultiDataTrigger.Conditions>
                                                                        <Setter TargetName="OuterBorder"
                                                                                Property="Background"
                                                                                Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                                                    </MultiDataTrigger>
                                                                    <MultiDataTrigger>
                                                                        <MultiDataTrigger.Conditions>
                                                                            <Condition Binding="{Binding HighContrast}"
                                                                                       Value="True" />
                                                                            <Condition Binding="{Binding IsKeyboardFocused, RelativeSource={RelativeSource Self}}"
                                                                                       Value="True" />
                                                                        </MultiDataTrigger.Conditions>
                                                                        <Setter TargetName="OuterBorder"
                                                                                Property="Background"
                                                                                Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                                                    </MultiDataTrigger>
                                                                    <MultiDataTrigger>
                                                                        <MultiDataTrigger.Conditions>
                                                                            <Condition Binding="{Binding HighContrast}"
                                                                                       Value="True" />
                                                                            <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}"
                                                                                       Value="True" />
                                                                        </MultiDataTrigger.Conditions>
                                                                        <Setter TargetName="OuterBorder"
                                                                                Property="Background"
                                                                                Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                                                        <Setter TargetName="OuterBorder"
                                                                                Property="BorderBrush"
                                                                                Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
                                                                    </MultiDataTrigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter TargetName="PART_ToggleButton"
                                                Property="Margin"
                                                Value="0" />
                                    </Trigger>
                                    <Trigger Property="IsDropDownOpen"
                                             Value="True">
                                        <Setter TargetName="MainGrid"
                                                Property="ToolTipService.IsEnabled"
                                                Value="False" />
                                    </Trigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}"
                                                       Value="False" />
                                            <Condition Binding="{Binding HighContrast}"
                                                       Value="True" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter TargetName="MainGrid"
                                                Property="TextElement.Foreground"
                                                Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                                    </MultiDataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--  endregion RibbonGroup  -->
        <Style x:Key="StatusBarItem"
               TargetType="{x:Type StatusBarItem}">
            <Setter Property="Padding"
                    Value="1" />
            <Setter Property="Background"
                    Value="Transparent" />
            <Setter Property="HorizontalContentAlignment"
                    Value="Left" />
            <Setter Property="VerticalContentAlignment"
                    Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type StatusBarItem}">
                        <Border BorderBrush="{DynamicResource Bottom_TitleBar_Border}"
                                BorderThickness="1,1,0,0">
                            <Border Width="Auto"
                                    Height="Auto"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{DynamicResource Bottom_TitleBar_Border2}"
                                    BorderThickness="0,0,1,1"
                                    SnapsToDevicePixels="true">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled"
                                     Value="false">
                                <Setter Property="Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="StatusBarItemTextBlock"
               TargetType="{x:Type TextBlock}">
            <Setter Property="TextWrapping"
                    Value="NoWrap" />
            <Setter Property="TextTrimming"
                    Value="None" />
            <Setter Property="FontSize"
                    Value="11" />
            <Setter Property="Foreground"
                    Value="{DynamicResource Bottom_TitleBar_Foreground}" />
            <Setter Property="FontFamily"
                    Value="Tahoma" />
        </Style>
        <!--  region RibbonApplicationMenuControlTemplate  -->
        <ControlTemplate x:Key="RibbonApplicationMenuControlTemplate"
                         TargetType="{x:Type r:RibbonApplicationMenu}">
            <Grid x:Name="OuterGrid"
                  Focusable="False"
                  SnapsToDevicePixels="True">
                <r:RibbonToggleButton x:Name="PART_ToggleButton"
                                      Width="36"
                                      Height="36"
                                      Background="{TemplateBinding Background}"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      BorderThickness="{TemplateBinding BorderThickness}"
                                      FocusVisualStyle="{TemplateBinding FocusVisualStyle}"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                      SmallImageSource="{TemplateBinding SmallImageSource}"
                                      ToolTipDescription="{TemplateBinding ToolTipDescription}"
                                      ToolTipFooterDescription="{TemplateBinding ToolTipFooterDescription}"
                                      ToolTipFooterImageSource="{TemplateBinding ToolTipFooterImageSource}"
                                      ToolTipFooterTitle="{TemplateBinding ToolTipFooterTitle}"
                                      ToolTipImageSource="{TemplateBinding ToolTipImageSource}"
                                      ToolTipTitle="{TemplateBinding ToolTipTitle}">
                    <r:RibbonToggleButton.Style>
                        <Style TargetType="{x:Type r:RibbonToggleButton}">
                            <Setter Property="BorderBrush"
                                    Value="#FF114EAF" />
                            <Setter Property="Background"
                                    Value="#FF114EAF" />
                            <Setter Property="BorderThickness"
                                    Value="1" />
                            <Setter Property="Foreground">
                                <Setter.Value>
                                    <RadialGradientBrush>
                                        <GradientStop Offset="0"
                                                      Color="LightGray" />
                                        <GradientStop Offset="0.4"
                                                      Color="White" />
                                    </RadialGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="ClickMode"
                                    Value="Press" />
                            <Setter Property="FocusVisualStyle"
                                    Value="{x:Null}" />
                            <Setter Property="FocusManager.IsFocusScope"
                                    Value="False" />
                            <Setter Property="VerticalAlignment"
                                    Value="Bottom" />
                            <Setter Property="ToolTipService.InitialShowDelay"
                                    Value="900" />
                            <Setter Property="ToolTipService.ShowDuration"
                                    Value="20000" />
                            <Setter Property="ToolTipService.BetweenShowDelay"
                                    Value="0" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type r:RibbonToggleButton}">
                                        <Grid Width="{Binding Width, RelativeSource={RelativeSource TemplatedParent}}"
                                              Height="{Binding Height, RelativeSource={RelativeSource TemplatedParent}}"
                                              SnapsToDevicePixels="True">
                                            <Border x:Name="OuterBorder"
                                                    HorizontalAlignment="Stretch"
                                                    VerticalAlignment="Stretch"
                                                    Background="{TemplateBinding Background}"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    CornerRadius="20" />
                                            <Border x:Name="MiddleBorder"
                                                    HorizontalAlignment="Stretch"
                                                    VerticalAlignment="Stretch"
                                                    BorderBrush="Transparent"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    CornerRadius="20">
                                                <Border.Background>
                                                    <LinearGradientBrush StartPoint="0,0"
                                                                         EndPoint="0,1">
                                                        <GradientStop Offset="0"
                                                                      Color="#90FFFFFF" />
                                                        <GradientStop Offset="0.5"
                                                                      Color="#30FFFFFF" />
                                                        <GradientStop Offset="0.5"
                                                                      Color="Transparent" />
                                                        <GradientStop Offset="1"
                                                                      Color="#70FFFFFF" />
                                                    </LinearGradientBrush>
                                                </Border.Background>
                                                <Border x:Name="InnerBorder"
                                                        Background="Transparent"
                                                        BorderThickness="1"
                                                        CornerRadius="20">
                                                    <Border.BorderBrush>
                                                        <LinearGradientBrush StartPoint="0,0"
                                                                             EndPoint="0,1">
                                                            <GradientStop Offset="0"
                                                                          Color="#60FFFFFF" />
                                                            <GradientStop Offset="0.5"
                                                                          Color="#20FFFFFF" />
                                                            <GradientStop Offset="0.5"
                                                                          Color="Transparent" />
                                                            <GradientStop Offset="1"
                                                                          Color="Transparent" />
                                                        </LinearGradientBrush>
                                                    </Border.BorderBrush>
                                                </Border>
                                            </Border>
                                            <StackPanel HorizontalAlignment="Center"
                                                        VerticalAlignment="Center"
                                                        Orientation="Horizontal">
                                                <Image Width="16"
                                                       Height="16"
                                                       Margin="0,-0.5,0,0"
                                                       HorizontalAlignment="Center"
                                                       VerticalAlignment="Center"
                                                       IsHitTestVisible="False"
                                                       RenderOptions.BitmapScalingMode="NearestNeighbor"
                                                       RenderOptions.EdgeMode="Aliased"
                                                       Source="/POS;component/POS.ico" />
                                                <Path x:Name="DownArrow"
                                                      Margin="3.5,0,0,0"
                                                      HorizontalAlignment="Center"
                                                      VerticalAlignment="Center"
                                                      Data="M0,0L2.25,3 4.5,0z"
                                                      Fill="{TemplateBinding Foreground}"
                                                      StrokeThickness="0.5"
                                                      Visibility="Collapsed">
                                                    <Path.RenderTransform>
                                                        <ScaleTransform ScaleX="1.5"
                                                                        ScaleY="1.5" />
                                                    </Path.RenderTransform>
                                                    <Path.Stroke>
                                                        <LinearGradientBrush StartPoint="0,0"
                                                                             EndPoint="0,1">
                                                            <GradientStop Offset="0"
                                                                          Color="#90FFFFFF" />
                                                            <GradientStop Offset="0.5"
                                                                          Color="#30FFFFFF" />
                                                            <GradientStop Offset="0.5"
                                                                          Color="Transparent" />
                                                            <GradientStop Offset="1"
                                                                          Color="#70FFFFFF" />
                                                        </LinearGradientBrush>
                                                    </Path.Stroke>
                                                </Path>
                                            </StackPanel>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsKeyboardFocused"
                                                               Value="True" />
                                                    <Condition Property="IsChecked"
                                                               Value="False" />
                                                </MultiTrigger.Conditions>
                                                <Setter TargetName="MiddleBorder"
                                                        Property="BorderBrush"
                                                        Value="#80FFFFFF" />
                                                <Setter TargetName="MiddleBorder"
                                                        Property="Background">
                                                    <Setter.Value>
                                                        <LinearGradientBrush StartPoint="0,0"
                                                                             EndPoint="0,1">
                                                            <GradientStop Offset="0"
                                                                          Color="#A0FFFFFF" />
                                                            <GradientStop Offset="0.5"
                                                                          Color="#60FFFFFF" />
                                                            <GradientStop Offset="0.5"
                                                                          Color="Transparent" />
                                                            <GradientStop Offset="1"
                                                                          Color="#D0FFFFFF" />
                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter TargetName="InnerBorder"
                                                        Property="BorderBrush">
                                                    <Setter.Value>
                                                        <LinearGradientBrush StartPoint="0,0"
                                                                             EndPoint="0,1">
                                                            <GradientStop Offset="0"
                                                                          Color="#90FFFFFF" />
                                                            <GradientStop Offset="0.5"
                                                                          Color="#20FFFFFF" />
                                                            <GradientStop Offset="0.5"
                                                                          Color="Transparent" />
                                                            <GradientStop Offset="1"
                                                                          Color="Transparent" />
                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>
                                            </MultiTrigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsMouseOver"
                                                               Value="True" />
                                                    <Condition Property="IsChecked"
                                                               Value="False" />
                                                </MultiTrigger.Conditions>
                                                <Setter TargetName="MiddleBorder"
                                                        Property="BorderBrush"
                                                        Value="#80FFFFFF" />
                                                <Setter TargetName="MiddleBorder"
                                                        Property="Background">
                                                    <Setter.Value>
                                                        <LinearGradientBrush StartPoint="0,0"
                                                                             EndPoint="0,1">
                                                            <GradientStop Offset="0"
                                                                          Color="#A0FFFFFF" />
                                                            <GradientStop Offset="0.5"
                                                                          Color="#60FFFFFF" />
                                                            <GradientStop Offset="0.5"
                                                                          Color="Transparent" />
                                                            <GradientStop Offset="1"
                                                                          Color="#D0FFFFFF" />
                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter TargetName="InnerBorder"
                                                        Property="BorderBrush">
                                                    <Setter.Value>
                                                        <LinearGradientBrush StartPoint="0,0"
                                                                             EndPoint="0,1">
                                                            <GradientStop Offset="0"
                                                                          Color="#90FFFFFF" />
                                                            <GradientStop Offset="0.5"
                                                                          Color="#20FFFFFF" />
                                                            <GradientStop Offset="0.5"
                                                                          Color="Transparent" />
                                                            <GradientStop Offset="1"
                                                                          Color="Transparent" />
                                                        </LinearGradientBrush>
                                                    </Setter.Value>
                                                </Setter>
                                            </MultiTrigger>
                                            <DataTrigger Binding="{Binding HighContrast}"
                                                         Value="True">
                                                <Setter TargetName="OuterBorder"
                                                        Property="BorderBrush"
                                                        Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                                                <Setter TargetName="OuterBorder"
                                                        Property="Background"
                                                        Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                                <Setter TargetName="OuterBorder"
                                                        Property="CornerRadius"
                                                        Value="0" />
                                                <Setter TargetName="MiddleBorder"
                                                        Property="BorderBrush"
                                                        Value="Transparent" />
                                                <Setter TargetName="MiddleBorder"
                                                        Property="Background"
                                                        Value="Transparent" />
                                                <Setter TargetName="MiddleBorder"
                                                        Property="CornerRadius"
                                                        Value="0" />
                                                <Setter TargetName="InnerBorder"
                                                        Property="BorderBrush"
                                                        Value="Transparent" />
                                                <Setter TargetName="InnerBorder"
                                                        Property="Background"
                                                        Value="Transparent" />
                                                <Setter TargetName="InnerBorder"
                                                        Property="CornerRadius"
                                                        Value="0" />
                                                <Setter TargetName="DownArrow"
                                                        Property="Stroke"
                                                        Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                                <Setter TargetName="DownArrow"
                                                        Property="Fill"
                                                        Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                                            </DataTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </r:RibbonToggleButton.Style>
                </r:RibbonToggleButton>
                <Border x:Name="CenterBorder"
                        Height="1"
                        Margin="-1,-1,0,0"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Top" />
                <Popup x:Name="PART_Popup"
                       AllowsTransparency="True"
                       IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                       SnapsToDevicePixels="True">
                    <themeClassic:SystemDropShadowChrome x:Name="Shadow"
                                                         KeyTipService.IsKeyTipScope="True"
                                                         RenderOptions.ClearTypeHint="Enabled"
                                                         Color="Transparent">
                        <Grid>
                            <Border x:Name="PopupBorder"
                                    Background="{Binding Ribbon.Background, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type r:RibbonMenuButton}}}"
                                    BorderBrush="{Binding Ribbon.BorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type r:RibbonMenuButton}}}"
                                    BorderThickness="1"
                                    CornerRadius="2">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="24" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Border x:Name="HeaderBorder"
                                            Background="Transparent"
                                            BorderBrush="{Binding Ribbon.BorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type r:RibbonMenuButton}}}"
                                            BorderThickness="0,0,0,1"
                                            CornerRadius="2,2,0,0" />
                                    <Border x:Name="HeaderOverlayBorder"
                                            BorderBrush="#80FFFFFF"
                                            BorderThickness="0,0,0,1"
                                            CornerRadius="2,2,0,0">
                                        <Border.Background>
                                            <LinearGradientBrush StartPoint="0,0"
                                                                 EndPoint="0,1">
                                                <GradientStop Offset="0"
                                                              Color="#A0FFFFFF" />
                                                <GradientStop Offset="0.5"
                                                              Color="#60FFFFFF" />
                                                <GradientStop Offset="0.5"
                                                              Color="Transparent" />
                                                <GradientStop Offset="1"
                                                              Color="#D0FFFFFF" />
                                            </LinearGradientBrush>
                                        </Border.Background>
                                    </Border>
                                    <Grid Grid.Row="1">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="2" />
                                            <ColumnDefinition Width="300" />
                                        </Grid.ColumnDefinitions>
                                        <Border x:Name="MainPaneBorder"
                                                Background="#B8FFFFFF">
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition />
                                                    <RowDefinition Height="Auto" />
                                                </Grid.RowDefinitions>
                                                <ScrollViewer x:Name="PART_SubMenuScrollViewer"
                                                              Grid.Row="1"
                                                              CanContentScroll="True"
                                                              Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                                    <Grid RenderOptions.ClearTypeHint="Enabled">
                                                        <Canvas x:Name="BackgroundCanvas"
                                                                Width="0"
                                                                Height="0"
                                                                HorizontalAlignment="Left"
                                                                VerticalAlignment="Top">
                                                            <Rectangle x:Name="OpaqueRect"
                                                                       Width="{Binding ActualWidth, ElementName=MainPaneBorder}"
                                                                       Height="{Binding ActualHeight, ElementName=MainPaneBorder}"
                                                                       Fill="{Binding Background, ElementName=MainPaneBorder}"
                                                                       RadiusX="2"
                                                                       RadiusY="2" />
                                                            <Rectangle x:Name="OverlayRect"
                                                                       Width="{Binding ActualWidth, ElementName=MainPaneBorder}"
                                                                       Height="{Binding ActualHeight, ElementName=MainPaneBorder}"
                                                                       Fill="{Binding Background, ElementName=MainPaneBorder}"
                                                                       RadiusX="2"
                                                                       RadiusY="2" />
                                                        </Canvas>
                                                        <ItemsPresenter x:Name="ItemsPresenter"
                                                                        Grid.IsSharedSizeScope="True" />
                                                    </Grid>
                                                </ScrollViewer>
                                                <Border x:Name="ResizeControl"
                                                        Grid.Row="2"
                                                        Background="#FFE5EFF9"
                                                        BorderBrush="{Binding Ribbon.BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                                                        BorderThickness="0,1,0,0"
                                                        Visibility="Collapsed">
                                                    <Thumb x:Name="PART_ResizeThumb">
                                                        <Thumb.Style>
                                                            <Style TargetType="{x:Type Thumb}">
                                                                <Setter Property="Width"
                                                                        Value="11" />
                                                                <Setter Property="Height"
                                                                        Value="11" />
                                                                <Setter Property="VerticalAlignment"
                                                                        Value="Bottom" />
                                                                <Setter Property="HorizontalAlignment"
                                                                        Value="Right" />
                                                                <Setter Property="Cursor"
                                                                        Value="SizeNWSE" />
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                                            <Border Background="Transparent">
                                                                                <Path Margin="0,0,2,2"
                                                                                      Data="M9,0L11,0 11,11 0,11 0,9 3,9 3,6 6,6 6,3 9,3z">
                                                                                    <Path.Fill>
                                                                                        <DrawingBrush TileMode="Tile"
                                                                                                      Viewbox="0,0,3,3"
                                                                                                      ViewboxUnits="Absolute"
                                                                                                      Viewport="0,0,3,3"
                                                                                                      ViewportUnits="Absolute">
                                                                                            <DrawingBrush.Drawing>
                                                                                                <DrawingGroup>
                                                                                                    <GeometryDrawing Brush="#FF6C747D"
                                                                                                                     Geometry="M0,0L2,0 2,2 0,2z" />
                                                                                                </DrawingGroup>
                                                                                            </DrawingBrush.Drawing>
                                                                                        </DrawingBrush>
                                                                                    </Path.Fill>
                                                                                </Path>
                                                                            </Border>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Style.Triggers>
                                                                    <Trigger Property="FlowDirection"
                                                                             Value="RightToLeft">
                                                                        <Setter Property="Cursor"
                                                                                Value="SizeNESW" />
                                                                    </Trigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Thumb.Style>
                                                    </Thumb>
                                                </Border>
                                            </Grid>
                                        </Border>
                                        <Border x:Name="PART_SubmenuPlaceholder"
                                                Grid.Column="2"
                                                Height="{Binding ActualHeight, ElementName=MainPaneBorder}"
                                                Background="#80FFFFFF">
                                            <ContentPresenter x:Name="PART_AuxiliaryPaneContentPresenter"
                                                              Content="{TemplateBinding AuxiliaryPaneContent}"
                                                              ContentSource="AuxiliaryPaneContent"
                                                              ContentTemplate="{TemplateBinding AuxiliaryPaneContentTemplate}" />
                                        </Border>
                                        <Border x:Name="VerticalBorder"
                                                Grid.Column="1"
                                                Width="2"
                                                HorizontalAlignment="Left"
                                                Background="White"
                                                BorderBrush="{Binding Ribbon.BorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type r:RibbonMenuButton}}}"
                                                BorderThickness="1,0,0,0" />
                                        <Border x:Name="VerticalOverlayBorder"
                                                Grid.Column="1"
                                                Width="2"
                                                HorizontalAlignment="Left"
                                                Background="Transparent"
                                                BorderBrush="#80FFFFFF"
                                                BorderThickness="1,0,0,0" />
                                    </Grid>
                                    <Border x:Name="FooterBorder"
                                            Grid.Row="2"
                                            Background="Transparent"
                                            BorderBrush="{Binding Ribbon.BorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type r:RibbonMenuButton}}}"
                                            BorderThickness="0,1,0,0"
                                            CornerRadius="0,0,2,2">
                                        <Border x:Name="FooterBackgroundOverlayBorder"
                                                BorderBrush="Transparent"
                                                CornerRadius="0,0,2,2">
                                            <Border.Background>
                                                <LinearGradientBrush StartPoint="0,0"
                                                                     EndPoint="0,1">
                                                    <GradientStop Offset="0"
                                                                  Color="#A0FFFFFF" />
                                                    <GradientStop Offset="0.2"
                                                                  Color="#90FFFFFF" />
                                                    <GradientStop Offset="0.4"
                                                                  Color="#80FFFFFF" />
                                                    <GradientStop Offset="0.6"
                                                                  Color="#50FFFFFF" />
                                                    <GradientStop Offset="0.8"
                                                                  Color="Transparent" />
                                                    <GradientStop Offset="1"
                                                                  Color="#30FFFFFF" />
                                                </LinearGradientBrush>
                                            </Border.Background>
                                            <ContentPresenter x:Name="PART_FooterPaneContentPresenter"
                                                              MinHeight="12"
                                                              Margin="2"
                                                              Content="{TemplateBinding FooterPaneContent}"
                                                              ContentSource="FooterPaneContent"
                                                              ContentTemplate="{TemplateBinding FooterPaneContentTemplate}" />
                                        </Border>
                                    </Border>
                                    <Border x:Name="FooterOverlayBorder"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            Background="Transparent"
                                            BorderBrush="#80FFFFFF"
                                            BorderThickness="0,1,0,0"
                                            CornerRadius="0,0,2,2" />
                                </Grid>
                            </Border>
                            <Canvas>
                                <r:RibbonToggleButton x:Name="PART_PopupToggleButton"
                                                      Canvas.Left="3"
                                                      Canvas.Top="-24"
                                                      Width="{Binding Width, RelativeSource={RelativeSource TemplatedParent}}"
                                                      Height="{Binding Height, RelativeSource={RelativeSource TemplatedParent}}"
                                                      AutomationProperties.Name="{Binding (AutomationProperties.Name), RelativeSource={RelativeSource TemplatedParent}}"
                                                      Background="{TemplateBinding Background}"
                                                      BorderBrush="{TemplateBinding BorderBrush}"
                                                      BorderThickness="{TemplateBinding BorderThickness}"
                                                      Focusable="False"
                                                      IsChecked="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
                                    <r:RibbonToggleButton.Style>
                                        <Style TargetType="{x:Type r:RibbonToggleButton}">
                                            <Setter Property="BorderBrush"
                                                    Value="#FF114EAF" />
                                            <Setter Property="Background"
                                                    Value="#FF114EAF" />
                                            <Setter Property="BorderThickness"
                                                    Value="1" />
                                            <Setter Property="Foreground">
                                                <Setter.Value>
                                                    <RadialGradientBrush>
                                                        <GradientStop Offset="0"
                                                                      Color="LightGray" />
                                                        <GradientStop Offset="0.4"
                                                                      Color="White" />
                                                    </RadialGradientBrush>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="ClickMode"
                                                    Value="Press" />
                                            <Setter Property="FocusVisualStyle"
                                                    Value="{x:Null}" />
                                            <Setter Property="FocusManager.IsFocusScope"
                                                    Value="False" />
                                            <Setter Property="VerticalAlignment"
                                                    Value="Bottom" />
                                            <Setter Property="ToolTipService.InitialShowDelay"
                                                    Value="900" />
                                            <Setter Property="ToolTipService.ShowDuration"
                                                    Value="20000" />
                                            <Setter Property="ToolTipService.BetweenShowDelay"
                                                    Value="0" />
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type r:RibbonToggleButton}">
                                                        <Grid Width="{Binding Width, RelativeSource={RelativeSource TemplatedParent}}"
                                                              Height="{Binding Height, RelativeSource={RelativeSource TemplatedParent}}"
                                                              SnapsToDevicePixels="True">
                                                            <Border x:Name="OuterBorder"
                                                                    HorizontalAlignment="Stretch"
                                                                    VerticalAlignment="Stretch"
                                                                    Background="{TemplateBinding Background}"
                                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                                    CornerRadius="0,2,0,0" />
                                                            <Border x:Name="MiddleBorder"
                                                                    HorizontalAlignment="Stretch"
                                                                    VerticalAlignment="Stretch"
                                                                    BorderBrush="Transparent"
                                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                                    CornerRadius="0,2,0,0">
                                                                <Border.Background>
                                                                    <LinearGradientBrush StartPoint="0,0"
                                                                                         EndPoint="0,1">
                                                                        <GradientStop Offset="0"
                                                                                      Color="#90FFFFFF" />
                                                                        <GradientStop Offset="0.5"
                                                                                      Color="#30FFFFFF" />
                                                                        <GradientStop Offset="0.5"
                                                                                      Color="Transparent" />
                                                                        <GradientStop Offset="1"
                                                                                      Color="#70FFFFFF" />
                                                                    </LinearGradientBrush>
                                                                </Border.Background>
                                                                <Border x:Name="InnerBorder"
                                                                        Background="Transparent"
                                                                        BorderThickness="1"
                                                                        CornerRadius="0,2,0,0">
                                                                    <Border.BorderBrush>
                                                                        <LinearGradientBrush StartPoint="0,0"
                                                                                             EndPoint="0,1">
                                                                            <GradientStop Offset="0"
                                                                                          Color="#60FFFFFF" />
                                                                            <GradientStop Offset="0.5"
                                                                                          Color="#20FFFFFF" />
                                                                            <GradientStop Offset="0.5"
                                                                                          Color="Transparent" />
                                                                            <GradientStop Offset="1"
                                                                                          Color="Transparent" />
                                                                        </LinearGradientBrush>
                                                                    </Border.BorderBrush>
                                                                </Border>
                                                            </Border>
                                                            <StackPanel HorizontalAlignment="Center"
                                                                        VerticalAlignment="Center"
                                                                        Orientation="Horizontal">
                                                                <Image Width="16"
                                                                       Height="16"
                                                                       Margin="0,-0.5,0,0"
                                                                       HorizontalAlignment="Center"
                                                                       VerticalAlignment="Center"
                                                                       IsHitTestVisible="False"
                                                                       RenderOptions.BitmapScalingMode="NearestNeighbor"
                                                                       RenderOptions.EdgeMode="Aliased"
                                                                       Source="{Binding SmallImageSource, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type r:RibbonApplicationMenu}}}" />
                                                                <Path x:Name="DownArrow"
                                                                      Margin="3.5,0,0,0"
                                                                      HorizontalAlignment="Center"
                                                                      VerticalAlignment="Center"
                                                                      Data="M0,0L2.25,3 4.5,0z"
                                                                      Fill="{TemplateBinding Foreground}"
                                                                      StrokeThickness="0.5">
                                                                    <Path.RenderTransform>
                                                                        <ScaleTransform ScaleX="1.5"
                                                                                        ScaleY="1.5" />
                                                                    </Path.RenderTransform>
                                                                    <Path.Stroke>
                                                                        <LinearGradientBrush StartPoint="0,0"
                                                                                             EndPoint="0,1">
                                                                            <GradientStop Offset="0"
                                                                                          Color="#90FFFFFF" />
                                                                            <GradientStop Offset="0.5"
                                                                                          Color="#30FFFFFF" />
                                                                            <GradientStop Offset="0.5"
                                                                                          Color="Transparent" />
                                                                            <GradientStop Offset="1"
                                                                                          Color="#70FFFFFF" />
                                                                        </LinearGradientBrush>
                                                                    </Path.Stroke>
                                                                </Path>
                                                            </StackPanel>
                                                        </Grid>
                                                        <ControlTemplate.Triggers>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsKeyboardFocused"
                                                                               Value="True" />
                                                                    <Condition Property="IsChecked"
                                                                               Value="False" />
                                                                </MultiTrigger.Conditions>
                                                                <Setter TargetName="MiddleBorder"
                                                                        Property="BorderBrush"
                                                                        Value="#80FFFFFF" />
                                                                <Setter TargetName="MiddleBorder"
                                                                        Property="Background">
                                                                    <Setter.Value>
                                                                        <LinearGradientBrush StartPoint="0,0"
                                                                                             EndPoint="0,1">
                                                                            <GradientStop Offset="0"
                                                                                          Color="#A0FFFFFF" />
                                                                            <GradientStop Offset="0.5"
                                                                                          Color="#60FFFFFF" />
                                                                            <GradientStop Offset="0.5"
                                                                                          Color="Transparent" />
                                                                            <GradientStop Offset="1"
                                                                                          Color="#D0FFFFFF" />
                                                                        </LinearGradientBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter TargetName="InnerBorder"
                                                                        Property="BorderBrush">
                                                                    <Setter.Value>
                                                                        <LinearGradientBrush StartPoint="0,0"
                                                                                             EndPoint="0,1">
                                                                            <GradientStop Offset="0"
                                                                                          Color="#90FFFFFF" />
                                                                            <GradientStop Offset="0.5"
                                                                                          Color="#20FFFFFF" />
                                                                            <GradientStop Offset="0.5"
                                                                                          Color="Transparent" />
                                                                            <GradientStop Offset="1"
                                                                                          Color="Transparent" />
                                                                        </LinearGradientBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </MultiTrigger>
                                                            <MultiTrigger>
                                                                <MultiTrigger.Conditions>
                                                                    <Condition Property="IsMouseOver"
                                                                               Value="True" />
                                                                    <Condition Property="IsChecked"
                                                                               Value="False" />
                                                                </MultiTrigger.Conditions>
                                                                <Setter TargetName="MiddleBorder"
                                                                        Property="BorderBrush"
                                                                        Value="#80FFFFFF" />
                                                                <Setter TargetName="MiddleBorder"
                                                                        Property="Background">
                                                                    <Setter.Value>
                                                                        <LinearGradientBrush StartPoint="0,0"
                                                                                             EndPoint="0,1">
                                                                            <GradientStop Offset="0"
                                                                                          Color="#A0FFFFFF" />
                                                                            <GradientStop Offset="0.5"
                                                                                          Color="#60FFFFFF" />
                                                                            <GradientStop Offset="0.5"
                                                                                          Color="Transparent" />
                                                                            <GradientStop Offset="1"
                                                                                          Color="#D0FFFFFF" />
                                                                        </LinearGradientBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Setter TargetName="InnerBorder"
                                                                        Property="BorderBrush">
                                                                    <Setter.Value>
                                                                        <LinearGradientBrush StartPoint="0,0"
                                                                                             EndPoint="0,1">
                                                                            <GradientStop Offset="0"
                                                                                          Color="#90FFFFFF" />
                                                                            <GradientStop Offset="0.5"
                                                                                          Color="#20FFFFFF" />
                                                                            <GradientStop Offset="0.5"
                                                                                          Color="Transparent" />
                                                                            <GradientStop Offset="1"
                                                                                          Color="Transparent" />
                                                                        </LinearGradientBrush>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </MultiTrigger>
                                                            <DataTrigger Binding="{Binding HighContrast}"
                                                                         Value="True">
                                                                <Setter TargetName="OuterBorder"
                                                                        Property="BorderBrush"
                                                                        Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                                                                <Setter TargetName="OuterBorder"
                                                                        Property="Background"
                                                                        Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                                                <Setter TargetName="OuterBorder"
                                                                        Property="CornerRadius"
                                                                        Value="0" />
                                                                <Setter TargetName="MiddleBorder"
                                                                        Property="BorderBrush"
                                                                        Value="Transparent" />
                                                                <Setter TargetName="MiddleBorder"
                                                                        Property="Background"
                                                                        Value="Transparent" />
                                                                <Setter TargetName="MiddleBorder"
                                                                        Property="CornerRadius"
                                                                        Value="0" />
                                                                <Setter TargetName="InnerBorder"
                                                                        Property="BorderBrush"
                                                                        Value="Transparent" />
                                                                <Setter TargetName="InnerBorder"
                                                                        Property="Background"
                                                                        Value="Transparent" />
                                                                <Setter TargetName="InnerBorder"
                                                                        Property="CornerRadius"
                                                                        Value="0" />
                                                                <Setter TargetName="DownArrow"
                                                                        Property="Stroke"
                                                                        Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                                                <Setter TargetName="DownArrow"
                                                                        Property="Fill"
                                                                        Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                                                            </DataTrigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </r:RibbonToggleButton.Style>
                                </r:RibbonToggleButton>
                            </Canvas>
                        </Grid>
                    </themeClassic:SystemDropShadowChrome>
                </Popup>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger SourceName="PART_SubMenuScrollViewer"
                         Property="CanContentScroll"
                         Value="False">
                    <Setter TargetName="OpaqueRect"
                            Property="Canvas.Top"
                            Value="{Binding VerticalOffset, ElementName=PART_SubMenuScrollViewer}" />
                    <Setter TargetName="OpaqueRect"
                            Property="Canvas.Left"
                            Value="{Binding HorizontalOffset, ElementName=PART_SubMenuScrollViewer}" />
                    <Setter TargetName="OverlayRect"
                            Property="Canvas.Top"
                            Value="{Binding VerticalOffset, ElementName=PART_SubMenuScrollViewer}" />
                    <Setter TargetName="OverlayRect"
                            Property="Canvas.Left"
                            Value="{Binding HorizontalOffset, ElementName=PART_SubMenuScrollViewer}" />
                </Trigger>
                <Trigger Property="HasGallery"
                         Value="True">
                    <Setter TargetName="PART_SubMenuScrollViewer"
                            Property="HorizontalScrollBarVisibility"
                            Value="Disabled" />
                    <Setter TargetName="PART_SubMenuScrollViewer"
                            Property="VerticalScrollBarVisibility"
                            Value="Disabled" />
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="CanUserResizeHorizontally"
                                   Value="True" />
                        <Condition Property="CanUserResizeVertically"
                                   Value="True" />
                    </MultiTrigger.Conditions>
                    <Setter TargetName="ResizeControl"
                            Property="Visibility"
                            Value="Visible" />
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="CanUserResizeHorizontally"
                                   Value="False" />
                        <Condition Property="CanUserResizeVertically"
                                   Value="True" />
                    </MultiTrigger.Conditions>
                    <Setter TargetName="ResizeControl"
                            Property="Visibility"
                            Value="Visible" />
                    <Setter TargetName="PART_ResizeThumb"
                            Property="Style">
                        <Setter.Value>
                            <Style TargetType="{x:Type Thumb}">
                                <Setter Property="Height"
                                        Value="11" />
                                <Setter Property="Cursor"
                                        Value="SizeNS" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                            <Border Background="Transparent">
                                                <Path Margin="0,0,2,2"
                                                      HorizontalAlignment="Center"
                                                      VerticalAlignment="Bottom">
                                                    <Path.Data>
                                                        <RectangleGeometry Rect="0,0,11,3" />
                                                    </Path.Data>
                                                    <Path.Fill>
                                                        <DrawingBrush TileMode="Tile"
                                                                      Viewbox="0,0,3,3"
                                                                      ViewboxUnits="Absolute"
                                                                      Viewport="0,0,3,3"
                                                                      ViewportUnits="Absolute">
                                                            <DrawingBrush.Drawing>
                                                                <DrawingGroup>
                                                                    <GeometryDrawing Brush="#FF6C747D"
                                                                                     Geometry="M0,0L2,0 2,2 0,2z" />
                                                                </DrawingGroup>
                                                            </DrawingBrush.Drawing>
                                                        </DrawingBrush>
                                                    </Path.Fill>
                                                </Path>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                </MultiTrigger>
                <Trigger Property="IsDropDownPositionedAbove"
                         Value="True">
                    <Setter TargetName="ResizeControl"
                            Property="Grid.Row"
                            Value="0" />
                    <Setter TargetName="ResizeControl"
                            Property="BorderThickness"
                            Value="0,0,0,1" />
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsDropDownPositionedAbove"
                                   Value="True" />
                        <Condition Property="CanUserResizeHorizontally"
                                   Value="True" />
                        <Condition Property="CanUserResizeVertically"
                                   Value="True" />
                    </MultiTrigger.Conditions>
                    <Setter TargetName="PART_ResizeThumb"
                            Property="Style">
                        <Setter.Value>
                            <Style TargetType="{x:Type Thumb}">
                                <Setter Property="Width"
                                        Value="11" />
                                <Setter Property="Height"
                                        Value="11" />
                                <Setter Property="VerticalAlignment"
                                        Value="Top" />
                                <Setter Property="HorizontalAlignment"
                                        Value="Right" />
                                <Setter Property="Cursor"
                                        Value="SizeNESW" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                            <Border Background="Transparent">
                                                <Path Margin="0,2,2,0"
                                                      Data="M0,0L0,3 3,3 3,6 6,6 6,9 9,9 9,11 11,11 11,0z">
                                                    <Path.Fill>
                                                        <DrawingBrush TileMode="Tile"
                                                                      Viewbox="0,0,3,3"
                                                                      ViewboxUnits="Absolute"
                                                                      Viewport="0,0,3,3"
                                                                      ViewportUnits="Absolute">
                                                            <DrawingBrush.Drawing>
                                                                <DrawingGroup>
                                                                    <GeometryDrawing Brush="#FF6C747D"
                                                                                     Geometry="M0,0L2,0 2,2 0,2z" />
                                                                </DrawingGroup>
                                                            </DrawingBrush.Drawing>
                                                        </DrawingBrush>
                                                    </Path.Fill>
                                                </Path>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="FlowDirection"
                                             Value="RightToLeft">
                                        <Setter Property="Cursor"
                                                Value="SizeNWSE" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Setter.Value>
                    </Setter>
                </MultiTrigger>
                <Trigger SourceName="PART_Popup"
                         Property="HasDropShadow"
                         Value="True">
                    <Setter TargetName="Shadow"
                            Property="Margin"
                            Value="0,0,5,5" />
                    <Setter TargetName="Shadow"
                            Property="Color"
                            Value="#71000000" />
                </Trigger>
                <Trigger SourceName="PART_Popup"
                         Property="IsOpen"
                         Value="False">
                    <Setter TargetName="PART_Popup"
                            Property="PopupAnimation"
                            Value="None" />
                </Trigger>
                <DataTrigger Binding="{Binding HighContrast}"
                             Value="True">
                    <Setter TargetName="BackgroundCanvas"
                            Property="Visibility"
                            Value="Collapsed" />
                    <Setter TargetName="PART_Popup"
                            Property="PopupAnimation"
                            Value="None" />
                    <Setter TargetName="Shadow"
                            Property="Color"
                            Value="Transparent" />
                    <Setter TargetName="OuterGrid"
                            Property="TextElement.Foreground"
                            Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                    <Setter TargetName="PopupBorder"
                            Property="BorderBrush"
                            Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                    <Setter TargetName="PopupBorder"
                            Property="Background"
                            Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                    <Setter TargetName="PopupBorder"
                            Property="CornerRadius"
                            Value="0" />
                    <Setter TargetName="HeaderBorder"
                            Property="BorderBrush"
                            Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                    <Setter TargetName="HeaderBorder"
                            Property="CornerRadius"
                            Value="0" />
                    <Setter TargetName="HeaderOverlayBorder"
                            Property="BorderBrush"
                            Value="Transparent" />
                    <Setter TargetName="HeaderOverlayBorder"
                            Property="Background"
                            Value="Transparent" />
                    <Setter TargetName="HeaderOverlayBorder"
                            Property="CornerRadius"
                            Value="0" />
                    <Setter TargetName="MainPaneBorder"
                            Property="Background"
                            Value="Transparent" />
                    <Setter TargetName="PART_SubmenuPlaceholder"
                            Property="Background"
                            Value="Transparent" />
                    <Setter TargetName="VerticalBorder"
                            Property="BorderBrush"
                            Value="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" />
                    <Setter TargetName="VerticalBorder"
                            Property="Background"
                            Value="Transparent" />
                    <Setter TargetName="VerticalOverlayBorder"
                            Property="BorderBrush"
                            Value="Transparent" />
                    <Setter TargetName="FooterBorder"
                            Property="BorderBrush"
                            Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                    <Setter TargetName="FooterBorder"
                            Property="CornerRadius"
                            Value="0" />
                    <Setter TargetName="FooterOverlayBorder"
                            Property="BorderBrush"
                            Value="Transparent" />
                    <Setter TargetName="FooterOverlayBorder"
                            Property="CornerRadius"
                            Value="0" />
                    <Setter TargetName="FooterBackgroundOverlayBorder"
                            Property="Background"
                            Value="Transparent" />
                    <Setter TargetName="FooterBackgroundOverlayBorder"
                            Property="CornerRadius"
                            Value="0" />
                    <Setter TargetName="ResizeControl"
                            Property="BorderBrush"
                            Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                    <Setter TargetName="ResizeControl"
                            Property="Background"
                            Value="{DynamicResource {x:Static SystemColors.MenuBrushKey}}" />
                </DataTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <!--  endregion RibbonApplicationMenuControlTemplate  -->
        <!--  region RibbonStyle  -->
        <Style x:Key="RibbonStyle"
               TargetType="{x:Type r:Ribbon}">
            <Style.Resources>
                <PopupAnimation x:Key="{x:Static SystemParameters.MenuPopupAnimationKey}">Fade</PopupAnimation>
            </Style.Resources>
            <Setter Property="HorizontalContentAlignment"
                    Value="Left" />
            <Setter Property="FocusVisualStyle"
                    Value="{x:Null}" />
            <Setter Property="Background"
                    Value="#FFDFE9F5" />
            <Setter Property="BorderBrush"
                    Value="#FFB9C9DA" />
            <Setter Property="MouseOverBorderBrush"
                    Value="#FFFFB700" />
            <Setter Property="MouseOverBackground">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0"
                                         EndPoint="0,1">
                        <GradientStop Offset="0"
                                      Color="#FFFEFBF4" />
                        <GradientStop Offset="0.19"
                                      Color="#FFFDE7CE" />
                        <GradientStop Offset="0.39"
                                      Color="#FFFDDEB8" />
                        <GradientStop Offset="0.39"
                                      Color="#FFFFCE6B" />
                        <GradientStop Offset="0.79"
                                      Color="#FFFFDE9A" />
                        <GradientStop Offset="1"
                                      Color="#FFFFEBAA" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="PressedBorderBrush"
                    Value="#FFC29B29" />
            <Setter Property="PressedBackground">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0"
                                         EndPoint="0,1">
                        <GradientStop Offset="0"
                                      Color="#FFE3C085" />
                        <GradientStop Offset="0.19"
                                      Color="#FFF4CC89" />
                        <GradientStop Offset="0.36"
                                      Color="#FFF5C777" />
                        <GradientStop Offset="0.36"
                                      Color="#FFF5BB56" />
                        <GradientStop Offset="0.79"
                                      Color="#FFF4CE9A" />
                        <GradientStop Offset="1"
                                      Color="#FFF3E28D" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="CheckedBorderBrush"
                    Value="#FFC29B29" />
            <Setter Property="CheckedBackground">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0"
                                         EndPoint="0,1">
                        <GradientStop Offset="0"
                                      Color="#FFFFDCA0" />
                        <GradientStop Offset="0.18"
                                      Color="#FFFFD692" />
                        <GradientStop Offset="0.39"
                                      Color="#FFFFC45D" />
                        <GradientStop Offset="1"
                                      Color="#FFFFD178" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="FocusedBorderBrush"
                    Value="#FFFFB700" />
            <Setter Property="FocusedBackground">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0"
                                         EndPoint="0,1">
                        <GradientStop Offset="0"
                                      Color="#FFFEFBF4" />
                        <GradientStop Offset="0.19"
                                      Color="#FFFDE7CE" />
                        <GradientStop Offset="0.39"
                                      Color="#FFFDDEB8" />
                        <GradientStop Offset="0.39"
                                      Color="#FFFFCE6B" />
                        <GradientStop Offset="0.79"
                                      Color="#FFFFDE9A" />
                        <GradientStop Offset="1"
                                      Color="#FFFFEBAA" />
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="FontSize"
                    Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}" />
            <Setter Property="FontStyle"
                    Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}" />
            <Setter Property="FontWeight"
                    Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}" />
            <Setter Property="FontFamily"
                    Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}" />
            <Setter Property="Foreground"
                    Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type r:Ribbon}">
                        <Grid SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Border x:Name="BackgroundBorder"
                                    Grid.Row="1"
                                    Grid.RowSpan="3"
                                    Grid.ColumnSpan="3"
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}" />
                            <Border Grid.Row="1"
                                    Grid.ColumnSpan="3">
                                <Popup x:Name="PART_ITEMSPRESENTERPOPUP"
                                       AllowsTransparency="True"
                                       IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                       PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                    <themeClassic:SystemDropShadowChrome x:Name="Shdw"
                                                                         Margin="0,0,5,5"
                                                                         Focusable="True"
                                                                         FocusVisualStyle="{x:Null}"
                                                                         RenderOptions.ClearTypeHint="Enabled"
                                                                         Color="Transparent">
                                        <Border x:Name="CollapsedPopupBackgroundBorder"
                                                Background="{TemplateBinding Background}">
                                            <ContentControl x:Name="popupItemsPresenterHost"
                                                            Margin="0,1,0,0"
                                                            Focusable="False"
                                                            KeyboardNavigation.DirectionalNavigation="Cycle"
                                                            KeyboardNavigation.TabNavigation="Cycle" />
                                        </Border>
                                    </themeClassic:SystemDropShadowChrome>
                                </Popup>
                            </Border>
                            <ContentControl x:Name="mainItemsPresenterHost"
                                            Grid.Row="2"
                                            Grid.ColumnSpan="3"
                                            Focusable="False">
                                <Border x:Name="groupsBorder"
                                        Height="91"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="1,0,1,1"
                                        SnapsToDevicePixels="True">
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0.5,0"
                                                             EndPoint="0.5,1">
                                            <GradientStop Offset="0"
                                                          Color="#EEFFFFFF" />
                                            <GradientStop Offset="0.1"
                                                          Color="#BBFFFFFF" />
                                            <GradientStop Offset="0.5"
                                                          Color="#05FFFFFF" />
                                            <GradientStop Offset="1"
                                                          Color="#20FFFFFF" />
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <Border Margin="0,0,0,1"
                                            BorderBrush="#60FFFFFF"
                                            BorderThickness="0,0,0,1"
                                            SnapsToDevicePixels="True">
                                        <ItemsPresenter x:Name="ItemsPresenter" />
                                    </Border>
                                </Border>
                            </ContentControl>
                            <Border x:Name="QatBottomHost"
                                    Grid.Row="3"
                                    Grid.ColumnSpan="3"
                                    BorderBrush="{TemplateBinding BorderBrush}">
                                <ContentPresenter x:Name="QatBottomHostContentPresenter"
                                                  HorizontalAlignment="Left"
                                                  VerticalAlignment="Center"
                                                  IsHitTestVisible="True" />
                            </Border>
                            <Border x:Name="titleBarBackground"
                                    Grid.ColumnSpan="3"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="0,0,0,1"
                                    Visibility="Collapsed">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0.5,0"
                                                         EndPoint="0.5,1">
                                        <GradientStop Offset="0"
                                                      Color="#EEFFFFFF" />
                                        <GradientStop Offset="0.1"
                                                      Color="#BBFFFFFF" />
                                        <GradientStop Offset="0.5"
                                                      Color="#05FFFFFF" />
                                        <GradientStop Offset="1"
                                                      Color="#20FFFFFF" />
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                            <DockPanel Grid.Column="0"
                                       Grid.ColumnSpan="3"
                                       Height="{Binding WindowCaptionHeight}"
                                       LastChildFill="True">
                                <ContentControl x:Name="windowButtonPlaceHolder"
                                                Width="{Binding WindowCaptionButtonsLocation.Width}"
                                                Margin="3,0,0,0"
                                                DockPanel.Dock="Right"
                                                Focusable="False"
                                                IsHitTestVisible="False">
                                    <ContentControl.Visibility>
                                        <TemplateBinding Property="IsHostedInRibbonWindow">
                                            <TemplateBinding.Converter>
                                                <BooleanToVisibilityConverter />
                                            </TemplateBinding.Converter>
                                        </TemplateBinding>
                                    </ContentControl.Visibility>
                                </ContentControl>
                                <ContentControl x:Name="windowIconPadding"
                                                Width="{Binding SmallIconSize.Width}"
                                                Margin="0,0,3,0"
                                                DockPanel.Dock="Left"
                                                Focusable="False"
                                                IsHitTestVisible="False" />
                                <Microsoft_Windows_Controls_Ribbon_Primitives:RibbonTitlePanel x:Name="PART_TitlePanel">
                                    <Grid x:Name="QatTopHost">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Border x:Name="QatTopHostLeftBorder"
                                                Grid.Column="0"
                                                Width="3"
                                                Margin="8,2,0,2"
                                                Background="#77222222"
                                                BorderBrush="#66CCCCCC"
                                                BorderThickness="1,0,1,0.9"
                                                CornerRadius="0,0,2,2" />
                                        <ContentPresenter x:Name="QatTopHostContentPresenter"
                                                          Grid.Column="1"
                                                          Content="{TemplateBinding QuickAccessToolBar}"
                                                          IsHitTestVisible="True" />
                                        <Border x:Name="QatTopHostRightBorder"
                                                Grid.Column="2"
                                                Width="3"
                                                Margin="0,2,1,2"
                                                Background="#77222222"
                                                BorderBrush="#66CCCCCC"
                                                BorderThickness="1,0,1,0.9"
                                                CornerRadius="0,0,2,2" />
                                    </Grid>
                                    <ContentPresenter x:Name="PART_TitleHost"
                                                      MinWidth="75"
                                                      MinHeight="{Binding WindowCaptionHeight}"
                                                      Margin="3,0"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      Content="{TemplateBinding Title}"
                                                      ContentSource="Title"
                                                      ContentTemplate="{TemplateBinding TitleTemplate}"
                                                      IsHitTestVisible="False"
                                                      TextElement.FontFamily="{DynamicResource {x:Static SystemFonts.CaptionFontFamilyKey}}"
                                                      TextElement.FontSize="{DynamicResource {x:Static SystemFonts.CaptionFontSizeKey}}"
                                                      TextElement.FontWeight="{DynamicResource {x:Static SystemFonts.CaptionFontWeightKey}}"
                                                      TextElement.Foreground="{DynamicResource {x:Static SystemColors.ActiveCaptionTextBrushKey}}">
                                        <ContentPresenter.Resources>
                                            <DataTemplate x:Key="{DataTemplateKey DataType={x:Type System:String}}"
                                                          DataType="{x:Type System:String}">
                                                <TextBlock x:Name="titleTextBlock"
                                                           Margin="0,-2,0,0"
                                                           HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                                           Text="{TemplateBinding Content}"
                                                           TextTrimming="CharacterEllipsis" />
                                                <DataTemplate.Triggers>
                                                    <MultiDataTrigger>
                                                        <MultiDataTrigger.Conditions>
                                                            <Condition Binding="{Binding IsGlassEnabled}"
                                                                       Value="True" />
                                                            <Condition Binding="{Binding IsHostedInRibbonWindow, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type r:Ribbon}}}"
                                                                       Value="True" />
                                                        </MultiDataTrigger.Conditions>
                                                        <Setter TargetName="titleTextBlock"
                                                                Property="Effect">
                                                            <Setter.Value>
                                                                <DropShadowEffect BlurRadius="5"
                                                                                  ShadowDepth="0"
                                                                                  Color="White" />
                                                            </Setter.Value>
                                                        </Setter>
                                                    </MultiDataTrigger>
                                                    <DataTrigger Binding="{Binding IsGlassEnabled}"
                                                                 Value="False">
                                                        <Setter TargetName="titleTextBlock"
                                                                Property="Margin"
                                                                Value="0" />
                                                        <Setter TargetName="titleTextBlock"
                                                                Property="VerticalAlignment"
                                                                Value="Center" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding HighContrast}"
                                                                 Value="True">
                                                        <Setter TargetName="titleTextBlock"
                                                                Property="Margin"
                                                                Value="0,1,0,0" />
                                                    </DataTrigger>
                                                </DataTemplate.Triggers>
                                            </DataTemplate>
                                        </ContentPresenter.Resources>
                                    </ContentPresenter>
                                    <r:RibbonContextualTabGroupItemsControl x:Name="PART_ContextualTabGroupItemsControl"
                                                                            HorizontalAlignment="Center"
                                                                            Custom:WindowChrome.IsHitTestVisibleInChrome="True"
                                                                            IsHitTestVisible="True" />
                                </Microsoft_Windows_Controls_Ribbon_Primitives:RibbonTitlePanel>
                            </DockPanel>
                            <ContentPresenter x:Name="applicationMenu"
                                              Grid.Row="1"
                                              Margin="5,-19,0,0"
                                              HorizontalAlignment="Left"
                                              VerticalAlignment="Stretch"
                                              Content="{TemplateBinding ApplicationMenu}" />
                            <r:RibbonTabHeaderItemsControl x:Name="TabHeaderItemsControl"
                                                           Grid.Row="1"
                                                           Grid.Column="1"
                                                           Margin="1,1,1,0"
                                                           HorizontalAlignment="Left"
                                                           VerticalAlignment="Top" />
                            <ContentPresenter x:Name="PART_HelpPane"
                                              Grid.Row="1"
                                              Grid.Column="2"
                                              HorizontalAlignment="Right"
                                              VerticalAlignment="Top"
                                              Content="{TemplateBinding HelpPaneContent}"
                                              ContentSource="HelpPaneContent"
                                              ContentTemplate="{TemplateBinding HelpPaneContentTemplate}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsCollapsed"
                                     Value="True">
                                <Setter TargetName="applicationMenu"
                                        Property="Visibility"
                                        Value="Collapsed" />
                                <Setter TargetName="QatBottomHost"
                                        Property="Visibility"
                                        Value="Collapsed" />
                                <Setter TargetName="QatTopHost"
                                        Property="Visibility"
                                        Value="Collapsed" />
                                <Setter TargetName="mainItemsPresenterHost"
                                        Property="Visibility"
                                        Value="Collapsed" />
                                <Setter TargetName="TabHeaderItemsControl"
                                        Property="Visibility"
                                        Value="Collapsed" />
                                <Setter TargetName="PART_HelpPane"
                                        Property="Visibility"
                                        Value="Collapsed" />
                                <Setter TargetName="PART_ContextualTabGroupItemsControl"
                                        Property="Visibility"
                                        Value="Collapsed" />
                                <Setter TargetName="PART_TitleHost"
                                        Property="MinWidth"
                                        Value="0" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsCollapsed"
                                               Value="True" />
                                    <Condition Property="IsHostedInRibbonWindow"
                                               Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Visibility"
                                        Value="Collapsed" />
                            </MultiTrigger>
                            <Trigger Property="ShowQuickAccessToolBarOnTop"
                                     Value="False">
                                <Setter TargetName="QatTopHostContentPresenter"
                                        Property="Content"
                                        Value="{x:Null}" />
                                <Setter TargetName="QatTopHost"
                                        Property="Visibility"
                                        Value="Collapsed" />
                                <Setter TargetName="QatBottomHostContentPresenter"
                                        Property="Content"
                                        Value="{Binding QuickAccessToolBar, RelativeSource={RelativeSource TemplatedParent}}" />
                                <Setter TargetName="BackgroundBorder"
                                        Property="BorderThickness"
                                        Value="0,0,0,1" />
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding QuickAccessToolBar.HasItems, RelativeSource={RelativeSource Self}}"
                                               Value="False" />
                                    <Condition Binding="{Binding QuickAccessToolBar.CustomizeMenuButton, RelativeSource={RelativeSource Self}}"
                                               Value="{x:Null}" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="QatTopHost"
                                        Property="Visibility"
                                        Value="Collapsed" />
                                <Setter TargetName="QatBottomHost"
                                        Property="Visibility"
                                        Value="Collapsed" />
                            </MultiDataTrigger>
                            <Trigger Property="IsMinimized"
                                     Value="True">
                                <Setter TargetName="mainItemsPresenterHost"
                                        Property="Content"
                                        Value="{x:Null}" />
                                <Setter TargetName="mainItemsPresenterHost"
                                        Property="Visibility"
                                        Value="Collapsed" />
                                <Setter TargetName="popupItemsPresenterHost"
                                        Property="Content"
                                        Value="{Binding ElementName=groupsBorder}" />
                                <Setter TargetName="BackgroundBorder"
                                        Property="BorderThickness"
                                        Value="0,0,0,1" />
                                <Setter TargetName="TabHeaderItemsControl"
                                        Property="Margin"
                                        Value="1,1,1,-1" />
                                <Setter TargetName="BackgroundBorder"
                                        Property="Margin"
                                        Value="0,0,0,-2" />
                                <Setter TargetName="CollapsedPopupBackgroundBorder"
                                        Property="Margin"
                                        Value="0,-1,0,0" />
                            </Trigger>
                            <Trigger Property="WindowIconVisibility"
                                     Value="Collapsed">
                                <Setter TargetName="windowIconPadding"
                                        Property="Visibility"
                                        Value="Collapsed" />
                                <Setter TargetName="QatTopHostLeftBorder"
                                        Property="Visibility"
                                        Value="Collapsed" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMinimized"
                                               Value="True" />
                                    <Condition Property="ShowQuickAccessToolBarOnTop"
                                               Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="QatBottomHost"
                                        Property="BorderThickness"
                                        Value="0,1,0,0" />
                            </MultiTrigger>
                            <Trigger Property="IsHostedInRibbonWindow"
                                     Value="False">
                                <Setter TargetName="BackgroundBorder"
                                        Property="Grid.Row"
                                        Value="0" />
                                <Setter TargetName="BackgroundBorder"
                                        Property="Grid.RowSpan"
                                        Value="4" />
                                <Setter TargetName="titleBarBackground"
                                        Property="Visibility"
                                        Value="Visible" />
                                <Setter TargetName="windowIconPadding"
                                        Property="Visibility"
                                        Value="Collapsed" />
                                <Setter TargetName="QatTopHostLeftBorder"
                                        Property="Visibility"
                                        Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="IsDropDownOpen"
                                     Value="True">
                                <Setter TargetName="BackgroundBorder"
                                        Property="BorderThickness"
                                        Value="0" />
                            </Trigger>
                            <Trigger SourceName="PART_ITEMSPRESENTERPOPUP"
                                     Property="HasDropShadow"
                                     Value="True">
                                <Setter TargetName="Shdw"
                                        Property="Color"
                                        Value="#71000000" />
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsActive, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type r:RibbonWindow}}}"
                                               Value="False" />
                                    <Condition Binding="{Binding IsGlassEnabled}"
                                               Value="False" />
                                    <Condition Binding="{Binding IsHostedInRibbonWindow, RelativeSource={RelativeSource Self}}"
                                               Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="PART_TitleHost"
                                        Property="TextElement.Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.InactiveCaptionTextBrushKey}}" />
                            </MultiDataTrigger>
                            <DataTrigger Binding="{Binding HighContrast}"
                                         Value="True">
                                <Setter TargetName="BackgroundBorder"
                                        Property="Background"
                                        Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                <Setter TargetName="BackgroundBorder"
                                        Property="BorderBrush"
                                        Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
                                <Setter TargetName="groupsBorder"
                                        Property="Background"
                                        Value="Transparent" />
                                <Setter TargetName="groupsBorder"
                                        Property="BorderBrush"
                                        Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
                                <Setter TargetName="groupsBorder"
                                        Property="Height"
                                        Value="94" />
                                <Setter TargetName="QatBottomHost"
                                        Property="BorderBrush"
                                        Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
                                <Setter TargetName="titleBarBackground"
                                        Property="Background"
                                        Value="Transparent" />
                                <Setter TargetName="titleBarBackground"
                                        Property="BorderBrush"
                                        Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
                                <Setter TargetName="CollapsedPopupBackgroundBorder"
                                        Property="Background"
                                        Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                <Setter TargetName="PART_ITEMSPRESENTERPOPUP"
                                        Property="PopupAnimation"
                                        Value="None" />
                                <Setter TargetName="QatTopHostLeftBorder"
                                        Property="Margin"
                                        Value="10,1,2,2" />
                                <Setter TargetName="QatTopHostLeftBorder"
                                        Property="Width"
                                        Value="1" />
                                <Setter TargetName="QatTopHostLeftBorder"
                                        Property="BorderThickness"
                                        Value="0" />
                                <Setter TargetName="QatTopHostLeftBorder"
                                        Property="CornerRadius"
                                        Value="0" />
                                <Setter TargetName="QatTopHostLeftBorder"
                                        Property="Background"
                                        Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                                <Setter TargetName="QatTopHostRightBorder"
                                        Property="Margin"
                                        Value="0,1,2,2" />
                                <Setter TargetName="QatTopHostRightBorder"
                                        Property="Width"
                                        Value="1" />
                                <Setter TargetName="QatTopHostRightBorder"
                                        Property="BorderThickness"
                                        Value="0" />
                                <Setter TargetName="QatTopHostRightBorder"
                                        Property="CornerRadius"
                                        Value="0" />
                                <Setter TargetName="QatTopHostRightBorder"
                                        Property="Background"
                                        Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding UxThemeName}"
                                         Value="Aero">
                                <Setter TargetName="QatTopHost"
                                        Property="Margin"
                                        Value="0,-3,0,0" />
                                <Setter TargetName="QatTopHostLeftBorder"
                                        Property="Margin"
                                        Value="3,3,0,5" />
                                <Setter TargetName="QatTopHostLeftBorder"
                                        Property="Background"
                                        Value="#81444444" />
                                <Setter TargetName="QatTopHostLeftBorder"
                                        Property="BorderBrush"
                                        Value="#69EEEEEE" />
                                <Setter TargetName="QatTopHostRightBorder"
                                        Property="Margin"
                                        Value="0,3,1,5" />
                                <Setter TargetName="QatTopHostRightBorder"
                                        Property="Background"
                                        Value="#81444444" />
                                <Setter TargetName="QatTopHostRightBorder"
                                        Property="BorderBrush"
                                        Value="#69EEEEEE" />
                            </DataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding UxThemeName}"
                                               Value="Aero" />
                                    <Condition Binding="{Binding WindowState, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type r:RibbonWindow}}}"
                                               Value="Maximized" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="QatTopHost"
                                        Property="Margin"
                                        Value="0" />
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--  endregion RibbonStyle  -->
        <Visibility x:Key="TabControlVisibility">Visible</Visibility>
        <Style x:Key="ListBoxItemTask"
               TargetType="{x:Type ListBoxItem}">
            <Setter Property="Background"
                    Value="Transparent" />
            <Setter Property="HorizontalContentAlignment"
                    Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="VerticalContentAlignment"
                    Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
            <Setter Property="helper:ControlHelper.DoubleClickCommand"
                    Value="{Binding DataContext.ShowTaskInfoCommand, RelativeSource={RelativeSource AncestorType={x:Type Window}, Mode=FindAncestor}}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Cursor="Hand"
                                Padding="{TemplateBinding Padding}"
                                SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="Stretch"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected"
                                     Value="true">
                                <Setter TargetName="Bd"
                                        Property="Background"
                                        Value="{DynamicResource ListBox_IsSelected_Background}" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected"
                                               Value="true" />
                                    <Condition Property="Selector.IsSelectionActive"
                                               Value="false" />
                                </MultiTrigger.Conditions>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled"
                                     Value="false">
                                <Setter Property="Foreground"
                                        Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Padding"
                    Value="0" />
        </Style>
        <DataTemplate x:Key="DataTemplateListBoxTask">
            <Border x:Name="brdBackground"
                    BorderBrush="White"
                    BorderThickness="0,0,0,1">
                <Grid x:Name="grdBackground">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="25" />
                        <RowDefinition Height="20" />
                    </Grid.RowDefinitions>
                    <Rectangle x:Name="Color"
                               Grid.RowSpan="2"
                               Width="5"
                               HorizontalAlignment="Left"
                               Fill="{Binding Color, Mode=OneWay}" />
                    <TextBlock x:Name="txtblTitle"
                               Width="170"
                               Margin="7,0,40,0"
                               HorizontalAlignment="Left"
                               VerticalAlignment="Center"
                               FontFamily="Tahoma"
                               FontSize="11"
                               Foreground="{DynamicResource ListBoxForeground}"
                               Text="{Binding Task, Mode=OneWay}"
                               TextTrimming="CharacterEllipsis" />
                    <StackPanel x:Name="stkpIcon"
                                Margin="0,5"
                                HorizontalAlignment="Right"
                                Orientation="Horizontal">
                        <Rectangle x:Name="imgTask"
                                   Width="8"
                                   Height="8"
                                   HorizontalAlignment="Stretch"
                                   Fill="{DynamicResource Task}"
                                   Visibility="{Binding HasNote, Mode=OneWay, Converter={StaticResource boolToVisibilityConverter}}" />
                        <Rectangle x:Name="imgPriority"
                                   Width="8"
                                   Height="8"
                                   HorizontalAlignment="Stretch"
                                   Fill="{Binding PriorityImage, Mode=OneWay}" />
                        <CheckBox HorizontalAlignment="Stretch"
                                  VerticalAlignment="Center"
                                  IsChecked="{Binding IsCompleted, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </StackPanel>
                    <StackPanel x:Name="stkpDate"
                                Grid.Row="1"
                                Margin="0,0,7,0"
                                HorizontalAlignment="Right"
                                VerticalAlignment="Center"
                                Orientation="Horizontal"
                                Visibility="{Binding IsReminder, Mode=OneWay, Converter={StaticResource boolToVisibilityConverter}}">
                        <Rectangle x:Name="imgAlarm"
                                   Width="9"
                                   Height="9"
                                   HorizontalAlignment="Stretch"
                                   VerticalAlignment="Center"
                                   Fill="{DynamicResource Alarm}" />
                        <TextBlock x:Name="txtblToday"
                                   HorizontalAlignment="Stretch"
                                   VerticalAlignment="Center"
                                   FontFamily="Tahoma"
                                   FontSize="9.333"
                                   FontStyle="Italic"
                                   Foreground="{DynamicResource ListBoxForeground}"
                                   Text="{Binding DateAlarm, Mode=OneWay}"
                                   TextTrimming="CharacterEllipsis" />
                    </StackPanel>
                </Grid>
            </Border>
        </DataTemplate>
    </r:RibbonWindow.Resources>
    <r:RibbonWindow.InputBindings>
        <KeyBinding Command="{Binding HelpCommand}"
                    Gesture="F1" />
        <KeyBinding Command="{Binding LockScreenCommand}"
                    Gesture="F4" />
    </r:RibbonWindow.InputBindings>
    <control:BusyIndicator IsBusy="{Binding IsBusy}">
        <Grid x:Name="grdLayout">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <r:Ribbon x:Name="ribbon"
                      Background="{DynamicResource Ribbon_Tab_Background}"
                      BorderBrush="{DynamicResource Ribbon_Tab_Border}"
                      FontFamily="Tahoma"
                      FontSize="11"
                      Foreground="{DynamicResource Ribbon_Tab_Foreground}"
                      IsMinimized="True"
                      Style="{DynamicResource RibbonStyle}"
                      WindowIconVisibility="Hidden">
                <r:Ribbon.TitleTemplate>
                    <DataTemplate>
                        <Grid Height="22">
                            <TextBlock Width="{Binding ActualWidth, ElementName=Window}"
                                       Margin="0,0,0,0"
                                       VerticalAlignment="Center"
                                       FontFamily="Tahoma"
                                       FontSize="12"
                                       Foreground="White"
                                       Padding="0,0,0,4"
                                       TextAlignment="Center"><Run Text="Truong Giang - Smart POS" />
                            </TextBlock>
                        </Grid>
                    </DataTemplate>
                </r:Ribbon.TitleTemplate>
                <r:Ribbon.ApplicationMenu>
                    <r:RibbonApplicationMenu Width="36"
                                             Height="36"
                                             Background="{DynamicResource ApplicationMenuToggleButton_Background}"
                                             BorderBrush="{DynamicResource ApplicationMenuToggleButton_Border}"
                                             Template="{DynamicResource RibbonApplicationMenuControlTemplate}">
                        <r:RibbonApplicationMenuItem Header="Company Setting"
                                                     Command="{Binding OpenViewCommand}"
                                                     CommandParameter="CompanySetting"
                                                     ImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonCompany.png}"
                                                     IsEnabled="{Binding ., ConverterParameter=CF100, Converter={StaticResource permissionConverter}}" />
                        <r:RibbonApplicationMenuItem Header="Maintenance"
                                                     Command="{Binding OpenViewCommand}"
                                                     CommandParameter="Maintenance"
                                                     ImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonMaintain.png}">
                            <r:RibbonApplicationMenuItem Header="BackUpData"
                                                         Command="{Binding OpenViewCommand}"
                                                         CommandParameter="BackUpData"
                                                         ImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonBackupData.png}"
                                                         IsEnabled="{Binding ., ConverterParameter=MN100, Converter={StaticResource permissionConverter}}" />
                            <r:RibbonApplicationMenuItem Header="RestoreData"
                                                         Command="{Binding DataCommand}"
                                                         CommandParameter="Restore"
                                                         ImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonRestoreData.png}"
                                                         IsEnabled="{Binding ., ConverterParameter=MN200, Converter={StaticResource permissionConverter}}" />
                            <r:RibbonApplicationMenuItem Header="ClearData"
                                                         Command="{Binding DataCommand}"
                                                         CommandParameter="Clear"
                                                         ImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonClearDatabase.png}"
                                                         IsEnabled="{Binding ., ConverterParameter=MN300, Converter={StaticResource permissionConverter}}" />
                            <r:RibbonApplicationMenuItem Header="Switch Data"
                                                         Command="{Binding SwitchDatabaseCommand}"
                                                         CommandParameter="Switch Data"
                                                         ImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonSwitch.png}" />
                        </r:RibbonApplicationMenuItem>
                        <r:RibbonSeparator />
                        <r:RibbonApplicationMenuItem Header="Cash In"
                                                     Command="{Binding OpenViewCommand}"
                                                     CommandParameter="CashIn"
                                                     ImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonCashIn.png}"
                                                     IsEnabled="{Binding AllowAccessCashIn}"
                                                     ToolTipDescription="CashIn"
                                                     ToolTipTitle="CashIn" />
                        <r:RibbonApplicationMenuItem Header="Cash Out"
                                                     Command="{Binding OpenViewCommand}"
                                                     CommandParameter="CashOut"
                                                     ImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonCashOut.png}"
                                                     IsEnabled="{Binding AllowAccessCashOut}"
                                                     ToolTipDescription="CashOut"
                                                     ToolTipTitle="CashOut" />
                        <r:RibbonApplicationMenuItem Header="Close Day"
                                                     Command="{Binding CloseDayCommand}"
                                                     ImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonCloseDay.png}"
                                                     IsEnabled="{Binding ., ConverterParameter=CF100-06, Converter={StaticResource permissionConverter}}"
                                                     ToolTipDescription="Close Day"
                                                     ToolTipTitle="CloseDay" />
                        <r:RibbonSeparator />
                        <r:RibbonApplicationMenuItem Header="LogOut"
                                                     Command="{Binding LogOutCommand}"
                                                     ImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonLogout.png}"
                                                     ToolTipDescription="LogOut"
                                                     ToolTipTitle="LogOut" />
                        <r:RibbonSeparator />
                        <r:RibbonApplicationMenuItem Header="Exit Application"
                                                     Command="{Binding ExitCommand}"
                                                     ImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonExit.png}" />
                    </r:RibbonApplicationMenu>
                </r:Ribbon.ApplicationMenu>
                <r:RibbonTab Header="Employee"
                             Visibility="{Binding ., ConverterParameter=EM100, Converter={StaticResource permissionGroupConverter}}">
                    <r:RibbonGroup Header="Employee"
                                   BorderThickness="1"
                                   Visibility="{Binding ., ConverterParameter=EM100, Converter={StaticResource permissionGroupConverter}}">
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="Employee"
                                        IsEnabled="{Binding ., ConverterParameter=EM100-01, Converter={StaticResource permissionConverter}}"
                                        Label="Create New"
                                        LargeImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonCreateEmployee.png}" />
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="EmployeeList"
                                        Label="Employee List"
                                        LargeImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonEmployeeList.png}" />
                    </r:RibbonGroup>
                    <r:RibbonGroup Header="Holiday and Schedule"
                                   BorderThickness="1"
                                   Visibility="{Binding ., ConverterParameter=T100, Converter={StaticResource permissionGroupConverter}}">
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="WorkSchedule"
                                        IsEnabled="{Binding ., ConverterParameter=T100-01, Converter={StaticResource permissionConverter}}"
                                        Label="Schedule"
                                        LargeImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonCreateSchedule.png}" />
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="Holiday"
                                        IsEnabled="{Binding ., ConverterParameter=T100-02, Converter={StaticResource permissionConverter}}"
                                        Label="Holiday"
                                        LargeImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonCreateHoliday.png}" />
                    </r:RibbonGroup>
                    <r:RibbonGroup Header="Timelog &amp; work permission"
                                   BorderThickness="1"
                                   Visibility="{Binding ., ConverterParameter=T200, Converter={StaticResource permissionGroupConverter}}">
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="ManualEventEditing"
                                        IsEnabled="{Binding ., ConverterParameter=T200-01, Converter={StaticResource permissionConverter}}"
                                        Label="Manual editing timelog"
                                        LargeImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonTimeClockManualEventEditing.png}" />
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="WorkPermission"
                                        IsEnabled="{Binding ., ConverterParameter=T200-02, Converter={StaticResource permissionConverter}}"
                                        Label="Create permission"
                                        LargeImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonCreateWorkPermission.png}" />
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="WorkPermissionList"
                                        Label="Permission list"
                                        LargeImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonWorkPermissionList.png}" />
                    </r:RibbonGroup>
                </r:RibbonTab>
                <r:RibbonTab Header="Sales"
                             BorderBrush="Black"
                             BorderThickness="1"
                             Visibility="{Binding AllowAccessSaleModule, Mode=OneWay, Converter={StaticResource boolToVisibilityConverter}}">
                    <r:RibbonGroup Header="Customer"
                                   BorderThickness="1">
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="Customer"
                                        IsEnabled="{Binding AllowAddCustomer, Mode=OneWay}"
                                        Label="Create New"
                                        LargeImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonCreateCustomer.png}" />
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="CustomerList"
                                        IsEnabled="{Binding AllowAccessCustomer, Mode=OneWay}"
                                        Label="Customer List"
                                        LargeImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonCustomerList.png}" />
                    </r:RibbonGroup>
                    <r:RibbonGroup Header="Reward"
                                   BorderThickness="1">
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="RewardSetup"
                                        IsEnabled="{Binding AllowAccessReward, Mode=OneWay}"
                                        Label="Reward Setup"
                                        LargeImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonRewardSetup.png}" />
                    </r:RibbonGroup>
                    <r:RibbonGroup Header="Sales Quote"
                                   BorderThickness="1">
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="Quotation"
                                        IsEnabled="{Binding AllowAddSaleQuotation, Mode=OneWay}"
                                        Label="Quotation"
                                        LargeImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonQuotation.png}" />
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="QuotationList"
                                        IsEnabled="{Binding AllowAccessSaleQuotation, Mode=OneWay}"
                                        Label="Quotation List"
                                        LargeImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonQuotationList.png}" />
                    </r:RibbonGroup>
                    <r:RibbonGroup Header="Layaway Order"
                                   BorderThickness="1">
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="LayawaySetup"
                                        Label="Layaway Setup"
                                        LargeImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonLayawaySetup.png}" />
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="Layaway"
                                        IsEnabled="{Binding AllowAddLayaway, Mode=OneWay}"
                                        Label="Create Layaway"
                                        LargeImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonLayaway.png}" />
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="LayawayList"
                                        IsEnabled="{Binding AllowAccessLayaway, Mode=OneWay}"
                                        Label="Layaway List"
                                        LargeImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonLayawayList.png}" />
                    </r:RibbonGroup>
                    <r:RibbonGroup Header="Work Order"
                                   BorderThickness="1">
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="WorkOrder"
                                        IsEnabled="{Binding AllowAddWorkOrder, Mode=OneWay}"
                                        Label="WorkOrder"
                                        LargeImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonWorkOrder.png}" />
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="WorkOrderList"
                                        IsEnabled="{Binding AllowAccessWorkOrder, Mode=OneWay}"
                                        Label="WorkOrder List"
                                        LargeImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonWorkOrderList.png}" />
                    </r:RibbonGroup>
                    <r:RibbonGroup Header="Sales Order"
                                   BorderThickness="1">
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="SalesOrder"
                                        IsEnabled="{Binding AllowAddSaleOrder, Mode=OneWay}"
                                        Label="Sales Order"
                                        LargeImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonSalesOrder.png}" />
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="SalesOrderList"
                                        IsEnabled="{Binding AllowAccessSaleOrder, Mode=OneWay}"
                                        Label="SO List"
                                        LargeImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonSalesOrderList.png}" />
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="SalesOrderReturn"
                                        IsEnabled="{Binding AllowAccessSaleOrder, Mode=OneWay}"
                                        Label="SO Return"
                                        LargeImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonSOReturn.png}" />
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="SalesOrderLockedList"
                                        IsEnabled="{Binding AllowAccessSaleOrder, Mode=OneWay}"
                                        Label="SO Locked List"
                                        LargeImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonSOListLock.png}" />
                    </r:RibbonGroup>
                    <r:RibbonGroup Header="Gift Card"
                                   BorderThickness="1">
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="VoucherGiftCard"
                                        Label="Gift Card"
                                        LargeImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonGiftCard.png}" />
                    </r:RibbonGroup>
                </r:RibbonTab>
                <r:RibbonTab Header="Purchase"
                             BorderBrush="Black"
                             BorderThickness="1"
                             Visibility="{Binding AllowAccessPurchaseModule, Mode=OneWay, Converter={StaticResource boolToVisibilityConverter}}">
                    <r:RibbonGroup Header="Vendor"
                                   BorderThickness="1">
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="Vendor"
                                        IsEnabled="{Binding AllowAddVendor, Mode=OneWay}"
                                        Label="Create New"
                                        LargeImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonVendor.png}" />
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="Vendor List"
                                        IsEnabled="{Binding AllowAccessVendor, Mode=OneWay}"
                                        Label="Vendor List"
                                        LargeImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonVendorList.png}" />
                    </r:RibbonGroup>
                    <r:RibbonGroup Header="Purchase Order"
                                   BorderThickness="1">
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="PurchaseOrder"
                                        IsEnabled="{Binding AllowAddPurchaseOrder, Mode=OneWay}"
                                        Label="Purchase Order"
                                        LargeImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonPurchaseOrder.png}" />
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="PurchaseOrderList"
                                        IsEnabled="{Binding AllowAccessPurchaseOrder, Mode=OneWay}"
                                        Label="PO List"
                                        LargeImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonPurchaseOrderList.png}" />
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="PurchaseOrderReturn"
                                        IsEnabled="{Binding AllowAddPurchaseOrder, Mode=OneWay}"
                                        Label="PO Return"
                                        LargeImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonPOReturn.png}" />
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="PurchaseOrderLockedList"
                                        IsEnabled="{Binding AllowAddPurchaseOrder, Mode=OneWay}"
                                        Label="PO Locked List"
                                        LargeImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonPOListLock.png}" />
                    </r:RibbonGroup>
                </r:RibbonTab>
                <r:RibbonTab Header="Inventory"
                             BorderBrush="Black"
                             BorderThickness="1"
                             Visibility="{Binding AllowAccessInventoryModule, Mode=OneWay, Converter={StaticResource boolToVisibilityConverter}}">
                    <r:RibbonGroup Header="Product"
                                   BorderThickness="1">
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="Product"
                                        IsEnabled="{Binding AllowAddProduct, Mode=OneWay}"
                                        Label="Create New"
                                        LargeImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonProduct.png}" />
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="ProductList"
                                        IsEnabled="{Binding AllowAccessProduct, Mode=OneWay}"
                                        Label="Product List"
                                        LargeImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonProductList.png}" />
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="Department"
                                        IsEnabled="{Binding AllowAddDepartment, Mode=OneWay}"
                                        Label="Department"
                                        LargeImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonDepartment.png}" />
                    </r:RibbonGroup>
                    <r:RibbonGroup Header="Pricing"
                                   BorderThickness="1">
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="Pricing"
                                        IsEnabled="{Binding AllowAddPricing, Mode=OneWay}"
                                        Label="Pricing"
                                        LargeImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonProductPricing.png}" />
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="PricingList"
                                        IsEnabled="{Binding AllowAccessPricing, Mode=OneWay}"
                                        Label="Pricing List"
                                        LargeImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonProductPricingList.png}" />
                    </r:RibbonGroup>
                    <r:RibbonGroup Header="Discount"
                                   BorderThickness="1">
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="Discount"
                                        IsEnabled="{Binding AllowAddPromotion, Mode=OneWay}"
                                        Label="Discount"
                                        LargeImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonDiscount.png}" />
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="DiscountList"
                                        IsEnabled="{Binding AllowAccessDiscountProgram, Mode=OneWay}"
                                        Label="Discount List"
                                        LargeImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonDiscountList.png}" />
                    </r:RibbonGroup>
                    <r:RibbonGroup Header="Stock"
                                   BorderThickness="1">
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="CurrentStock"
                                        IsEnabled="{Binding AllowViewCurrentStock, Mode=OneWay}"
                                        Label="Current Stock"
                                        LargeImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonCurrentStock.png}" />
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="CountSheet"
                                        IsEnabled="{Binding AllowAddCountSheet, Mode=OneWay}"
                                        Label="Count Sheet"
                                        LargeImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonCountSheet.png}" />
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="CountSheetList"
                                        IsEnabled="{Binding AllowAccessStock, Mode=OneWay}"
                                        Label="Count Sheet List"
                                        LargeImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonCountSheetList.png}" />
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="TransferStock"
                                        IsEnabled="{Binding AllowAddTransferStock, Mode=OneWay}"
                                        Label="Transfer Stock"
                                        LargeImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonTransferStock.png}" />
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="TransferStockList"
                                        IsEnabled="{Binding AllowAccessStock, Mode=OneWay}"
                                        Label="Transfer List"
                                        LargeImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonTransferStockList.png}" />
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="ReOrderStock"
                                        IsEnabled="{Binding ., ConverterParameter=IV100-04-08, Converter={StaticResource permissionConverter}}"
                                        Label="ReOrder Stock"
                                        LargeImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonReorderStock.png}" />
                    </r:RibbonGroup>
                    <r:RibbonGroup Header="History"
                                   BorderThickness="1">
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="CostAdjustment"
                                        IsEnabled="{Binding AllowAccessCostAdjustment, Mode=OneWay}"
                                        Label="Cost Adjustment"
                                        LargeImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonCostAdjustmentHistory.png}" />
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="QuantityAdjustment"
                                        IsEnabled="{Binding AllowAccessQuantityAdjustment, Mode=OneWay}"
                                        Label="Quantity Adjustment"
                                        LargeImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonQuantityAdjustmentHistory.png}" />
                    </r:RibbonGroup>
                </r:RibbonTab>
                <r:RibbonTab Header="Restaurant"
                             BorderBrush="Black"
                             BorderThickness="1">
                    <r:RibbonGroup Header="Restaurant"
                                   BorderThickness="1">
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="ProductManual"
                                        IsEnabled="{Binding AllowAddProduct, Mode=OneWay}"
                                        Label="Create New"
                                        LargeImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonManual.png}" />
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="ProductManualList"
                                        IsEnabled="{Binding AllowAccessProduct, Mode=OneWay}"
                                        Label="Manual List"
                                        LargeImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonManualList.png}" />
                    </r:RibbonGroup>
                </r:RibbonTab>
                <r:RibbonTab Header="Configuration"
                             BorderBrush="Black"
                             BorderThickness="1"
                             Visibility="{Binding AllowChangeConfiguration, Converter={StaticResource boolToVisibilityConverter}, Mode=OneWay}">
                    <r:RibbonGroup Header="Settings"
                                   BorderThickness="1"
                                   IsEnabled="{Binding AllowChangeConfiguration, Mode=OneWay}">
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="Attachment"
                                        IsEnabled="{Binding ., ConverterParameter=CF100-01, Converter={StaticResource permissionConverter}}"
                                        Label="Attachment"
                                        LargeImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonAttachFile.png}" />
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="SalesTax"
                                        IsEnabled="{Binding ., ConverterParameter=CF100-02, Converter={StaticResource permissionConverter}}"
                                        Label="Sales Tax"
                                        LargeImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonTaxCode.png}" />
                        <r:RibbonButton Command="{Binding OpenViewCommand}"
                                        CommandParameter="UserPermission"
                                        IsEnabled="{Binding ., ConverterParameter=CF100-03, Converter={StaticResource permissionConverter}}"
                                        Label="User Permission"
                                        LargeImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonUserPermissionList.png}" />
                        <r:RibbonMenuButton IsEnabled="{Binding ., ConverterParameter=CF100-04, Converter={StaticResource permissionConverter}}"
                                            Label="Style"
                                            LargeImageSource="{Binding RibbonImageFolder, Converter={StaticResource ribbonImageConverter}, ConverterParameter=RibbonStyle.png}">
                            <r:RibbonMenuItem Header="Blue"
                                              Command="{Binding ChangeStyleCommand}"
                                              CommandParameter="{x:Static local:Skins.Blue}"
                                              IsChecked="{Binding SelectedSkin, Converter={StaticResource enumToBooleanConverter}, ConverterParameter={x:Static local:Skins.Blue}}" />
                            <r:RibbonMenuItem Header="Grey"
                                              Command="{Binding ChangeStyleCommand}"
                                              CommandParameter="{x:Static local:Skins.Grey}"
                                              IsChecked="{Binding SelectedSkin, Converter={StaticResource enumToBooleanConverter}, ConverterParameter={x:Static local:Skins.Grey}}" />
                            <r:RibbonMenuItem Header="Red"
                                              Command="{Binding ChangeStyleCommand}"
                                              CommandParameter="{x:Static local:Skins.Red}"
                                              IsChecked="{Binding SelectedSkin, Converter={StaticResource enumToBooleanConverter}, ConverterParameter={x:Static local:Skins.Red}}" />
                        </r:RibbonMenuButton>
                        <r:RibbonMenuButton DisplayMemberPath="Text"
                                            ItemsSource="{x:Static helper:Common.Languages}"
                                            Label="Language"
                                            LargeImageSource="{Binding IconLanguagePath}">
                            <r:RibbonMenuButton.ItemContainerStyle>
                                <Style TargetType="{x:Type r:RibbonMenuItem}">
                                    <Setter Property="Command"
                                            Value="{Binding DataContext.ChangeLanguageCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type r:RibbonMenuButton}}}" />
                                    <Setter Property="CommandParameter"
                                            Value="{Binding}" />
                                </Style>
                            </r:RibbonMenuButton.ItemContainerStyle>
                        </r:RibbonMenuButton>
                    </r:RibbonGroup>
                </r:RibbonTab>
            </r:Ribbon>
            <Border x:Name="brdPracticeMode"
                    Width="125"
                    Height="20"
                    Margin="0,25,2,0"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Top"
                    Background="#FFFF7F00"
                    BorderBrush="#FF9B4D00"
                    BorderThickness="1"
                    Visibility="{Binding IsPracticeMode, Mode=OneWay, Converter={StaticResource boolToVisibilityConverter}}">
                <TextBlock x:Name="txtblPracticeMode"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           FontSize="12"
                           FontWeight="Bold"
                           Foreground="White"
                           Text="{DynamicResource Main_PracticeMode}"
                           TextWrapping="Wrap" />
            </Border>
            <Grid x:Name="grdMain"
                  Grid.Row="1"
                  Background="{DynamicResource UserControl_Background_Image}">
                <Grid.IsEnabled>
                    <Binding Path="IsLockScreen"
                             Mode="OneWay"
                             UpdateSourceTrigger="PropertyChanged">
                        <Binding.Converter>
                            <converter:ReserseBoolConverter />
                        </Binding.Converter>
                    </Binding>
                </Grid.IsEnabled>
                <Grid.RowDefinitions>
                    <RowDefinition x:Name="RibbonRow"
                                   Height="Auto" />
                    <RowDefinition x:Name="ClientRow" />
                    <RowDefinition x:Name="StatusRow"
                                   Height="Auto" />
                </Grid.RowDefinitions>
                <Border x:Name="brdStatusBar"
                        Grid.Row="2"
                        Height="26"
                        Background="{DynamicResource Bottom_TitleBar_Background}"
                        BorderBrush="{DynamicResource Bottom_TitleBar_Border}"
                        BorderThickness="0,1,0,0">
                    <DockPanel>
                        <StatusBarItem Margin="3,3,0,1"
                                       Style="{DynamicResource StatusBarItem}">
                            <StackPanel x:Name="stkpStore"
                                        Margin="3,0"
                                        Orientation="Horizontal">
                                <Rectangle x:Name="imgStore"
                                           Width="16"
                                           Height="16"
                                           Margin="0,0,5,0"
                                           Fill="{DynamicResource Store}" />
                                <TextBlock x:Name="txtblBindingStore"
                                           Margin="0,0,2,0"
                                           VerticalAlignment="Center"
                                           Style="{DynamicResource StatusBarItemTextBlock}"
                                           Text="{Binding StoreName}"
                                           TextWrapping="Wrap" />
                            </StackPanel>
                        </StatusBarItem>
                        <StatusBarItem Margin="2,3,0,1"
                                       Padding="3"
                                       Style="{DynamicResource StatusBarItem}">
                            <StackPanel x:Name="stkpTaxLocation"
                                        Margin="3,0"
                                        Orientation="Horizontal">
                                <Rectangle x:Name="imgTax"
                                           Width="16"
                                           Height="16"
                                           Margin="0,0,5,0"
                                           Fill="{DynamicResource SalesTaxLocation}" />
                                <TextBlock Margin="0,0,2,0"
                                           VerticalAlignment="Center"
                                           Style="{DynamicResource StatusBarItemTextBlock}"><Run Text="{Binding TaxLocation}" /><Run Text=" " /><Run Text="-" /><Run Text=" " /><Run Text="{Binding TaxCode}" />
                                </TextBlock>
                            </StackPanel>
                        </StatusBarItem>
                        <StatusBarItem Margin="2,3,0,1"
                                       Style="{DynamicResource StatusBarItem}">
                            <StackPanel x:Name="stkpUser"
                                        Margin="3,0"
                                        Orientation="Horizontal">
                                <Button x:Name="btnChangePassword"
                                        Command="{Binding ChangePasswordCommand}"
                                        Grid.Row="2"
                                        Grid.Column="1"
                                        Width="16"
                                        Height="16"
                                        Margin="0,0,5,0"
                                        HorizontalAlignment="Left"
                                        Style="{DynamicResource ButtonBarLock}">
                                    <Rectangle x:Name="imgLock"
                                               Width="16"
                                               Height="16"
                                               Fill="{DynamicResource Password}" />
                                </Button>
                                <TextBlock x:Name="tbUserLogin"
                                           Margin="0,0,2,0"
                                           HorizontalAlignment="Left"
                                           VerticalAlignment="Center"
                                           Style="{DynamicResource StatusBarItemTextBlock}"
                                           Text="{Binding LoginName}"
                                           TextWrapping="Wrap" />
                            </StackPanel>
                        </StatusBarItem>
                        <StatusBarItem Margin="2,3,0,2"
                                       Style="{DynamicResource StatusBarItem}">
                            <StackPanel Margin="3,0"
                                        Orientation="Horizontal">
                                <Rectangle x:Name="imgWorkStation"
                                           Width="16"
                                           Height="16"
                                           Margin="0,0,5,0"
                                           Fill="{DynamicResource WorkStation}" />
                                <TextBlock x:Name="txtblServer"
                                           Margin="0,0,2,0"
                                           VerticalAlignment="Center"
                                           Style="{DynamicResource StatusBarItemTextBlock}"
                                           Text="{Binding Server}" />
                            </StackPanel>
                        </StatusBarItem>
                        <StatusBarItem Margin="2,3,0,2"
                                       Style="{DynamicResource StatusBarItem}">
                            <StackPanel Margin="3,0"
                                        Orientation="Horizontal">
                                <Rectangle x:Name="imgDatabase"
                                           Width="11"
                                           Height="16"
                                           Margin="0,0,5,0"
                                           Fill="{DynamicResource DataBase}" />
                                <TextBlock x:Name="txtblDatabse"
                                           Margin="0,0,2,0"
                                           VerticalAlignment="Center"
                                           Style="{DynamicResource StatusBarItemTextBlock}"
                                           Text="{Binding Database}" />
                            </StackPanel>
                        </StatusBarItem>
                        <StatusBarItem Margin="2,3,0,2"
                                       Style="{DynamicResource StatusBarItem}">
                            <StackPanel Margin="3,0"
                                        Orientation="Horizontal">
                                <Button x:Name="btnTaskReminder"
                                        Command="{Binding OpenAlarmListCommand}"
                                        Width="16"
                                        Height="16"
                                        Margin="0,0,5,0"
                                        HorizontalAlignment="Left"
                                        Style="{DynamicResource ButtonBarLock}">
                                    <Rectangle x:Name="imgTaskReminder"
                                               Width="16"
                                               Height="16"
                                               Fill="{DynamicResource TaskReminder}" />
                                </Button>
                                <TextBlock x:Name="txtblTaskReminder"
                                           Margin="0,0,2,0"
                                           VerticalAlignment="Center"
                                           Style="{DynamicResource StatusBarItemTextBlock}"
                                           Text="{Binding CountAlarmTasks, Mode=OneWay}" />
                            </StackPanel>
                        </StatusBarItem>
                        <StatusBarItem Margin="2,3,0,2"
                                       Style="{DynamicResource StatusBarItem}">
                            <StackPanel Margin="3,0"
                                        Orientation="Horizontal">
                                <Button x:Name="btnCustomerReminder"
                                        Command="{Binding OpenAlarmBirthdayCommand}"
                                        Width="16"
                                        Height="16"
                                        Margin="0,0,5,0"
                                        HorizontalAlignment="Left"
                                        IsEnabled="{Binding ., ConverterParameter=CF100-07, Converter={StaticResource permissionConverter}}"
                                        Style="{DynamicResource ButtonBarLock}">
                                    <Rectangle x:Name="imgCustomerReminder"
                                               Width="16"
                                               Height="16"
                                               Fill="{DynamicResource Birthday}" />
                                </Button>
                                <TextBlock x:Name="txtblCustomerReminder"
                                           Margin="0,0,2,0"
                                           VerticalAlignment="Center"
                                           Style="{DynamicResource StatusBarItemTextBlock}"
                                           Text="{Binding CountAlarmBithday, Mode=OneWay}" />
                            </StackPanel>
                        </StatusBarItem>
                        <StatusBarItem Margin="2,3,0,2"
                                       Style="{DynamicResource StatusBarItem}">
                            <StackPanel Margin="3,0"
                                        Orientation="Horizontal">
                                <Button x:Name="btnIssueRewardList"
                                        Width="16"
                                        Height="16"
                                        Margin="0,0,5,0"
                                        HorizontalAlignment="Left"
                                        Command="{Binding OpenRewardCutOffServiceCommand}"
                                        IsEnabled="{Binding ., ConverterParameter=CF100-08, Converter={StaticResource permissionConverter}}"
                                        Style="{DynamicResource ButtonBarLock}">
                                    <Rectangle x:Name="imgIssueRewardList"
                                               Width="16"
                                               Height="16"
                                               Fill="{DynamicResource RewardList}" />
                                </Button>
                                <TextBlock x:Name="txtblIssueRewardList"
                                           Margin="0,0,2,0"
                                           VerticalAlignment="Center"
                                           Style="{DynamicResource StatusBarItemTextBlock}"
                                           Text="{Binding RewardCustomerList.Count, Mode=OneWay}" />
                            </StackPanel>
                        </StatusBarItem>
                        <StatusBarItem DockPanel.Dock="Right">
                            <ComboBox x:Name="cboOpenedOverControlList"
                                      Height="18"
                                      VerticalAlignment="Center"
                                      FontWeight="Bold"
                                      IsReadOnly="True"
                                      ItemContainerStyle="{DynamicResource ComboBoxItemStyle}"
                                      ItemsSource="{Binding HiddenHostList}"
                                      SelectedItem="{Binding SelectedHiddenHost}"
                                      Style="{DynamicResource ComboBoxStyle}"
                                      Visibility="{Binding HiddenHostVisibility}" />
                        </StatusBarItem>
                        <StatusBarItem Margin="3,3,0,1"
                                       HorizontalAlignment="Right"
                                       DockPanel.Dock="Right"
                                       Padding="3"
                                       Style="{DynamicResource StatusBarItem}"
                                       Visibility="Collapsed">
                            <Grid x:Name="grdLanguage">
                                <Rectangle x:Name="imgLanguage"
                                           Width="19"
                                           Height="19"
                                           Fill="{Binding SelectedItem.Image, ElementName=cmbLanguage, Mode=OneWay}" />
                                <ComboBox x:Name="cmbLanguage"
                                          Width="19"
                                          DisplayMemberPath="Text"
                                          ItemContainerStyle="{StaticResource LanguageComboBoxItemStyle}"
                                          ItemsSource="{x:Static helper:Common.Languages}"
                                          SelectedItem="{Binding SelectedLanguage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                          SelectedValuePath="Value"
                                          Style="{DynamicResource LanguageComboBoxStyle}" />
                            </Grid>
                        </StatusBarItem>
                        <StatusBarItem x:Name="statusBarRunningText">
                            <cpcControl:RunningTextControl Width="{Binding ActualWidth, ElementName=statusBarRunningText}"
                                                           Text="Công ty Trường Giang" />
                        </StatusBarItem>
                    </DockPanel>
                </Border>
                <Border x:Name="brdstatusBar"
                        Grid.Row="2"
                        Height="1"
                        Margin="0,1,0,0"
                        VerticalAlignment="Top"
                        BorderBrush="White"
                        BorderThickness="1" />
                <Grid x:Name="grdMainView"
                      Grid.Row="1"
                      Margin="5">
                    <CPCToolkitExt_OtherControl:CPCTabControl x:Name="TabHomeDashBoard"
                                                              Visibility="{Binding DashboardVisibility, Mode=OneWay}">
                        <CPCToolkitExt_OtherControl:CPCTabItemControl x:Name="tabitemCustomerInfo"
                                                                      IsCheckError="True">
                            <CPCToolkitExt_OtherControl:CPCTabItemControl.Header>
                                <TextBlock x:Name="txtblHome"
                                           Margin="10,7"
                                           Style="{DynamicResource TabItemTextBlock}"
                                           Text="Home Page"
                                           TextWrapping="Wrap" />
                            </CPCToolkitExt_OtherControl:CPCTabItemControl.Header>
                            <Grid x:Name="grdHomePage">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="268" />
                                </Grid.ColumnDefinitions>
                                <Grid x:Name="grdContentHomePage"
                                      Margin="5"
                                      SnapsToDevicePixels="True">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="11" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="10" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="0" />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="22" />
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <Border x:Name="brdSales"
                                            Background="{DynamicResource ButtonBarSearchBackground}"
                                            BorderBrush="{DynamicResource ButtonBarSearchBorder}"
                                            BorderThickness="1"
                                            SnapsToDevicePixels="True">
                                        <TextBlock x:Name="txtblSales"
                                                   HorizontalAlignment="Center"
                                                   VerticalAlignment="Center"
                                                   Style="{DynamicResource ButtonBarSearchTextBlock}"
                                                   TextWrapping="NoWrap">
                                            <TextBlock.LayoutTransform>
                                                <TransformGroup>
                                                    <ScaleTransform />
                                                    <SkewTransform />
                                                    <RotateTransform Angle="-90" />
                                                    <TranslateTransform />
                                                </TransformGroup>
                                            </TextBlock.LayoutTransform><Run Text="Sales" />
                                        </TextBlock>
                                    </Border>
                                    <Border x:Name="brdContentSales"
                                            Grid.Column="1"
                                            Background="#19FFFFFF"
                                            BorderBrush="White"
                                            BorderThickness="0,1,1,1"
                                            SnapsToDevicePixels="True">
                                        <Grid x:Name="grdContentSales1"
                                              Margin="0,5">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="0.5*" />
                                                <RowDefinition Height="26" />
                                                <RowDefinition Height="0.5*" />
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="105" />
                                                <ColumnDefinition Width="60" />
                                                <ColumnDefinition Width="105" />
                                                <ColumnDefinition Width="60" />
                                                <ColumnDefinition Width="105" />
                                                <ColumnDefinition Width="60" />
                                                <ColumnDefinition Width="105" />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                            <Button x:Name="btnCustomer"
                                                    Command="{Binding OpenViewCommand}"
                                                    CommandParameter="Customer"
                                                    HorizontalAlignment="Center"
                                                    IsEnabled="{Binding AllowAddCustomer, Mode=OneWay}"
                                                    Style="{DynamicResource ButtonHomePage}">
                                                <StackPanel x:Name="stkpBtnCustomer"
                                                            HorizontalAlignment="Center"
                                                            VerticalAlignment="Center">
                                                    <Rectangle x:Name="imgCustomer"
                                                               Width="30"
                                                               Height="30"
                                                               Fill="{DynamicResource Customer}" />
                                                    <TextBlock x:Name="txtblCustomer"
                                                               Margin="0,5,0,0"
                                                               VerticalAlignment="Center"
                                                               Style="{DynamicResource ButtonHomePageTextBlock}"
                                                               Text="Customer"
                                                               TextWrapping="NoWrap" />
                                                </StackPanel>
                                            </Button>
                                            <ed:BlockArrow Grid.Column="1"
                                                           Height="6"
                                                           VerticalAlignment="Center"
                                                           ArrowBodySize="0.2"
                                                           ArrowheadAngle="53"
                                                           Fill="White"
                                                           Orientation="Right" />
                                            <Button x:Name="btnCustomerOrder"
                                                    Grid.Column="2"
                                                    Height="48.2766666666667"
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    Style="{DynamicResource ButtonHomePage}">
                                                <StackPanel x:Name="stkpCustomerOrder"
                                                            HorizontalAlignment="Center"
                                                            VerticalAlignment="Center"
                                                            IsHitTestVisible="False"
                                                            Orientation="Vertical">
                                                    <Rectangle x:Name="imgCustomerOrder"
                                                               Width="30"
                                                               Height="30"
                                                               Fill="{DynamicResource CustomerOrder}" />
                                                    <TextBlock x:Name="txtblCustomerOrder"
                                                               Margin="0,5,0,0"
                                                               VerticalAlignment="Center"
                                                               Style="{DynamicResource ButtonHomePageTextBlock}"
                                                               Text="Customer Order"
                                                               TextWrapping="NoWrap" />
                                                </StackPanel>
                                            </Button>
                                            <ComboBox x:Name="cmbCustomerOrder"
                                                      Grid.Column="2"
                                                      Width="87.31"
                                                      Height="48.2766666666667"
                                                      HorizontalAlignment="Center"
                                                      VerticalAlignment="Center"
                                                      ItemContainerStyle="{DynamicResource ComboBoxItemHomePage}"
                                                      Style="{DynamicResource ComboBoxHomePage}">
                                                <ComboBoxItem>
                                                    <Button x:Name="btnQuotation"
                                                            Command="{Binding OpenViewCommand}"
                                                            CommandParameter="Quotation"
                                                            Height="20"
                                                            HorizontalContentAlignment="Left"
                                                            IsEnabled="{Binding AllowAddSaleQuotation, Mode=OneWay}"
                                                            Style="{DynamicResource ButtonHomePage}">
                                                        <StackPanel x:Name="stkpBtnQuotation"
                                                                    HorizontalAlignment="Center"
                                                                    VerticalAlignment="Center"
                                                                    Orientation="Horizontal">
                                                            <Rectangle x:Name="imgQuotation"
                                                                       Width="18"
                                                                       Height="18"
                                                                       Fill="{DynamicResource SaleQuote}" />
                                                            <TextBlock x:Name="txtblQuotation"
                                                                       Margin="5,0,0,0"
                                                                       HorizontalAlignment="Left"
                                                                       VerticalAlignment="Center"
                                                                       Foreground="Black"
                                                                       Style="{DynamicResource ButtonHomePageTextBlock}"
                                                                       Text="Quotation"
                                                                       TextWrapping="NoWrap" />
                                                        </StackPanel>
                                                    </Button>
                                                </ComboBoxItem>
                                                <ComboBoxItem>
                                                    <Button x:Name="btnLayaway"
                                                            Command="{Binding OpenViewCommand}"
                                                            CommandParameter="Layaway"
                                                            Height="20"
                                                            HorizontalContentAlignment="Left"
                                                            IsEnabled="{Binding AllowAddLayaway, Mode=OneWay}"
                                                            Style="{DynamicResource ButtonHomePage}">
                                                        <StackPanel x:Name="stkpBtnLayaway"
                                                                    HorizontalAlignment="Center"
                                                                    VerticalAlignment="Center"
                                                                    Orientation="Horizontal">
                                                            <Rectangle x:Name="imgLayaway"
                                                                       Width="18"
                                                                       Height="18"
                                                                       Fill="{DynamicResource Layaway}" />
                                                            <TextBlock x:Name="txtblLayaway"
                                                                       Margin="5,0,0,0"
                                                                       HorizontalAlignment="Left"
                                                                       VerticalAlignment="Center"
                                                                       Foreground="Black"
                                                                       Style="{DynamicResource ButtonHomePageTextBlock}"
                                                                       Text="Layaway"
                                                                       TextWrapping="NoWrap" />
                                                        </StackPanel>
                                                    </Button>
                                                </ComboBoxItem>
                                                <ComboBoxItem>
                                                    <Button x:Name="btnWorkOrder"
                                                            Command="{Binding OpenViewCommand}"
                                                            CommandParameter="WorkOrder"
                                                            Height="20"
                                                            HorizontalContentAlignment="Left"
                                                            IsEnabled="{Binding AllowAddWorkOrder, Mode=OneWay}"
                                                            Style="{DynamicResource ButtonHomePage}">
                                                        <StackPanel x:Name="stkpBtnWorkOrder"
                                                                    HorizontalAlignment="Center"
                                                                    VerticalAlignment="Center"
                                                                    Orientation="Horizontal">
                                                            <Rectangle x:Name="imgWorkOrder"
                                                                       Width="18"
                                                                       Height="18"
                                                                       Fill="{DynamicResource WorkOrder}" />
                                                            <TextBlock x:Name="txtblWorkOrder"
                                                                       Margin="5,0,0,0"
                                                                       HorizontalAlignment="Left"
                                                                       VerticalAlignment="Center"
                                                                       Foreground="Black"
                                                                       Style="{DynamicResource ButtonHomePageTextBlock}"
                                                                       Text="WorkOrder"
                                                                       TextWrapping="NoWrap" />
                                                        </StackPanel>
                                                    </Button>
                                                </ComboBoxItem>
                                            </ComboBox>
                                            <ed:BlockArrow Grid.Column="3"
                                                           Height="6"
                                                           VerticalAlignment="Center"
                                                           ArrowBodySize="0.2"
                                                           ArrowheadAngle="53"
                                                           Fill="#FFF4F4F5"
                                                           Orientation="Right" />
                                            <Button x:Name="btnMakeOrder"
                                                    Command="{Binding OpenViewCommand}"
                                                    CommandParameter="SalesOrder"
                                                    Grid.Column="4"
                                                    HorizontalAlignment="Center"
                                                    IsEnabled="{Binding AllowAddSaleOrder, Mode=OneWay}"
                                                    Style="{DynamicResource ButtonHomePage}">
                                                <StackPanel x:Name="stkpBtnMakeOrder"
                                                            HorizontalAlignment="Center"
                                                            VerticalAlignment="Center">
                                                    <Rectangle x:Name="imgMakeOrder"
                                                               Width="30"
                                                               Height="30"
                                                               Fill="{DynamicResource SO}" />
                                                    <TextBlock x:Name="txtblMakeOrder"
                                                               Margin="0,5,0,0"
                                                               VerticalAlignment="Center"
                                                               Style="{DynamicResource ButtonHomePageTextBlock}"
                                                               Text="Make an Order"
                                                               TextWrapping="NoWrap" />
                                                </StackPanel>
                                            </Button>
                                            <ed:BlockArrow Grid.Column="5"
                                                           Height="6"
                                                           VerticalAlignment="Center"
                                                           ArrowBodySize="0.2"
                                                           ArrowheadAngle="53"
                                                           Fill="#FFF4F4F5"
                                                           Orientation="Right" />
                                            <Button x:Name="btnSOReturn"
                                                    Command="{Binding OpenViewCommand}"
                                                    CommandParameter="SalesOrderReturn"
                                                    Grid.Column="6"
                                                    HorizontalAlignment="Center"
                                                    IsEnabled="{Binding AllowAccessSaleOrder, Mode=OneWay}"
                                                    Style="{DynamicResource ButtonHomePage}">
                                                <StackPanel x:Name="stkpBtnSOReturn"
                                                            HorizontalAlignment="Center"
                                                            VerticalAlignment="Center">
                                                    <Rectangle x:Name="imgSOReturn"
                                                               Width="30"
                                                               Height="30"
                                                               Fill="{DynamicResource SOReturnRibbon}" />
                                                    <TextBlock x:Name="txtblSOReturn"
                                                               Margin="0,5,0,0"
                                                               VerticalAlignment="Center"
                                                               Style="{DynamicResource ButtonHomePageTextBlock}"
                                                               Text="Order Return"
                                                               TextWrapping="NoWrap" />
                                                </StackPanel>
                                            </Button>
                                            <Canvas Grid.Row="1"
                                                    HorizontalAlignment="Center">
                                                <Rectangle Width="1"
                                                           Height="26"
                                                           HorizontalAlignment="Center"
                                                           Fill="#FFF4F4F5"
                                                           Stroke="White"
                                                           StrokeDashArray="2" />
                                                <ed:RegularPolygon Width="6"
                                                                   Height="6"
                                                                   Margin="-2.5,21,0,0"
                                                                   Fill="#FFF4F4F5"
                                                                   InnerRadius="1"
                                                                   PointCount="3"
                                                                   RenderTransformOrigin="0.5,0.5"
                                                                   Stretch="Fill">
                                                    <ed:RegularPolygon.RenderTransform>
                                                        <TransformGroup>
                                                            <ScaleTransform />
                                                            <SkewTransform />
                                                            <RotateTransform Angle="180" />
                                                            <TranslateTransform />
                                                        </TransformGroup>
                                                    </ed:RegularPolygon.RenderTransform>
                                                </ed:RegularPolygon>
                                            </Canvas>
                                            <Button x:Name="btnCustomerList"
                                                    Command="{Binding OpenViewCommand}"
                                                    CommandParameter="CustomerList"
                                                    Grid.Row="2"
                                                    HorizontalAlignment="Center"
                                                    IsEnabled="{Binding AllowAccessCustomer, Mode=OneWay}"
                                                    Style="{DynamicResource ButtonHomePage}">
                                                <StackPanel x:Name="stkpBtnCustomerList"
                                                            HorizontalAlignment="Center"
                                                            VerticalAlignment="Center">
                                                    <Rectangle x:Name="imgCustomerList"
                                                               Width="30"
                                                               Height="30"
                                                               Fill="{DynamicResource CustomerList}" />
                                                    <TextBlock x:Name="txtblCustomerList"
                                                               Margin="0,5,0,0"
                                                               VerticalAlignment="Center"
                                                               Style="{DynamicResource ButtonHomePageTextBlock}"
                                                               Text="Customer List"
                                                               TextWrapping="NoWrap" />
                                                </StackPanel>
                                            </Button>
                                            <Canvas Grid.Row="1"
                                                    Grid.Column="2"
                                                    HorizontalAlignment="Center">
                                                <Rectangle Width="1"
                                                           Height="26"
                                                           HorizontalAlignment="Center"
                                                           Fill="#FFF4F4F5"
                                                           Stroke="White"
                                                           StrokeDashArray="2" />
                                                <ed:RegularPolygon Width="6"
                                                                   Height="6"
                                                                   Margin="-2.5,21,0,0"
                                                                   Fill="#FFF4F4F5"
                                                                   InnerRadius="1"
                                                                   PointCount="3"
                                                                   RenderTransformOrigin="0.5,0.5"
                                                                   Stretch="Fill">
                                                    <ed:RegularPolygon.RenderTransform>
                                                        <TransformGroup>
                                                            <ScaleTransform />
                                                            <SkewTransform />
                                                            <RotateTransform Angle="180" />
                                                            <TranslateTransform />
                                                        </TransformGroup>
                                                    </ed:RegularPolygon.RenderTransform>
                                                </ed:RegularPolygon>
                                            </Canvas>
                                            <Button x:Name="btnOrderList"
                                                    Grid.Row="2"
                                                    Grid.Column="2"
                                                    Height="48.2766666666667"
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    Style="{DynamicResource ButtonHomePage}">
                                                <StackPanel x:Name="stkpOrderList"
                                                            IsHitTestVisible="False"
                                                            Orientation="Vertical">
                                                    <Rectangle Width="30"
                                                               Height="30"
                                                               Fill="{DynamicResource OrderList}" />
                                                    <TextBlock x:Name="txtblOrderList"
                                                               Margin="0,5,0,0"
                                                               HorizontalAlignment="Center"
                                                               VerticalAlignment="Center"
                                                               Style="{DynamicResource ButtonHomePageTextBlock}"
                                                               Text="Order List"
                                                               TextWrapping="NoWrap" />
                                                </StackPanel>
                                            </Button>
                                            <ComboBox x:Name="cmbOrderList"
                                                      Grid.Row="2"
                                                      Grid.Column="2"
                                                      Width="57.5933333333333"
                                                      Height="48.2766666666667"
                                                      HorizontalAlignment="Center"
                                                      VerticalAlignment="Center"
                                                      ItemContainerStyle="{DynamicResource ComboBoxItemHomePage}"
                                                      Style="{DynamicResource ComboBoxHomePage}">
                                                <ComboBoxItem>
                                                    <Button x:Name="btnQuotationList"
                                                            Command="{Binding OpenViewCommand}"
                                                            CommandParameter="QuotationList"
                                                            Height="20"
                                                            HorizontalContentAlignment="Left"
                                                            IsEnabled="{Binding AllowAccessSaleQuotation, Mode=OneWay}"
                                                            Style="{DynamicResource ButtonHomePage}">
                                                        <StackPanel x:Name="stkpBtnQuotationList"
                                                                    HorizontalAlignment="Center"
                                                                    VerticalAlignment="Center"
                                                                    Orientation="Horizontal">
                                                            <Rectangle x:Name="imgQuotationList"
                                                                       Width="16"
                                                                       Height="16"
                                                                       Fill="{DynamicResource SaleQuoteList}" />
                                                            <TextBlock x:Name="txtblQuotationList"
                                                                       Margin="5,0,0,0"
                                                                       HorizontalAlignment="Left"
                                                                       VerticalAlignment="Center"
                                                                       Foreground="Black"
                                                                       Style="{DynamicResource ButtonHomePageTextBlock}"
                                                                       Text="Quotation List"
                                                                       TextWrapping="NoWrap" />
                                                        </StackPanel>
                                                    </Button>
                                                </ComboBoxItem>
                                                <ComboBoxItem>
                                                    <Button x:Name="btnLayawayList"
                                                            Command="{Binding OpenViewCommand}"
                                                            CommandParameter="LayawayList"
                                                            Height="20"
                                                            HorizontalContentAlignment="Left"
                                                            IsEnabled="{Binding AllowAccessLayaway, Mode=OneWay}"
                                                            Style="{DynamicResource ButtonHomePage}">
                                                        <StackPanel x:Name="stkpBtnLayawayList"
                                                                    HorizontalAlignment="Center"
                                                                    VerticalAlignment="Center"
                                                                    Orientation="Horizontal">
                                                            <Rectangle x:Name="imgLayawayList"
                                                                       Width="16"
                                                                       Height="16"
                                                                       Fill="{DynamicResource LayawayList}" />
                                                            <TextBlock x:Name="txtblLayawayList"
                                                                       Margin="5,0,0,0"
                                                                       HorizontalAlignment="Left"
                                                                       VerticalAlignment="Center"
                                                                       Foreground="Black"
                                                                       Style="{DynamicResource ButtonHomePageTextBlock}"
                                                                       Text="Layaway List"
                                                                       TextWrapping="NoWrap" />
                                                        </StackPanel>
                                                    </Button>
                                                </ComboBoxItem>
                                                <ComboBoxItem>
                                                    <Button x:Name="btnWorkOrderList"
                                                            Command="{Binding OpenViewCommand}"
                                                            CommandParameter="WorkOrderList"
                                                            Height="20"
                                                            HorizontalContentAlignment="Left"
                                                            IsEnabled="{Binding AllowAccessWorkOrder, Mode=OneWay}"
                                                            Style="{DynamicResource ButtonHomePage}">
                                                        <StackPanel x:Name="stkpBtnWorkOrderList"
                                                                    HorizontalAlignment="Center"
                                                                    VerticalAlignment="Center"
                                                                    Orientation="Horizontal">
                                                            <Rectangle x:Name="imgWorkOrderList"
                                                                       Width="16"
                                                                       Height="16"
                                                                       Fill="{DynamicResource WorkOrderList}" />
                                                            <TextBlock x:Name="txtblWorkOrderList"
                                                                       Margin="5,0,0,0"
                                                                       HorizontalAlignment="Left"
                                                                       VerticalAlignment="Center"
                                                                       Foreground="Black"
                                                                       Style="{DynamicResource ButtonHomePageTextBlock}"
                                                                       Text="Work Order List"
                                                                       TextWrapping="NoWrap" />
                                                        </StackPanel>
                                                    </Button>
                                                </ComboBoxItem>
                                                <ComboBoxItem>
                                                    <Button x:Name="btnSalesOrderList"
                                                            Command="{Binding OpenViewCommand}"
                                                            CommandParameter="SalesOrderList"
                                                            Height="20"
                                                            HorizontalContentAlignment="Left"
                                                            IsEnabled="{Binding AllowAccessSaleOrder, Mode=OneWay}"
                                                            Style="{DynamicResource ButtonHomePage}">
                                                        <StackPanel x:Name="stkpBtnSalesOrderList"
                                                                    HorizontalAlignment="Center"
                                                                    VerticalAlignment="Center"
                                                                    Orientation="Horizontal">
                                                            <Rectangle x:Name="imgSalesOrderLis"
                                                                       Width="16"
                                                                       Height="16"
                                                                       Fill="{DynamicResource SOList}" />
                                                            <TextBlock x:Name="txtblWorkOrderList1"
                                                                       Margin="5,0,0,0"
                                                                       HorizontalAlignment="Left"
                                                                       VerticalAlignment="Center"
                                                                       Foreground="Black"
                                                                       Style="{DynamicResource ButtonHomePageTextBlock}"
                                                                       Text="Sales Order List"
                                                                       TextWrapping="NoWrap" />
                                                        </StackPanel>
                                                    </Button>
                                                </ComboBoxItem>
                                            </ComboBox>
                                            <Canvas Grid.Row="1"
                                                    Grid.Column="4"
                                                    HorizontalAlignment="Center">
                                                <Rectangle Width="1"
                                                           Height="26"
                                                           HorizontalAlignment="Center"
                                                           Fill="#FFF4F4F5"
                                                           Stroke="White"
                                                           StrokeDashArray="2" />
                                                <ed:RegularPolygon Width="6"
                                                                   Height="6"
                                                                   Margin="-2.5,21,0,0"
                                                                   Fill="#FFF4F4F5"
                                                                   InnerRadius="1"
                                                                   PointCount="3"
                                                                   RenderTransformOrigin="0.5,0.5"
                                                                   Stretch="Fill">
                                                    <ed:RegularPolygon.RenderTransform>
                                                        <TransformGroup>
                                                            <ScaleTransform />
                                                            <SkewTransform />
                                                            <RotateTransform Angle="180" />
                                                            <TranslateTransform />
                                                        </TransformGroup>
                                                    </ed:RegularPolygon.RenderTransform>
                                                </ed:RegularPolygon>
                                            </Canvas>
                                            <Button x:Name="btnLockOrder"
                                                    Command="{Binding OpenViewCommand}"
                                                    CommandParameter="SalesOrderLockedList"
                                                    Grid.Row="2"
                                                    Grid.Column="4"
                                                    HorizontalAlignment="Center"
                                                    Style="{DynamicResource ButtonHomePage}">
                                                <StackPanel x:Name="stkpBtnLockOrder"
                                                            HorizontalAlignment="Center"
                                                            VerticalAlignment="Center">
                                                    <Rectangle x:Name="imgLockOrder"
                                                               Width="30"
                                                               Height="30"
                                                               Fill="{DynamicResource SOLock}" />
                                                    <TextBlock x:Name="txtblLockedOrder"
                                                               Margin="0,5,0,0"
                                                               VerticalAlignment="Center"
                                                               Style="{DynamicResource ButtonHomePageTextBlock}"
                                                               Text="Locked Order"
                                                               TextWrapping="NoWrap" />
                                                </StackPanel>
                                            </Button>
                                            <Button x:Name="btnRewardSetup"
                                                    Command="{Binding OpenViewCommand}"
                                                    CommandParameter="RewardSetup"
                                                    Grid.Row="2"
                                                    Grid.Column="6"
                                                    HorizontalAlignment="Center"
                                                    IsEnabled="{Binding AllowAccessReward, Mode=OneWay}"
                                                    Style="{DynamicResource ButtonHomePage}">
                                                <StackPanel x:Name="stkpBtnRewardSetup"
                                                            HorizontalAlignment="Center"
                                                            VerticalAlignment="Center">
                                                    <Rectangle x:Name="imgRewardSetup"
                                                               Width="30"
                                                               Height="30"
                                                               Fill="{DynamicResource RewardSetup}" />
                                                    <TextBlock x:Name="txtblRewardSetup"
                                                               Margin="0,5,0,0"
                                                               VerticalAlignment="Center"
                                                               Style="{DynamicResource ButtonHomePageTextBlock}"
                                                               Text="Reward Setup"
                                                               TextWrapping="NoWrap" />
                                                </StackPanel>
                                            </Button>
                                        </Grid>
                                    </Border>
                                    <Border x:Name="brdPurchase"
                                            Grid.Row="2"
                                            Background="{DynamicResource ButtonBarSearchBackground}"
                                            BorderBrush="{DynamicResource ButtonBarSearchBorder}"
                                            BorderThickness="1"
                                            SnapsToDevicePixels="True">
                                        <TextBlock x:Name="txtblPurchase"
                                                   HorizontalAlignment="Center"
                                                   VerticalAlignment="Center"
                                                   Style="{DynamicResource ButtonBarSearchTextBlock}"
                                                   Text="Purchase"
                                                   TextWrapping="NoWrap">
                                            <TextBlock.LayoutTransform>
                                                <TransformGroup>
                                                    <ScaleTransform />
                                                    <SkewTransform />
                                                    <RotateTransform Angle="-90" />
                                                    <TranslateTransform />
                                                </TransformGroup>
                                            </TextBlock.LayoutTransform>
                                        </TextBlock>
                                    </Border>
                                    <Border x:Name="brdContentPurchase"
                                            Grid.Row="2"
                                            Grid.Column="1"
                                            Background="#19FFFFFF"
                                            BorderBrush="White"
                                            BorderThickness="0,1,1,1"
                                            SnapsToDevicePixels="True">
                                        <Grid x:Name="grdContentPurchase1"
                                              Margin="0,5">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="0.5*" />
                                                <RowDefinition Height="26" />
                                                <RowDefinition Height="0.5*" />
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="105" />
                                                <ColumnDefinition Width="60" />
                                                <ColumnDefinition Width="105" />
                                                <ColumnDefinition Width="60" />
                                                <ColumnDefinition Width="105" />
                                                <ColumnDefinition Width="60" />
                                                <ColumnDefinition Width="105" />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                            <Button x:Name="btnVendor"
                                                    Command="{Binding OpenViewCommand}"
                                                    CommandParameter="Vendor"
                                                    HorizontalAlignment="Center"
                                                    IsEnabled="{Binding AllowAddVendor, Mode=OneWay}"
                                                    Style="{DynamicResource ButtonHomePage}">
                                                <StackPanel x:Name="stkpBtnVendor"
                                                            HorizontalAlignment="Center"
                                                            VerticalAlignment="Center">
                                                    <Rectangle x:Name="imgVendor"
                                                               Width="30"
                                                               Height="30"
                                                               Fill="{DynamicResource Vendor}" />
                                                    <TextBlock x:Name="txtblVendor"
                                                               Margin="0,5,0,0"
                                                               VerticalAlignment="Center"
                                                               Style="{DynamicResource ButtonHomePageTextBlock}"
                                                               Text="Vendor"
                                                               TextWrapping="NoWrap" />
                                                </StackPanel>
                                            </Button>
                                            <ed:BlockArrow Grid.Column="1"
                                                           Height="6"
                                                           VerticalAlignment="Center"
                                                           ArrowBodySize="0.2"
                                                           ArrowheadAngle="53"
                                                           Fill="#FFF4F4F5"
                                                           Orientation="Right" />
                                            <Button x:Name="btnPurchaseOrder"
                                                    Command="{Binding OpenViewCommand}"
                                                    CommandParameter="PurchaseOrder"
                                                    Grid.Column="2"
                                                    HorizontalAlignment="Center"
                                                    IsEnabled="{Binding AllowAddPurchaseOrder, Mode=OneWay}"
                                                    Style="{DynamicResource ButtonHomePage}">
                                                <StackPanel x:Name="stkpBtnPurchaseOrder"
                                                            HorizontalAlignment="Center"
                                                            VerticalAlignment="Center">
                                                    <Rectangle x:Name="imgPurchaseOrder"
                                                               Width="30"
                                                               Height="30"
                                                               Fill="{DynamicResource PO}" />
                                                    <TextBlock x:Name="txtblPurchaseOrder"
                                                               Margin="0,5,0,0"
                                                               VerticalAlignment="Center"
                                                               Style="{DynamicResource ButtonHomePageTextBlock}"
                                                               Text="Purchase Order"
                                                               TextWrapping="NoWrap" />
                                                </StackPanel>
                                            </Button>
                                            <ed:BlockArrow Grid.Column="3"
                                                           Height="6"
                                                           VerticalAlignment="Center"
                                                           ArrowBodySize="0.2"
                                                           ArrowheadAngle="53"
                                                           Fill="#FFF4F4F5"
                                                           Orientation="Right" />
                                            <Button x:Name="btnReceiving"
                                                    Grid.Column="4"
                                                    HorizontalAlignment="Center"
                                                    Style="{DynamicResource ButtonHomePage}">
                                                <StackPanel x:Name="stkpBtnReceiving"
                                                            HorizontalAlignment="Center"
                                                            VerticalAlignment="Center">
                                                    <Rectangle x:Name="imgReceiving"
                                                               Width="30"
                                                               Height="30"
                                                               Fill="{DynamicResource Receive}" />
                                                    <TextBlock x:Name="txtblReceiving"
                                                               Margin="0,5,0,0"
                                                               VerticalAlignment="Center"
                                                               Style="{DynamicResource ButtonHomePageTextBlock}"
                                                               Text="Receiving"
                                                               TextWrapping="NoWrap" />
                                                </StackPanel>
                                            </Button>
                                            <ed:BlockArrow Grid.Column="5"
                                                           Height="6"
                                                           VerticalAlignment="Center"
                                                           ArrowBodySize="0.2"
                                                           ArrowheadAngle="53"
                                                           Fill="#FFF4F4F5"
                                                           Orientation="Right" />
                                            <Button x:Name="btnPOReturn"
                                                    Command="{Binding OpenViewCommand}"
                                                    CommandParameter="PurchaseOrderReturn"
                                                    Grid.Column="6"
                                                    HorizontalAlignment="Center"
                                                    IsEnabled="{Binding AllowAddPurchaseOrder, Mode=OneWay}"
                                                    Style="{DynamicResource ButtonHomePage}">
                                                <StackPanel x:Name="stkpBtnPOReturn"
                                                            HorizontalAlignment="Center"
                                                            VerticalAlignment="Center">
                                                    <Rectangle x:Name="imgPOReturn"
                                                               Width="30"
                                                               Height="30"
                                                               Fill="{DynamicResource POReturnRibbon}" />
                                                    <TextBlock x:Name="txtblPOReturn"
                                                               Margin="0,5,0,0"
                                                               VerticalAlignment="Center"
                                                               Style="{DynamicResource ButtonHomePageTextBlock}"
                                                               Text="Order Return"
                                                               TextWrapping="NoWrap" />
                                                </StackPanel>
                                            </Button>
                                            <Canvas Grid.Row="1"
                                                    HorizontalAlignment="Center">
                                                <Rectangle Width="1"
                                                           Height="26"
                                                           HorizontalAlignment="Center"
                                                           Fill="#FFF4F4F5"
                                                           Stroke="White"
                                                           StrokeDashArray="2" />
                                                <ed:RegularPolygon Width="6"
                                                                   Height="6"
                                                                   Margin="-2.5,21,0,0"
                                                                   Fill="#FFF4F4F5"
                                                                   InnerRadius="1"
                                                                   PointCount="3"
                                                                   RenderTransformOrigin="0.5,0.5"
                                                                   Stretch="Fill">
                                                    <ed:RegularPolygon.RenderTransform>
                                                        <TransformGroup>
                                                            <ScaleTransform />
                                                            <SkewTransform />
                                                            <RotateTransform Angle="180" />
                                                            <TranslateTransform />
                                                        </TransformGroup>
                                                    </ed:RegularPolygon.RenderTransform>
                                                </ed:RegularPolygon>
                                            </Canvas>
                                            <Button x:Name="btnVendorList"
                                                    Command="{Binding OpenViewCommand}"
                                                    CommandParameter="VendorList"
                                                    Grid.Row="2"
                                                    HorizontalAlignment="Center"
                                                    IsEnabled="{Binding AllowAccessVendor, Mode=OneWay}"
                                                    Style="{DynamicResource ButtonHomePage}">
                                                <StackPanel x:Name="stkpBtnVendorList"
                                                            HorizontalAlignment="Center"
                                                            VerticalAlignment="Center">
                                                    <Rectangle x:Name="imgVendorList"
                                                               Width="30"
                                                               Height="30"
                                                               Fill="{DynamicResource VendorList}" />
                                                    <TextBlock x:Name="txtblVendorList"
                                                               Margin="0,5,0,0"
                                                               VerticalAlignment="Center"
                                                               Style="{DynamicResource ButtonHomePageTextBlock}"
                                                               Text="Vendor List"
                                                               TextWrapping="NoWrap" />
                                                </StackPanel>
                                            </Button>
                                            <Canvas Grid.Row="1"
                                                    Grid.Column="2"
                                                    HorizontalAlignment="Center">
                                                <Rectangle Width="1"
                                                           Height="26"
                                                           HorizontalAlignment="Center"
                                                           Fill="#FFF4F4F5"
                                                           Stroke="White"
                                                           StrokeDashArray="2" />
                                                <ed:RegularPolygon Width="6"
                                                                   Height="6"
                                                                   Margin="-2.5,21,0,0"
                                                                   Fill="#FFF4F4F5"
                                                                   InnerRadius="1"
                                                                   PointCount="3"
                                                                   RenderTransformOrigin="0.5,0.5"
                                                                   Stretch="Fill">
                                                    <ed:RegularPolygon.RenderTransform>
                                                        <TransformGroup>
                                                            <ScaleTransform />
                                                            <SkewTransform />
                                                            <RotateTransform Angle="180" />
                                                            <TranslateTransform />
                                                        </TransformGroup>
                                                    </ed:RegularPolygon.RenderTransform>
                                                </ed:RegularPolygon>
                                            </Canvas>
                                            <Button x:Name="btnPurchaseOrderList"
                                                    Command="{Binding OpenViewCommand}"
                                                    CommandParameter="PurchaseOrderList"
                                                    Grid.Row="2"
                                                    Grid.Column="2"
                                                    HorizontalAlignment="Center"
                                                    IsEnabled="{Binding AllowAccessPurchaseOrder, Mode=OneWay}"
                                                    Style="{DynamicResource ButtonHomePage}">
                                                <StackPanel x:Name="stkpBtnPurchaseOrderList"
                                                            HorizontalAlignment="Center"
                                                            VerticalAlignment="Center">
                                                    <Rectangle x:Name="imgPurchaseOrderList"
                                                               Width="30"
                                                               Height="30"
                                                               Fill="{DynamicResource POList}" />
                                                    <TextBlock x:Name="txtblPurchaseOrderList"
                                                               Margin="0,5,0,0"
                                                               VerticalAlignment="Center"
                                                               Style="{DynamicResource ButtonHomePageTextBlock}"
                                                               Text="Purchase Order List"
                                                               TextWrapping="NoWrap" />
                                                </StackPanel>
                                            </Button>
                                            <Canvas Grid.Row="1"
                                                    Grid.Column="4"
                                                    HorizontalAlignment="Center">
                                                <Rectangle Width="1"
                                                           Height="26"
                                                           HorizontalAlignment="Center"
                                                           Fill="#FFF4F4F5"
                                                           Stroke="White"
                                                           StrokeDashArray="2" />
                                                <ed:RegularPolygon Width="6"
                                                                   Height="6"
                                                                   Margin="-2.5,21,0,0"
                                                                   Fill="#FFF4F4F5"
                                                                   InnerRadius="1"
                                                                   PointCount="3"
                                                                   RenderTransformOrigin="0.5,0.5"
                                                                   Stretch="Fill">
                                                    <ed:RegularPolygon.RenderTransform>
                                                        <TransformGroup>
                                                            <ScaleTransform />
                                                            <SkewTransform />
                                                            <RotateTransform Angle="180" />
                                                            <TranslateTransform />
                                                        </TransformGroup>
                                                    </ed:RegularPolygon.RenderTransform>
                                                </ed:RegularPolygon>
                                            </Canvas>
                                            <Button x:Name="btnLockOrder1"
                                                    Command="{Binding OpenViewCommand}"
                                                    CommandParameter="PurchaseOrderLockedList"
                                                    Grid.Row="2"
                                                    Grid.Column="4"
                                                    HorizontalAlignment="Center"
                                                    IsEnabled="{Binding AllowAccessPurchaseOrder, Mode=OneWay}"
                                                    Style="{DynamicResource ButtonHomePage}">
                                                <StackPanel x:Name="stkpBtnLockOrder1"
                                                            HorizontalAlignment="Center"
                                                            VerticalAlignment="Center">
                                                    <Rectangle x:Name="imgLockOrder1"
                                                               Width="30"
                                                               Height="30"
                                                               Fill="{DynamicResource POLock}" />
                                                    <TextBlock x:Name="txtblLockOrder1"
                                                               Margin="0,5,0,0"
                                                               VerticalAlignment="Center"
                                                               Style="{DynamicResource ButtonHomePageTextBlock}"
                                                               Text="Locked Order"
                                                               TextWrapping="NoWrap" />
                                                </StackPanel>
                                            </Button>
                                            <Button x:Name="btnProductList"
                                                    Command="{Binding OpenViewCommand}"
                                                    CommandParameter="ProductList"
                                                    Grid.Row="2"
                                                    Grid.Column="6"
                                                    HorizontalAlignment="Center"
                                                    IsEnabled="{Binding AllowAccessProduct, Mode=OneWay}"
                                                    Style="{DynamicResource ButtonHomePage}">
                                                <StackPanel x:Name="stkpBtnProductList"
                                                            HorizontalAlignment="Center"
                                                            VerticalAlignment="Center">
                                                    <Rectangle x:Name="imgProductList"
                                                               Width="30"
                                                               Height="30"
                                                               Fill="{DynamicResource ProductList}" />
                                                    <TextBlock x:Name="txtblProductList"
                                                               Margin="0,5,0,0"
                                                               VerticalAlignment="Center"
                                                               Style="{DynamicResource ButtonHomePageTextBlock}"
                                                               Text="Product List"
                                                               TextWrapping="NoWrap" />
                                                </StackPanel>
                                            </Button>
                                        </Grid>
                                    </Border>
                                    <Border x:Name="brdInventory"
                                            Grid.Row="4"
                                            Background="{DynamicResource ButtonBarSearchBackground}"
                                            BorderBrush="{DynamicResource ButtonBarSearchBorder}"
                                            BorderThickness="1"
                                            SnapsToDevicePixels="True">
                                        <TextBlock x:Name="txtblInventory"
                                                   HorizontalAlignment="Center"
                                                   VerticalAlignment="Center"
                                                   Style="{DynamicResource ButtonBarSearchTextBlock}"
                                                   Text="Inventory"
                                                   TextWrapping="NoWrap">
                                            <TextBlock.LayoutTransform>
                                                <TransformGroup>
                                                    <ScaleTransform />
                                                    <SkewTransform />
                                                    <RotateTransform Angle="-90" />
                                                    <TranslateTransform />
                                                </TransformGroup>
                                            </TextBlock.LayoutTransform>
                                        </TextBlock>
                                    </Border>
                                    <Border x:Name="brdContentInventory"
                                            Grid.Row="4"
                                            Grid.Column="1"
                                            Background="#19FFFFFF"
                                            BorderBrush="White"
                                            BorderThickness="0,1,1,1"
                                            SnapsToDevicePixels="True">
                                        <Grid x:Name="grdContentInventory1"
                                              Margin="0,5">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="0.5*" />
                                                <RowDefinition Height="26" />
                                                <RowDefinition Height="0.5*" />
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="105.2" />
                                                <ColumnDefinition Width="60" />
                                                <ColumnDefinition Width="105.2" />
                                                <ColumnDefinition Width="60" />
                                                <ColumnDefinition Width="105.2" />
                                                <ColumnDefinition Width="60" />
                                                <ColumnDefinition Width="105.2" />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                            <Button x:Name="btnProduct"
                                                    Command="{Binding OpenViewCommand}"
                                                    CommandParameter="Product"
                                                    HorizontalAlignment="Center"
                                                    IsEnabled="{Binding AllowAddProduct, Mode=OneWay}"
                                                    Style="{DynamicResource ButtonHomePage}">
                                                <StackPanel x:Name="stkpBtnProduct"
                                                            HorizontalAlignment="Center"
                                                            VerticalAlignment="Center">
                                                    <Rectangle x:Name="imgProduct"
                                                               Width="30"
                                                               Height="30"
                                                               Fill="{DynamicResource Product}" />
                                                    <TextBlock x:Name="txtblProduct"
                                                               Margin="0,5,0,0"
                                                               VerticalAlignment="Center"
                                                               Style="{DynamicResource ButtonHomePageTextBlock}"
                                                               Text="Product"
                                                               TextWrapping="NoWrap" />
                                                </StackPanel>
                                            </Button>
                                            <ed:BlockArrow Grid.Column="1"
                                                           Height="6"
                                                           VerticalAlignment="Center"
                                                           ArrowBodySize="0.2"
                                                           ArrowheadAngle="53"
                                                           Fill="#FFF4F4F5"
                                                           Orientation="Right" />
                                            <Button x:Name="btnCountStock"
                                                    Command="{Binding OpenViewCommand}"
                                                    CommandParameter="CountSheet"
                                                    Grid.Column="2"
                                                    HorizontalAlignment="Center"
                                                    IsEnabled="{Binding AllowAddCountSheet, Mode=OneWay}"
                                                    Style="{DynamicResource ButtonHomePage}">
                                                <StackPanel x:Name="stkpBtnCountStock"
                                                            HorizontalAlignment="Center"
                                                            VerticalAlignment="Center">
                                                    <Rectangle x:Name="imgCountStock"
                                                               Width="30"
                                                               Height="30"
                                                               Fill="{DynamicResource CountStock}" />
                                                    <TextBlock x:Name="txtblCountStock"
                                                               Margin="0,5,0,0"
                                                               VerticalAlignment="Center"
                                                               Style="{DynamicResource ButtonHomePageTextBlock}"
                                                               Text="Count Stock"
                                                               TextWrapping="NoWrap" />
                                                </StackPanel>
                                            </Button>
                                            <ed:BlockArrow Grid.Column="3"
                                                           Height="6"
                                                           VerticalAlignment="Center"
                                                           ArrowBodySize="0.2"
                                                           ArrowheadAngle="53"
                                                           Fill="#FFF4F4F5"
                                                           Orientation="Right" />
                                            <Button x:Name="btnCurrentStock"
                                                    Command="{Binding OpenViewCommand}"
                                                    CommandParameter="CurrentStock"
                                                    Grid.Column="4"
                                                    HorizontalAlignment="Center"
                                                    IsEnabled="{Binding AllowViewCurrentStock, Mode=OneWay}"
                                                    Style="{DynamicResource ButtonHomePage}">
                                                <StackPanel x:Name="stkpBtnCurrentStock"
                                                            HorizontalAlignment="Center"
                                                            VerticalAlignment="Center">
                                                    <Rectangle x:Name="imgCurrentStock"
                                                               Width="30"
                                                               Height="30"
                                                               Fill="{DynamicResource CurrentStock}" />
                                                    <TextBlock x:Name="txtblCurrentStock"
                                                               Margin="0,5,0,0"
                                                               VerticalAlignment="Center"
                                                               Style="{DynamicResource ButtonHomePageTextBlock}"
                                                               Text="Current Stock"
                                                               TextWrapping="NoWrap" />
                                                </StackPanel>
                                            </Button>
                                            <Button x:Name="btnCostAdjustment"
                                                    Command="{Binding OpenViewCommand}"
                                                    CommandParameter="CostAdjustment"
                                                    Grid.Column="6"
                                                    HorizontalAlignment="Center"
                                                    IsEnabled="{Binding AllowAccessCostAdjustment, Mode=OneWay}"
                                                    Style="{DynamicResource ButtonHomePage}">
                                                <StackPanel x:Name="stkpBtnCostAdjustment"
                                                            HorizontalAlignment="Center"
                                                            VerticalAlignment="Center">
                                                    <Rectangle x:Name="imgCostAdjustment"
                                                               Width="30"
                                                               Height="30"
                                                               Fill="{DynamicResource CostAdjustment}" />
                                                    <TextBlock x:Name="txtblCostAdjustment"
                                                               Margin="0,5,0,0"
                                                               VerticalAlignment="Center"
                                                               Style="{DynamicResource ButtonHomePageTextBlock}"
                                                               Text="Cost Adjustment"
                                                               TextWrapping="NoWrap" />
                                                </StackPanel>
                                            </Button>
                                            <Canvas Grid.Row="1"
                                                    HorizontalAlignment="Center">
                                                <Rectangle Width="1"
                                                           Height="26"
                                                           HorizontalAlignment="Center"
                                                           Fill="#FFF4F4F5"
                                                           Stroke="White"
                                                           StrokeDashArray="2" />
                                                <ed:RegularPolygon Width="6"
                                                                   Height="6"
                                                                   Margin="-2.5,21,0,0"
                                                                   Fill="#FFF4F4F5"
                                                                   InnerRadius="1"
                                                                   PointCount="3"
                                                                   RenderTransformOrigin="0.5,0.5"
                                                                   Stretch="Fill">
                                                    <ed:RegularPolygon.RenderTransform>
                                                        <TransformGroup>
                                                            <ScaleTransform />
                                                            <SkewTransform />
                                                            <RotateTransform Angle="180" />
                                                            <TranslateTransform />
                                                        </TransformGroup>
                                                    </ed:RegularPolygon.RenderTransform>
                                                </ed:RegularPolygon>
                                            </Canvas>
                                            <Button x:Name="btnProductList1"
                                                    Command="{Binding OpenViewCommand}"
                                                    CommandParameter="ProductList"
                                                    Grid.Row="2"
                                                    HorizontalAlignment="Center"
                                                    IsEnabled="{Binding AllowAccessProduct, Mode=OneWay}"
                                                    Style="{DynamicResource ButtonHomePage}">
                                                <StackPanel x:Name="stkpBtnProductList1"
                                                            HorizontalAlignment="Center"
                                                            VerticalAlignment="Center">
                                                    <Rectangle x:Name="imgProductList1"
                                                               Width="30"
                                                               Height="30"
                                                               Fill="{DynamicResource ProductList}" />
                                                    <TextBlock x:Name="txtblProductList1"
                                                               Margin="0,5,0,0"
                                                               VerticalAlignment="Center"
                                                               Style="{DynamicResource ButtonHomePageTextBlock}"
                                                               Text="Product List"
                                                               TextWrapping="NoWrap" />
                                                </StackPanel>
                                            </Button>
                                            <Canvas Grid.Row="1"
                                                    Grid.Column="2"
                                                    HorizontalAlignment="Center">
                                                <Rectangle Width="1"
                                                           Height="26"
                                                           HorizontalAlignment="Center"
                                                           Fill="#FFF4F4F5"
                                                           Stroke="White"
                                                           StrokeDashArray="2" />
                                                <ed:RegularPolygon Width="6"
                                                                   Height="6"
                                                                   Margin="-2.5,21,0,0"
                                                                   Fill="#FFF4F4F5"
                                                                   InnerRadius="1"
                                                                   PointCount="3"
                                                                   RenderTransformOrigin="0.5,0.5"
                                                                   Stretch="Fill">
                                                    <ed:RegularPolygon.RenderTransform>
                                                        <TransformGroup>
                                                            <ScaleTransform />
                                                            <SkewTransform />
                                                            <RotateTransform Angle="180" />
                                                            <TranslateTransform />
                                                        </TransformGroup>
                                                    </ed:RegularPolygon.RenderTransform>
                                                </ed:RegularPolygon>
                                            </Canvas>
                                            <Button x:Name="btnCountStockList"
                                                    Command="{Binding OpenViewCommand}"
                                                    CommandParameter="CountSheetList"
                                                    Grid.Row="2"
                                                    Grid.Column="2"
                                                    HorizontalAlignment="Center"
                                                    Style="{DynamicResource ButtonHomePage}">
                                                <StackPanel x:Name="stkpBtnCountStockList"
                                                            HorizontalAlignment="Center"
                                                            VerticalAlignment="Center">
                                                    <Rectangle x:Name="imgCountStockList"
                                                               Width="30"
                                                               Height="30"
                                                               Fill="{DynamicResource CountStockList}" />
                                                    <TextBlock x:Name="txtblCountStockList"
                                                               Margin="0,5,0,0"
                                                               VerticalAlignment="Center"
                                                               Style="{DynamicResource ButtonHomePageTextBlock}"
                                                               Text="Count Stock List"
                                                               TextWrapping="NoWrap" />
                                                </StackPanel>
                                            </Button>
                                            <Canvas Grid.Row="1"
                                                    Grid.Column="4"
                                                    HorizontalAlignment="Center">
                                                <Rectangle Width="1"
                                                           Height="26"
                                                           HorizontalAlignment="Center"
                                                           Fill="#FFF4F4F5"
                                                           Stroke="White"
                                                           StrokeDashArray="2" />
                                                <ed:RegularPolygon Width="6"
                                                                   Height="6"
                                                                   Margin="-2.5,21,0,0"
                                                                   Fill="#FFF4F4F5"
                                                                   InnerRadius="1"
                                                                   PointCount="3"
                                                                   RenderTransformOrigin="0.5,0.5"
                                                                   Stretch="Fill">
                                                    <ed:RegularPolygon.RenderTransform>
                                                        <TransformGroup>
                                                            <ScaleTransform />
                                                            <SkewTransform />
                                                            <RotateTransform Angle="180" />
                                                            <TranslateTransform />
                                                        </TransformGroup>
                                                    </ed:RegularPolygon.RenderTransform>
                                                </ed:RegularPolygon>
                                            </Canvas>
                                            <Button x:Name="btnTransferStock"
                                                    Command="{Binding OpenViewCommand}"
                                                    CommandParameter="TransferStock"
                                                    Grid.Row="2"
                                                    Grid.Column="4"
                                                    HorizontalAlignment="Center"
                                                    IsEnabled="{Binding AllowAddTransferStock, Mode=OneWay}"
                                                    Style="{DynamicResource ButtonHomePage}">
                                                <StackPanel x:Name="stkpBtnTransferStock"
                                                            HorizontalAlignment="Center"
                                                            VerticalAlignment="Center">
                                                    <Rectangle x:Name="imgTransferStock"
                                                               Width="30"
                                                               Height="30"
                                                               Fill="{DynamicResource TransferStock}" />
                                                    <TextBlock x:Name="txtblTransferStock"
                                                               Margin="0,5,0,0"
                                                               VerticalAlignment="Center"
                                                               Style="{DynamicResource ButtonHomePageTextBlock}"
                                                               Text="Transfer Stock"
                                                               TextWrapping="NoWrap" />
                                                </StackPanel>
                                            </Button>
                                            <Button x:Name="btnQtyAdjustment"
                                                    Command="{Binding OpenViewCommand}"
                                                    CommandParameter="QuantityAdjustment"
                                                    Grid.Row="2"
                                                    Grid.Column="6"
                                                    HorizontalAlignment="Center"
                                                    IsEnabled="{Binding AllowAccessQuantityAdjustment, Mode=OneWay}"
                                                    Style="{DynamicResource ButtonHomePage}">
                                                <StackPanel x:Name="stkpBtnQtyAdjustment"
                                                            HorizontalAlignment="Center"
                                                            VerticalAlignment="Center">
                                                    <Rectangle x:Name="imgQtyAdjustment"
                                                               Width="30"
                                                               Height="30"
                                                               Fill="{DynamicResource QuantityAdjustment}" />
                                                    <TextBlock x:Name="txtblQtyAdjustment"
                                                               Margin="0,5,0,0"
                                                               VerticalAlignment="Center"
                                                               Style="{DynamicResource ButtonHomePageTextBlock}"
                                                               Text="Qty Adjustment"
                                                               TextWrapping="NoWrap" />
                                                </StackPanel>
                                            </Button>
                                        </Grid>
                                    </Border>
                                    <Border Grid.Row="5"
                                            Margin="0,0.201,0,-0.201"
                                            Background="#FFE1E1E1"
                                            BorderBrush="White"
                                            BorderThickness="0,0,1,0"
                                            SnapsToDevicePixels="True">
                                        <TextBlock x:Name="txtblShowSearch4"
                                                   HorizontalAlignment="Center"
                                                   VerticalAlignment="Center"
                                                   Style="{DynamicResource ButtonBarSearchTextBlock}"
                                                   Text="Employee"
                                                   TextWrapping="NoWrap">
                                            <TextBlock.LayoutTransform>
                                                <TransformGroup>
                                                    <ScaleTransform />
                                                    <SkewTransform />
                                                    <RotateTransform Angle="-90" />
                                                    <TranslateTransform />
                                                </TransformGroup>
                                            </TextBlock.LayoutTransform>
                                        </TextBlock>
                                    </Border>
                                </Grid>
                                <!--  Task Reminder  -->
                                <Border x:Name="brdTask"
                                        Grid.Column="1"
                                        Margin="5"
                                        Background="#19FFFFFF"
                                        BorderBrush="White"
                                        BorderThickness="1">
                                    <Grid x:Name="grdTask">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="50" />
                                            <RowDefinition />
                                            <RowDefinition Height="40" />
                                        </Grid.RowDefinitions>
                                        <Grid x:Name="grdTitle"
                                              Margin="5,0">
                                            <Grid x:Name="grdContentTitle"
                                                  Margin="0,5,28,5"
                                                  Visibility="{Binding IsOpenSearch, Mode=OneWay, Converter={StaticResource VisibleWhenFalseConverter}}">
                                                <Rectangle x:Name="imgAlarm"
                                                           Width="32"
                                                           Height="32"
                                                           HorizontalAlignment="Left"
                                                           VerticalAlignment="Center"
                                                           Fill="{DynamicResource TaskReminder}" />
                                                <TextBlock x:Name="txtblToday"
                                                           Margin="35,0,0,0"
                                                           HorizontalAlignment="Left"
                                                           VerticalAlignment="Center"
                                                           Style="{DynamicResource TextBlockNormal}"
                                                           Text="{Binding LoadStatus, Mode=OneWay}"
                                                           TextWrapping="NoWrap" />
                                                <Button x:Name="btnToday"
                                                        Command="{Binding ChangeLoadStatusCommand}"
                                                        CommandParameter="Today"
                                                        Margin="0,0,52,0"
                                                        HorizontalAlignment="Right"
                                                        VerticalAlignment="Center"
                                                        HorizontalContentAlignment="Stretch"
                                                        Style="{DynamicResource ButtonHomePage}">
                                                    <Border x:Name="brdToday"
                                                            Width="47"
                                                            Height="40"
                                                            Background="#19FFFFFF"
                                                            BorderBrush="White"
                                                            BorderThickness="1"
                                                            CornerRadius="2">
                                                        <Grid x:Name="grdToday">
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition />
                                                                <RowDefinition Height="14" />
                                                            </Grid.RowDefinitions>
                                                            <TextBlock x:Name="txtblBindingToday"
                                                                       HorizontalAlignment="Center"
                                                                       VerticalAlignment="Center"
                                                                       FontSize="8.667"
                                                                       Style="{DynamicResource ButtonHomePageTextBlock}"
                                                                       Text="{Binding CountTodayTasks, Mode=OneWay}"
                                                                       TextWrapping="NoWrap" />
                                                            <Border x:Name="brdContentToday"
                                                                    Grid.Row="3"
                                                                    Background="#33FFFFFF"
                                                                    BorderBrush="White"
                                                                    BorderThickness="0,1,0,0"
                                                                    CornerRadius="0,0,1,1">
                                                                <TextBlock x:Name="txtblToday1"
                                                                           HorizontalAlignment="Center"
                                                                           VerticalAlignment="Center"
                                                                           FontSize="8.667"
                                                                           Foreground="White"
                                                                           Style="{DynamicResource ButtonHomePageTextBlock}"
                                                                           Text="TODAY"
                                                                           TextWrapping="NoWrap" />
                                                            </Border>
                                                        </Grid>
                                                    </Border>
                                                </Button>
                                                <Button x:Name="btnAllTask"
                                                        Command="{Binding ChangeLoadStatusCommand}"
                                                        CommandParameter="All Tasks"
                                                        HorizontalAlignment="Right"
                                                        VerticalAlignment="Center"
                                                        Style="{DynamicResource ButtonHomePage}">
                                                    <Border x:Name="brdAllTask"
                                                            Width="47"
                                                            Height="40"
                                                            Background="#19FFFFFF"
                                                            BorderBrush="White"
                                                            BorderThickness="1"
                                                            CornerRadius="2">
                                                        <Grid x:Name="grdAllTask">
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition />
                                                                <RowDefinition Height="14" />
                                                            </Grid.RowDefinitions>
                                                            <TextBlock x:Name="txtblBindingAllTask"
                                                                       HorizontalAlignment="Center"
                                                                       VerticalAlignment="Center"
                                                                       FontSize="8.667"
                                                                       Style="{DynamicResource ButtonHomePageTextBlock}"
                                                                       Text="{Binding CountAllTasks, Mode=OneWay}"
                                                                       TextWrapping="NoWrap" />
                                                            <Border x:Name="brdContentAllTask"
                                                                    Grid.Row="3"
                                                                    Background="#33FFFFFF"
                                                                    BorderBrush="White"
                                                                    BorderThickness="0,1,0,0"
                                                                    CornerRadius="0,0,1,1">
                                                                <TextBlock x:Name="txtblAllTasks"
                                                                           HorizontalAlignment="Center"
                                                                           VerticalAlignment="Center"
                                                                           FontSize="8.667"
                                                                           Foreground="White"
                                                                           Style="{DynamicResource ButtonHomePageTextBlock}"
                                                                           Text="ALL TASKS"
                                                                           TextWrapping="NoWrap" />
                                                            </Border>
                                                        </Grid>
                                                    </Border>
                                                </Button>
                                            </Grid>
                                            <Grid x:Name="grdContentTitleSearch"
                                                  Height="25"
                                                  Margin="0,0,28,0"
                                                  d:IsHidden="True"
                                                  Visibility="{Binding IsOpenSearch, Mode=OneWay, Converter={StaticResource CollapsedWhenFalseConverter}}">
                                                <control:WatermarkTextBox x:Name="txtKeyword"
                                                                          Margin="0,2"
                                                                          VerticalContentAlignment="Center"
                                                                          BorderBrush="{DynamicResource TextBoxCanlendarComboboxBorderBrush}"
                                                                          FontStyle="Italic"
                                                                          Padding="20,0,2,0"
                                                                          Text="{Binding Keyword, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                                          TextWrapping="NoWrap"
                                                                          Watermark="{DynamicResource C135}">
                                                    <control:WatermarkTextBox.InputBindings>
                                                        <KeyBinding Key="Enter"
                                                                    Command="{Binding SearchPOCommand}" />
                                                    </control:WatermarkTextBox.InputBindings>
                                                </control:WatermarkTextBox>
                                                <Rectangle x:Name="imgFind"
                                                           Width="18"
                                                           Height="18"
                                                           Margin="2,3,0,3"
                                                           HorizontalAlignment="Left"
                                                           Fill="{DynamicResource Find}" />
                                            </Grid>
                                            <Grid x:Name="grdButtonCloseSearch"
                                                  Width="21"
                                                  Height="21"
                                                  HorizontalAlignment="Right">
                                                <Button x:Name="btnClose"
                                                        Command="{Binding ChangeModeCommand}"
                                                        Height="21"
                                                        VerticalAlignment="Center"
                                                        d:IsHidden="True"
                                                        Visibility="{Binding Visibility, Mode=OneWay, ElementName=grdContentTitleSearch}">
                                                    <Grid x:Name="grdClose">
                                                        <Path Width="14"
                                                              Height="14"
                                                              HorizontalAlignment="Center"
                                                              VerticalAlignment="Center"
                                                              Data="M5.75,0.25 L9.25,0.25 9.25,5.7499999 14.75,5.7499999 14.75,9.25 9.25,9.25 9.25,14.75 5.75,14.75 5.75,9.25 0.25,9.25 0.25,5.7499999 5.75,5.7499999 z"
                                                              Fill="White"
                                                              RenderTransformOrigin="0.5,0.5"
                                                              Stretch="Fill"
                                                              StrokeThickness="0.5">
                                                            <Path.RenderTransform>
                                                                <TransformGroup>
                                                                    <ScaleTransform ScaleX="1"
                                                                                    ScaleY="1" />
                                                                    <SkewTransform AngleX="0"
                                                                                   AngleY="0" />
                                                                    <RotateTransform Angle="-45" />
                                                                    <TranslateTransform X="0"
                                                                                        Y="0" />
                                                                </TransformGroup>
                                                            </Path.RenderTransform>
                                                        </Path>
                                                    </Grid>
                                                </Button>
                                                <Button x:Name="btnSearch"
                                                        Command="{Binding ChangeModeCommand}"
                                                        Height="21"
                                                        VerticalAlignment="Center"
                                                        Visibility="{Binding Visibility, Mode=OneWay, ElementName=grdContentTitle}">
                                                    <StackPanel x:Name="stkpBtnSearch"
                                                                HorizontalAlignment="Center"
                                                                VerticalAlignment="Center"
                                                                Orientation="Horizontal">
                                                        <Rectangle x:Name="imgSearch"
                                                                   Width="14"
                                                                   Height="14"
                                                                   Fill="{DynamicResource Find}" />
                                                        <TextBlock x:Name="txtblSearch"
                                                                   Margin="5,0,0,0"
                                                                   VerticalAlignment="Center"
                                                                   Style="{DynamicResource ButtonTextBlock}"
                                                                   Text="Search"
                                                                   TextWrapping="NoWrap"
                                                                   Visibility="Collapsed" />
                                                    </StackPanel>
                                                </Button>
                                            </Grid>
                                        </Grid>
                                        <ListBox x:Name="lbTask"
                                                 Grid.Row="1"
                                                 Margin="5,5,5,0"
                                                 Background="{DynamicResource ListBoxBackground}"
                                                 BorderBrush="{DynamicResource ListBoxBorderBrush}"
                                                 Foreground="{DynamicResource ListBoxForeground}"
                                                 ItemContainerStyle="{DynamicResource ListBoxItemTask}"
                                                 ItemsSource="{Binding ReminderList, Mode=OneWay}"
                                                 ItemTemplate="{DynamicResource DataTemplateListBoxTask}"
                                                 ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                                                 SelectedItem="{Binding SelectedReminder, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                        <StackPanel x:Name="stkpBtnNewEditDeleteFolder"
                                                    Grid.Row="2"
                                                    Height="Auto"
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    Orientation="Horizontal">
                                            <Button x:Name="btnNewFolder"
                                                    Command="{Binding NewCommand}"
                                                    Width="60"
                                                    Height="20">
                                                <StackPanel x:Name="stkpBtnNewFolder"
                                                            HorizontalAlignment="Center"
                                                            VerticalAlignment="Center"
                                                            Orientation="Horizontal">
                                                    <Rectangle x:Name="imgNewFolder"
                                                               Width="12"
                                                               Height="12"
                                                               Fill="{DynamicResource Add}" />
                                                    <TextBlock x:Name="txtblNewFolder"
                                                               Margin="5,0,0,0"
                                                               VerticalAlignment="Center"
                                                               Style="{DynamicResource ButtonTextBlock}"
                                                               Text="New"
                                                               TextWrapping="NoWrap" />
                                                </StackPanel>
                                            </Button>
                                            <Button x:Name="btnEditFolder"
                                                    Command="{Binding EditCommand}"
                                                    Width="60"
                                                    Height="20"
                                                    Margin="10,0,0,0">
                                                <StackPanel x:Name="stkpEditFolder"
                                                            HorizontalAlignment="Center"
                                                            VerticalAlignment="Center"
                                                            Orientation="Horizontal">
                                                    <Rectangle x:Name="imgEditFolder"
                                                               Width="12"
                                                               Height="12"
                                                               Fill="{DynamicResource Edit}" />
                                                    <TextBlock x:Name="txtblEditFolder"
                                                               Margin="5,0,0,0"
                                                               VerticalAlignment="Center"
                                                               Style="{DynamicResource ButtonTextBlock}"
                                                               Text="Edit"
                                                               TextWrapping="NoWrap" />
                                                </StackPanel>
                                            </Button>
                                            <Button x:Name="btnDeleteFolder"
                                                    Command="{Binding DeleteCommand}"
                                                    Width="60"
                                                    Height="20"
                                                    Margin="10,0,0,0">
                                                <StackPanel x:Name="stkpDeleteFolder"
                                                            HorizontalAlignment="Center"
                                                            VerticalAlignment="Center"
                                                            Orientation="Horizontal">
                                                    <Rectangle x:Name="imgDeleteFolder"
                                                               Width="12"
                                                               Height="12"
                                                               Fill="{DynamicResource Delete}" />
                                                    <TextBlock x:Name="txtblDeleteFolder"
                                                               Margin="5,0,0,0"
                                                               VerticalAlignment="Center"
                                                               Style="{DynamicResource ButtonTextBlock}"
                                                               Text="Delete"
                                                               TextWrapping="NoWrap" />
                                                </StackPanel>
                                            </Button>
                                        </StackPanel>
                                    </Grid>
                                </Border>
                                <!--  Task Reminder  -->
                            </Grid>
                        </CPCToolkitExt_OtherControl:CPCTabItemControl>
                        <CPCToolkitExt_OtherControl:CPCTabItemControl x:Name="tabitemDashboard"
                                                                      IsCheckError="True">
                            <CPCToolkitExt_OtherControl:CPCTabItemControl.Header>
                                <TextBlock x:Name="txtblDashboard"
                                           Margin="10,7"
                                           Style="{DynamicResource TabItemTextBlock}"
                                           Text="Dashboard"
                                           TextWrapping="Wrap" />
                            </CPCToolkitExt_OtherControl:CPCTabItemControl.Header>
                            <cpcControl:Dashboard x:Name="grdDashboard"
                                                  Margin="5" />
                        </CPCToolkitExt_OtherControl:CPCTabItemControl>
                    </CPCToolkitExt_OtherControl:CPCTabControl>
                </Grid>
            </Grid>
        </Grid>
    </control:BusyIndicator>
</r:RibbonWindow>
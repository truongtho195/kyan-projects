//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Linq;
using System.Linq.Expressions;
using CPC.Helper;
using CPC.POS.Database;
using CPC.Toolkit.Base;

namespace CPC.POS.Model
{
    /// <summary>
    /// Model for table base_ResourceNote
    /// </summary>
    [Serializable]
    public partial class base_ResourceNoteModel : ModelBase, IDataErrorInfo
    {
        #region Constructor

        // Default constructor
        public base_ResourceNoteModel()
        {
            this.IsNew = true;
            this.base_ResourceNote = new base_ResourceNote();
        }

        // Default constructor that set entity to field
        public base_ResourceNoteModel(base_ResourceNote base_resourcenote, bool isRaiseProperties = false)
        {
            this.base_ResourceNote = base_resourcenote;
            if (!isRaiseProperties)
                this.ToModel();
            else
                this.ToModelAndRaise();
            this.IsDirty = false;
        }

        #endregion

        #region Entity Properties

        public base_ResourceNote base_ResourceNote { get; private set; }

        #endregion

        #region Primitive Properties

        protected long _id;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Id</param>
        /// </summary>
        public long Id
        {
            get { return this._id; }
            set
            {
                if (this._id != value)
                {
                    this.IsDirty = true;
                    this._id = value;
                    OnPropertyChanged(() => Id);
                    PropertyChangedCompleted(() => Id);
                }
            }
        }

        protected string _note;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Note</param>
        /// </summary>
        public string Note
        {
            get { return this._note; }
            set
            {
                if (this._note != value)
                {
                    this.IsDirty = true;
                    this._note = value;
                    OnPropertyChanged(() => Note);
                    PropertyChangedCompleted(() => Note);
                }
            }
        }

        protected Nullable<System.DateTime> _dateCreated;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the DateCreated</param>
        /// </summary>
        public Nullable<System.DateTime> DateCreated
        {
            get { return this._dateCreated; }
            set
            {
                if (this._dateCreated != value)
                {
                    this.IsDirty = true;
                    this._dateCreated = value;
                    OnPropertyChanged(() => DateCreated);
                    PropertyChangedCompleted(() => DateCreated);
                }
            }
        }

        protected string _color;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Color</param>
        /// </summary>
        public string Color
        {
            get { return this._color; }
            set
            {
                if (this._color != value)
                {
                    this.IsDirty = true;
                    this._color = value;
                    OnPropertyChanged(() => Color);
                    PropertyChangedCompleted(() => Color);
                }
            }
        }

        protected string _resource;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Resource</param>
        /// </summary>
        public string Resource
        {
            get { return this._resource; }
            set
            {
                if (this._resource != value)
                {
                    this.IsDirty = true;
                    this._resource = value;
                    OnPropertyChanged(() => Resource);
                    PropertyChangedCompleted(() => Resource);
                }
            }
        }

        #endregion

        #region Public Methods

        /// <summary>
        /// <param>Public Method</param>
        /// Method for set IsNew & IsDirty = false;
        /// </summary>
        public void EndUpdate()
        {
            this.IsNew = false;
            this.IsDirty = false;
        }

        /// <summary>
        /// Public Method
        /// <param>Method for set PropertyModel to Entity</param>
        /// </summary>
        public void ToEntity()
        {
            if (IsNew)
                this.base_ResourceNote.Id = this.Id;
            if (this.Note != null)
                this.base_ResourceNote.Note = this.Note.Trim();
            this.base_ResourceNote.DateCreated = this.DateCreated;
            if (this.Color != null)
                this.base_ResourceNote.Color = this.Color.Trim();
            if (this.Resource != null)
                this.base_ResourceNote.Resource = this.Resource.Trim();
        }

        /// <summary>
        /// Public Method
        /// <param>Method for set Entity to PropertyModel</param>
        /// </summary
        public void ToModel()
        {
            this._id = this.base_ResourceNote.Id;
            this._note = this.base_ResourceNote.Note;
            this._dateCreated = this.base_ResourceNote.DateCreated;
            this._color = this.base_ResourceNote.Color;
            this._resource = this.base_ResourceNote.Resource;
        }

        /// <summary>
        /// Public Method
        /// <param>Method for set Entity to PropertyModel</param>
        /// </summary
        public void ToModelAndRaise()
        {
            this.Id = this.base_ResourceNote.Id;
            this.Note = this.base_ResourceNote.Note;
            this.DateCreated = this.base_ResourceNote.DateCreated;
            this.Color = this.base_ResourceNote.Color;
            this.Resource = this.base_ResourceNote.Resource;
        }

        #endregion

        #region Custom Code

        public System.Windows.Point Position { get; set; }

        #endregion

        #region IDataErrorInfo Members

        public string Error
        {
            get { throw new NotImplementedException(); }
        }

        public string this[string columnName]
        {
            get
            {
                string message = string.Empty;

                switch (columnName)
                {
                    case "Id":
                        break;
                    case "Resource":
                        break;
                    case "Note":
                        break;
                    case "Color":
                        break;
                    case "DateCreated":
                        break;
                }

                if (!string.IsNullOrWhiteSpace(message))
                    return message;
                return null;
            }
        }

        #endregion
    }
}

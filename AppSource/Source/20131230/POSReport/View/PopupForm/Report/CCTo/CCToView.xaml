<Window x:Class="CPC.POSReport.View.CCToView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	    xmlns:Microsoft_Windows_Controls_Ribbon="clr-namespace:Microsoft.Windows.Controls.Ribbon;assembly=RibbonControlsLibrary" 	
	    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Luna"
	    xmlns:Anno="http://schemas.microsoft.com/expression/blend/extensions/annotations/2008"
		xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:visibilityConverter="clr-namespace:CPC.POSReport.Function.Converter"
        xmlns:behaviour="clr-namespace:CPC.POSReport.Function.Behaviour"
	    mc:Ignorable="d Anno"	
        WindowStyle="None"		
        WindowStartupLocation="CenterScreen"
        AllowsTransparency="True" Background="Transparent"
	    x:Name="UserControl" Width="400" Height="380">
    <Window.InputBindings>
        <KeyBinding Gesture="Enter" Command="{Binding AddCommand}"/>
    </Window.InputBindings>
    <Window.Resources>
        <visibilityConverter:VisibilityConverter x:Key="booleanToVisibility"></visibilityConverter:VisibilityConverter>
    </Window.Resources>
    <Border x:Name="brdCCTo" BorderThickness="1,1,1,1" CornerRadius="5,5,5,5" BorderBrush="{DynamicResource TitleBarBorder}" Background="{DynamicResource UserControlBackground}">

        <DockPanel x:Name="dkpCCTo" LastChildFill="True">
            <Border 
				Height="26" 
				x:Name="BrdTopBar" 
				BorderThickness="0" 
                MouseLeftButtonDown="CCToForm_MouseLeftButtonDown"
				BorderBrush="{DynamicResource TitleBarBorder}" 
				CornerRadius="4.5,4.5,0,0" 
				DockPanel.Dock="Top" Background="{DynamicResource TitleBarBackground}">
                <Grid x:Name="grdTopBar">
                    <TextBlock Text="CC.To" TextWrapping="Wrap" d:LayoutOverrides="Width, Height" HorizontalAlignment="Left" VerticalAlignment="Center" x:Name="txtblCCTo" Margin="10,0,0,0" Style="{DynamicResource TextBlockTitleFormPopup}"/>
                    <Rectangle StrokeThickness="0" x:Name="TopBarLine" VerticalAlignment="Bottom" Height="1" Fill="{DynamicResource TitleBarBorder}"/>
                    <StackPanel Orientation="Horizontal"
						HorizontalAlignment="Right"
						x:Name="stkpCloseBtn" VerticalAlignment="Top" Height="22">
                        <Button 
                            Command="{Binding CloseCommand}"
							Style="{DynamicResource ButtonMiniClose}"
							Width="22"
							x:Name="btnClose" Margin="5,0,5,0">
                            <Grid x:Name="grdClose">
                                <Path Stretch="Fill"
									StrokeThickness="0.5"
									RenderTransformOrigin="0.5,0.5"
									Data="M5.75,0.25 L9.25,0.25 9.25,5.7499999 14.75,5.7499999 14.75,9.25 9.25,9.25 9.25,14.75 5.75,14.75 5.75,9.25 0.25,9.25 0.25,5.7499999 5.75,5.7499999 z"
									Width="14"
									Height="14"
									HorizontalAlignment="Center"
									VerticalAlignment="Center" Fill="{DynamicResource TitleBar_ButtonClose_Arrow}">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform ScaleX="1"
												ScaleY="1" />
                                            <SkewTransform AngleX="0"
												AngleY="0" />
                                            <RotateTransform Angle="-45" />
                                            <TranslateTransform X="0"
												Y="0" />
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                        </Button>
                    </StackPanel>
                </Grid>
            </Border>

            <Grid x:Name="grdCCTo" DockPanel.Dock="Top">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="50"/>
                </Grid.RowDefinitions>
                <Border x:Name="brdCCTo1" BorderBrush="{DynamicResource TabControlBorder}" BorderThickness="1" Margin="15,20,15,15" Background="{DynamicResource TabControlBackground}">
            		<Grid x:Name="grdContentCCTo" Margin="10">
                		<Grid.RowDefinitions>
                			<RowDefinition Height="25" />
                			<RowDefinition/>           
                		</Grid.RowDefinitions>
                		<StackPanel x:Name="stkpInputCCSendTo" Margin="10,2" Orientation="Horizontal" d:LayoutOverrides="Width" HorizontalAlignment="Left" VerticalAlignment="Center">
            				<TextBlock Text="Input CC.Send To" 
            					x:Name="txtblInputCCSendTo" 
            					VerticalAlignment="Center" 
            					TextWrapping="NoWrap" 
            					Style="{DynamicResource TextBlockNormal}"/>
                            <TextBox x:Name="txtInputCCSendTo"
            					MaxLength="60"                                   
            					Text="{Binding NewAdd, UpdateSourceTrigger=PropertyChanged}"
            					TextWrapping="NoWrap" Margin="10,0" Width="160">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="TextChanged">
                                        <i:InvokeCommandAction Command="{Binding LookupCustomerEmailCommand}"
                                                               CommandParameter="{Binding ElementName= txtInputCCSendTo}">                                            
                                        </i:InvokeCommandAction>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <i:Interaction.Behaviors>
                                    <behaviour:AutoFocusBehavior />
                                </i:Interaction.Behaviors>
                            </TextBox>
                            <Button x:Name="btnAdd" Command="{Binding AddCommand}" Width="60" Height="21">
            					<StackPanel HorizontalAlignment="Center" x:Name="stkpBtnAdd" VerticalAlignment="Center" Orientation="Horizontal">
							<Rectangle x:Name="imgAdd" Fill="{DynamicResource Add}" Height="15" Width="15"/>
							<TextBlock Margin="5,0,0,0" VerticalAlignment="Center" Text="Add" TextWrapping="NoWrap" x:Name="txtblAdd" Style="{DynamicResource ButtonTextBlock}"/>
						</StackPanel>
            				</Button>
            			</StackPanel>
            			<DataGrid x:Name="dtgrdCCTo" Grid.Row="1" 
                                  SelectionMode="Single"
            				      CanUserAddRows="False"			
                                  CanUserDeleteRows="False"
            				      AutoGenerateColumns="False"
            				      ItemsSource="{Binding EmailAddressList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            				      SelectedItem="{Binding AddressModel, Mode=TwoWay}"            				 
            				      Style="{DynamicResource DatagridWithoutRowHeader}" Margin="0,5,0,0">
            				<DataGrid.Columns>
            					<DataGridTemplateColumn Width="25">
            						<DataGridTemplateColumn.HeaderTemplate>
            							<DataTemplate>
            								<!--<CheckBox x:Name="chkAllCC"  
            									IsChecked="{Binding DataContext.CheckAll, Mode=TwoWay, RelativeSource={RelativeSource AncestorLevel=1, AncestorType={x:Type DataGrid}, Mode=FindAncestor}, UpdateSourceTrigger=PropertyChanged}"
            									Command="{Binding DataContext.CheckAllEmailCommand, RelativeSource={RelativeSource AncestorLevel=1, AncestorType={x:Type DataGrid}, Mode=FindAncestor}}" 
            									CommandParameter="{Binding ElementName=chkAllCC.IsChecked.Value}"
            									HorizontalAlignment="Center"
												Padding="0" />-->
            							</DataTemplate>
            						</DataGridTemplateColumn.HeaderTemplate>
            						<DataGridTemplateColumn.CellTemplate>
            							<DataTemplate>
            								<CheckBox x:Name="chkCC" 
            									IsChecked="{Binding IsSend, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            									HorizontalAlignment="Center" />
            							</DataTemplate>
            						</DataGridTemplateColumn.CellTemplate>
            					</DataGridTemplateColumn>
            					<DataGridTextColumn Header="CC. Name" 
            						Binding="{Binding Address}"
            						IsReadOnly="True"
            						Width="*" />                                
            				</DataGrid.Columns>
            			</DataGrid>
            			<DataGrid x:Name="dtgrdAutoComplete" Grid.Row="1"
                                  ItemsSource="{Binding CustomerEmailCollection}"
                                  Visibility="{Binding IsShowAutoComplete, Converter={StaticResource booleanToVisibility}}"
            				SelectionMode="Single"
            				CanUserAddRows="False"			
                                  CanUserDeleteRows="False"
            				AutoGenerateColumns="False" 
            				Style="{DynamicResource DatagridWithoutRowHeader}" Margin="106,0,10,0" VerticalAlignment="Top" Height="165">
            				<DataGrid.Columns>
            					<DataGridTemplateColumn Width="25">
            						<!--<DataGridTemplateColumn.HeaderTemplate>
            							<DataTemplate>
            								<CheckBox x:Name="chkAllCC"  
            									HorizontalAlignment="Center"
            									Padding="0" />
            							</DataTemplate>
            						</DataGridTemplateColumn.HeaderTemplate>-->
            						<DataGridTemplateColumn.CellTemplate>
            							<DataTemplate>
            								<CheckBox x:Name="chkCC" 
            									IsChecked="{Binding IsSend, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            									HorizontalAlignment="Center" />
            							</DataTemplate>
            						</DataGridTemplateColumn.CellTemplate>
            					</DataGridTemplateColumn>
            					<DataGridTextColumn Header="Email" Binding="{Binding Address}"
                                                    IsReadOnly="True"
            						Width="*" />                                
            				</DataGrid.Columns>
            			</DataGrid>
                        
                	</Grid>
            	</Border>
                <Rectangle Fill="{DynamicResource Spilter_Line_Background}" HorizontalAlignment="Stretch" x:Name="Line" VerticalAlignment="Top" Height="1" Grid.Row="1" Margin="2,0"/>
                <StackPanel VerticalAlignment="Center" Height="Auto" x:Name="stkpBtn" Orientation="Horizontal" HorizontalAlignment="Center" Grid.Row="1">
                    <Button
						Command="{Binding CCToOKCommand}"						
						x:Name="btnOK" Height="28" Width="80" >
                        <StackPanel HorizontalAlignment="Center" x:Name="stkpBtnOK" VerticalAlignment="Center" Orientation="Horizontal">
                            <Rectangle x:Name="imgOK" Fill="{DynamicResource OK}" Height="20" Width="20"/>
                            <TextBlock Margin="5,0,0,0" VerticalAlignment="Center" Text="OK" TextWrapping="NoWrap" x:Name="txtblOK" Style="{DynamicResource ButtonTextBlock}"/>
                        </StackPanel>
                    </Button>
                    <Button
						Command="{Binding CloseCommand}"						
						x:Name="btnCancel" Height="28" Width="80" Margin="10,0,0,0" >
                        <StackPanel HorizontalAlignment="Center" x:Name="stkpBtnCancel" VerticalAlignment="Center" Orientation="Horizontal">
                            <Rectangle x:Name="imgCancel" Fill="{DynamicResource Cancel}" Height="20" Width="20"/>
                            <TextBlock Margin="5,0,0,0" x:Name="txtblExit" VerticalAlignment="Center" Text="Cancel" TextWrapping="NoWrap" Style="{DynamicResource ButtonTextBlock}"/>
                        </StackPanel>
                    </Button>
                </StackPanel>
            </Grid>
        </DockPanel>
    </Border>
</Window>

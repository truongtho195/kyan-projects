<UserControl x:Class="CPC.POSReport.View.Permission"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Luna"
	xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing" xmlns:Anno="http://schemas.microsoft.com/expression/blend/extensions/annotations/2008"
	mc:Ignorable="d Anno"
    xmlns:helper="clr-namespace:CPC.POSReport.Function.Helper"
    xmlns:converter="clr-namespace:CPC.POSReport.Function.Converter"
	xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"	
             xmlns:behaviour="clr-namespace:CPC.POSReport.Function.Behaviour"
	x:Name="UserControl" Background="{DynamicResource UserControlBackground}"    
	>
	
	<Anno:AnnotationManager.Annotations>
		<Anno:Annotation 
			AuthorInitials="BUTTON ADD USER PERMISSION " 
			Author="bill pho" 
			Left="1050" 
			SerialNumber="1" 
			Top="449.07" 
			Timestamp="06/01/2012 02:46:15" 
			Text="Khi Click thi Popup Form Group Permission List de add Permission cho USER"/>
		<Anno:Annotation 
			AuthorInitials="User Name Type Name" 
			Author="bill pho" 
			Id="1" 
			Left="1070" 
			SerialNumber="1" 
			Top="-35" 
			Timestamp="06/01/2012 02:34:12"
			Text="User Name, User Type, Name: ko duoc thay doi, chi duoc xem, du lieu duoc bat o Form View Employee"/>
		<Anno:Annotation 
			AuthorInitials="Status " 
			Author="bill pho" 
			Left="1752" 
			SerialNumber="1" 
			Top="100" 
			Timestamp="06/01/2012 02:32:35" 
			Text="Khi thay doi Status thi he thong se Popup From thong bao rang co muon doi ko, chon Yes hay No"/>
	</Anno:AnnotationManager.Annotations>

    <UserControl.Resources>
        <converter:TrueFalseConverter x:Key="trueFalseConverter"></converter:TrueFalseConverter>
        <ContextMenu x:Key="userContextMenu">
            <MenuItem Header="New" Command="{Binding NewCommand}">
                <MenuItem.Icon>
                    <Rectangle Fill="{DynamicResource NewItem}" Height="13" Width="13"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Duplicate" Command="{Binding CloneCommand}">
                <MenuItem.Icon>
                    <Rectangle Fill="{DynamicResource DuplicateItem}" Height="13" Width="13"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Delete" Command="{Binding DeleteCommand}">
                <MenuItem.Icon>
                    <Rectangle Fill="{DynamicResource DeleteItem}" Height="13" Width="13"/>
                </MenuItem.Icon>
            </MenuItem>
        </ContextMenu>
    </UserControl.Resources>
	<Grid x:Name="GridLayout">
		<Rectangle 
			x:Name="UserControl_Background_Image" 
			Fill="{DynamicResource UserControl_Background_Image}"/>
		<Grid 
			x:Name="grdPermission" >
			<Grid x:Name="grdSubPermission" d:LayoutOverrides="GridBox">
				<Grid.RowDefinitions>
					<RowDefinition Height="60"/>
					<RowDefinition/>
				</Grid.RowDefinitions>
				<StackPanel 
					VerticalAlignment="Bottom" 
					Height="Auto" 
					HorizontalAlignment="Left" 
					x:Name="stkpBtn" 
					Orientation="Horizontal" 
					Margin="20,0,0,5">
                    <Button
						Style="{DynamicResource ButtonSystem}"
						Command="{Binding NewCommand}"
						ToolTip="New User"
						x:Name="btnNew" Height="40" Width="40" >
                        <StackPanel HorizontalAlignment="Center" x:Name="stkpBtnNew" VerticalAlignment="Center">
                            <Rectangle x:Name="imgNew" Fill="{DynamicResource New}" Height="30" Width="30"/>
                            <TextBlock Margin="5,0,0,0" x:Name="txtblNew" VerticalAlignment="Center" Text="New" TextWrapping="NoWrap"  Visibility="Collapsed" Style="{DynamicResource ButtonSystemTextBlock}"/>
                        </StackPanel>
                    </Button>
                    <Button
						Style="{DynamicResource ButtonSystem}"
						ToolTip="Save"
						Command="{Binding SaveCommand}"
						x:Name="btnSave" Height="40" Width="40" >
						<StackPanel HorizontalAlignment="Center" x:Name="stkpBtnSave" VerticalAlignment="Center" Orientation="Horizontal">
							<Rectangle x:Name="imgSave" Fill="{DynamicResource Save}" Height="30" Width="30"/>
							<TextBlock Margin="5,0,0,0" VerticalAlignment="Center" Text="Save" TextWrapping="NoWrap" x:Name="txtblSave"  Visibility="Collapsed" Style="{DynamicResource ButtonSystemTextBlock}"/>
						</StackPanel>
					</Button>
					<Button
						Style="{DynamicResource ButtonSystem}"
						ToolTip="Deletes User"
						Command="{Binding DeleteCommand}"
						x:Name="btnDelete" Height="40" Width="40">
						<StackPanel HorizontalAlignment="Center" x:Name="stkpBtnDelete" VerticalAlignment="Center">
							<Rectangle x:Name="imgDelete" Fill="{DynamicResource Delete}" Height="30" Width="30"/>
							<TextBlock Margin="5,0,0,0" x:Name="txtblDelete" VerticalAlignment="Center" Text="Delete" TextWrapping="NoWrap"  Visibility="Collapsed" Style="{DynamicResource ButtonSystemTextBlock}"/>
						</StackPanel>
					</Button>
					<Button
						Style="{DynamicResource ButtonSystem}"
						ToolTip="Cancel"
						Command="{Binding CancelCommand}"
						x:Name="btnCancel" Height="40" Width="40">
						<StackPanel HorizontalAlignment="Center" x:Name="stkpBtnCancel" VerticalAlignment="Center">
							<Rectangle x:Name="imgCancel" Fill="{DynamicResource Cancel}" Height="30" Width="30"/>
							<TextBlock Margin="5,0,0,0" x:Name="txtblCancel" VerticalAlignment="Center" Text="Cancel" TextWrapping="NoWrap"  Visibility="Collapsed" Style="{DynamicResource ButtonSystemTextBlock}"/>
						</StackPanel>
					</Button>
				</StackPanel>
				<Rectangle 
					Fill="{DynamicResource Spilter_Line_Background}" 
					x:Name="Line" 
					VerticalAlignment="Bottom" 
					Height="1" 
					Margin="2,0"/>
				<TextBlock 
					x:Name="txtblBindingUserPermission"
					Text="Permission"
					TextWrapping="NoWrap"
					FontSize="33.333" 
					Margin="0,0,20,7" 
					HorizontalAlignment="Right" 
					FontWeight="Bold" 
					FontFamily="Times New Roman" 
					VerticalAlignment="Bottom" 
					Style="{DynamicResource TextBlockTitleFormView}" />
				<Border 
					x:Name="brdPermissions" 
					Height="Auto" 
					Grid.Row="2" 
					Margin="10" 
					Background="{DynamicResource TabControlBackground}" 
					BorderBrush="{DynamicResource TabControlBorder}" 
					BorderThickness="1">
					<Grid 
						x:Name="grdPermissions" 
						Margin="10">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="285"/>
							<ColumnDefinition/>
						</Grid.ColumnDefinitions>
						<Grid x:Name="grdUser">
							<Grid.RowDefinitions>
								<RowDefinition Height="170"/>
								<RowDefinition Height="*"/>
							</Grid.RowDefinitions>
							<GroupBox x:Name="gbUser" Margin="0">
								<GroupBox.Header>
									<TextBlock x:Name="txtblUser"
										Text="User"
										TextWrapping="NoWrap" Style="{DynamicResource GroupboxTextBlock}" />
								</GroupBox.Header>
								<Grid
									x:Name="grdContentUser"
									d:LayoutOverrides="GridBox" Margin="0,4,0,0">
									<Grid.RowDefinitions>
										<RowDefinition Height="0"/>
										<RowDefinition Height="Auto" MinHeight="5.707"/>
										<RowDefinition/>
									</Grid.RowDefinitions>
									<DataGrid 
                                        ContextMenu="{StaticResource userContextMenu}"
										IsSynchronizedWithCurrentItem="True"  
										ItemsSource="{Binding UserModelCollection, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
										SelectedItem="{Binding UserModel}"
										 SelectionMode="Single" 
										 AutoGenerateColumns="False" 
										 CanUserAddRows="False"                                        
										x:Name="dtgrdUsers" 
										Style="{DynamicResource DatagridWithRowHeader}" Margin="5,1.707,5,9" RenderTransformOrigin="0.5,0.5" Grid.Row="1" Grid.RowSpan="2">
										<DataGrid.RowStyle>
											<Style>                                                
                                                <Style.Triggers>                                                    
													<DataTrigger Binding="{Binding IsActive}" Value="False">	
														<Setter Property="DataGrid.Foreground" Value="Red"></Setter>
													</DataTrigger>                                                    
                                                </Style.Triggers>	
											</Style>
										</DataGrid.RowStyle>
										<DataGrid.Columns>
											<DataGridTextColumn Header="User Name " Binding="{Binding UserName}" IsReadOnly="True" Width="110"/>
											<DataGridTextColumn Header="Login Name" Binding="{Binding LoginName}" IsReadOnly="True" Width="*"/>		
										</DataGrid.Columns>	
										    <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="SelectionChanged">
                                                    <i:InvokeCommandAction Command="{Binding DataContext.RowSelectionChangedCommand, RelativeSource={RelativeSource AncestorLevel=1, AncestorType=Window,Mode=FindAncestor}}">
                                                </i:InvokeCommandAction>
                                            </i:EventTrigger>
                                            <i:EventTrigger EventName="CurrentCellChanged">
                                                <i:InvokeCommandAction Command="{Binding DataContext.CurrentCellChangedCommand, RelativeSource={RelativeSource AncestorLevel=1, AncestorType=Window,Mode=FindAncestor}}">
                                                    </i:InvokeCommandAction>
                                                </i:EventTrigger>
                                        </i:Interaction.Triggers>									
									</DataGrid>
								</Grid>
							</GroupBox>
							<GroupBox x:Name="gbUserInfo" Grid.Row="1" Margin="0,10,0,0" d:LayoutOverrides="GridBox">
								<GroupBox.Header>
									<TextBlock x:Name="txtblUserInfo"
										Text="User Info"
										TextWrapping="NoWrap"
										FontWeight="Bold" Style="{DynamicResource GroupboxTextBlock}" />
								</GroupBox.Header>
								<Grid
									x:Name="grdContentUserInfo"
									d:LayoutOverrides="GridBox" Margin="0,4,0,0">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="105"/>
										<ColumnDefinition/>
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition Height="25" />
										<RowDefinition Height="25"/>
										<RowDefinition Height="25" />
										<RowDefinition Height="25"/>
										<RowDefinition Height="25"/>
										<RowDefinition Height="25" />
										<RowDefinition Height="25"/>
										<RowDefinition Height="25" />
										<RowDefinition Height="25"/>
										<RowDefinition Height="25"/>
										<RowDefinition Height="25"/>
									</Grid.RowDefinitions>
									<CheckBox
										x:Name="cbActiveUser" 
                                        IsChecked="{Binding UserModel.IsActive, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
										HorizontalAlignment="Left" 
										VerticalAlignment="Center" 
										Content="Active User" Margin="0"  
										Grid.Column="1" 
									d:LayoutOverrides="GridBox" Grid.Row="0" />
                                    <TextBox x:Name="txtUsername"
                                             MaxLength="60"
                                             behaviour:AutoFocusBehavior.IsFocused="{Binding FocusDefault, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                             VerticalContentAlignment="Center"
											 Text="{Binding UserModel.UserName, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True,ValidatesOnExceptions=True}"
										     TextWrapping="NoWrap" Padding="2,0,2,0" Margin="0,2,10,2" Grid.Row="1" Grid.Column="1" >
                                        <i:Interaction.Behaviors>
                                            <behaviour:AutoFocusBehavior />
                                        </i:Interaction.Behaviors>
                                    </TextBox>
                                    <TextBlock x:Name="txtblLogin"
										Text="Login Name"
										TextWrapping="NoWrap"
										VerticalAlignment="Center" Margin="10,0,0,0" Style="{DynamicResource TextBlockNormal}" HorizontalAlignment="Left" Grid.Row="2" />
                                    <TextBox x:Name="txtLogin"
                                             MaxLength="20" 
                                             VerticalContentAlignment="Center" 											 
                                             Text="{Binding UserModel.LoginName, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True, NotifyOnValidationError=True,ValidatesOnExceptions=True}"
										TextWrapping="NoWrap" Padding="2,0,2,0" Margin="0,2,10,2" Grid.Column="1" Grid.Row="2"/>
                                    <TextBlock x:Name="txtblDepartment" Visibility="Collapsed"
										Text="Department"
										TextWrapping="NoWrap"
										VerticalAlignment="Center" Margin="10,0,0,0" Style="{DynamicResource TextBlockNormal}" HorizontalAlignment="Left" Grid.Row="10" />
									<ComboBox x:Name="cmbDepartment" Visibility="Collapsed"
                                              ItemsSource="{Binding DepartModelCollection}"
                                              SelectedValuePath="Id"
                                              DisplayMemberPath="Name"
                                              SelectedValue="{Binding UserModel.DepartId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
										Margin="0,2,10,2" Grid.Column="1" Grid.Row="10" />
									<TextBlock x:Name="txtblUsername"
										Text="User Name"
										TextWrapping="NoWrap"
										VerticalAlignment="Center" Grid.Column="0" Grid.Row="1" Margin="10,0,0,0" Style="{DynamicResource TextBlockNormal}" HorizontalAlignment="Left" />
									
									<TextBlock x:Name="txtblPosition"
										Text="Position"
										TextWrapping="NoWrap"
										VerticalAlignment="Center" Margin="10,0,0,0" Style="{DynamicResource TextBlockNormal}" HorizontalAlignment="Left" Grid.Row="3" />
									<TextBox x:Name="txtPosition"
                                             MaxLength="100"
                                             VerticalContentAlignment="Center"
											 Text="{Binding UserModel.Position, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
										TextWrapping="NoWrap" Padding="2,0,2,0" Margin="0,2,10,2" Grid.Column="1" Grid.Row="3" />
									<TextBlock 
										x:Name="txtblSecurity1"
										Text="Security"
										TextWrapping="NoWrap" 
										FontWeight="Bold" 
										HorizontalAlignment="Left" 
										Grid.Row="4" VerticalAlignment="Bottom" Margin="0,0,0,3.723" Style="{DynamicResource TextBlockNormal}" />
									<Rectangle 
										Fill="{DynamicResource GroupboxBorder}" 
										HorizontalAlignment="Stretch" 
										x:Name="LineSecurity" 
										VerticalAlignment="Bottom" 
										Height="1" 
										Grid.Row="4" 
										Margin="-32,0,10,9.862" 
										Grid.Column="1"/>
                                    <CheckBox
										x:Name="cbSetPasswordToDefault" 
										HorizontalAlignment="Left"                                         
										VerticalAlignment="Center" 
										Grid.Column="1"
                                        IsChecked="{Binding IsSetPasswordToDefault}"
                                        Command="{Binding SetPasswordToDefaultCommand}"
										Content="Set Password To Default" Grid.Row="5" />
                                    <TextBlock x:Name="txtblUserLevel"
										Text="User Level" Visibility="Collapsed"
										TextWrapping="NoWrap"
										VerticalAlignment="Center" Margin="10,0,0,0" Style="{DynamicResource TextBlockNormal}" HorizontalAlignment="Left" Grid.Row="9" />
									<StackPanel Orientation="Horizontal" Grid.Column="1" Grid.Row="9" Visibility="Collapsed">
										<ComboBox x:Name="txtUserLevel"
                                                  ItemsSource="{Binding LevelModelCollection}"
                                                  SelectedValuePath="Id"
                                                  DisplayMemberPath="Level"
                                                  SelectedValue="{Binding UserModel.LevelId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"                                              
										          Margin="0,2,1,2" Width="136" />
                                        <Button
						                        Style="{DynamicResource ButtonSystem}"
						                        Command="{Binding ApplyUserLevelCommand}"
						                        ToolTip="Apply User's Right"
						                        x:Name="btnApply" >
                                            <StackPanel HorizontalAlignment="Center" x:Name="stkpBtnApply" VerticalAlignment="Center">
                                                <Rectangle x:Name="imgApply" Fill="{DynamicResource Apply}" Height="22" Width="22"/>
                                                <TextBlock Margin="0,2,5,2" x:Name="txtblApply" VerticalAlignment="Center" Text="Apply" TextWrapping="NoWrap"  Visibility="Collapsed" Style="{DynamicResource ButtonSystemTextBlock}"/>
                                            </StackPanel>
                                        </Button>
                                        <!--<Button Content="Apply" 
												Command="{Binding ApplyUserLevelCommand}"
												Width="38" Margin="0,2,5,2"></Button>-->
									</StackPanel>
									<TextBlock x:Name="txtblPassword" 
										Text="Password"
										TextWrapping="NoWrap"
										VerticalAlignment="Center" Margin="10,0,0,0" Style="{DynamicResource TextBlockNormal}" HorizontalAlignment="Left" Grid.Row="6" />
									<PasswordBox x:Name="pssPassword" 
                                                 IsEnabled="{Binding IsSetPasswordToDefault, Converter={StaticResource trueFalseConverter}}"
                                                 helper:PasswordHelper.BindPassword="True"
                                                 helper:PasswordHelper.BoundPassword="{Binding Path= UserModel.Password, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                                 PasswordChar="*"
                                                 MaxLength="20"
                                                 VerticalContentAlignment="Center"
                                                 Padding="2,0,2,0" Margin="0,2,10,2" Grid.Column="1" Grid.Row="6" />
									<TextBlock x:Name="txtblConfirmPassword"
										Text="Confirm Password"
										TextWrapping="NoWrap"
										VerticalAlignment="Center" Margin="10,0,0,0" Style="{DynamicResource TextBlockNormal}" HorizontalAlignment="Left" Grid.Row="7" />
									<PasswordBox x:Name="pssConfirmPassword"
                                                 IsEnabled="{Binding IsSetPasswordToDefault, Converter={StaticResource trueFalseConverter}}"
                                                 helper:PasswordHelper.BindPassword="True"
                                                 helper:PasswordHelper.BoundPassword="{Binding Path= UserModel.ConfirmPassword, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, NotifyOnValidationError=True, ValidatesOnDataErrors=True}"
                                                 PasswordChar="*"
                                                 VerticalContentAlignment="Center"
                                                 Padding="2,0,2,0" Margin="0,2,10,2" Grid.Column="1" Grid.Row="7" />
									<TextBlock x:Name="txtblExpiryDate"
											Text="Expiry Date" Grid.Row="8"											
											TextWrapping="NoWrap" Margin="10,0,0,0" Style="{DynamicResource TextBlockNormal}" VerticalAlignment="Center" HorizontalAlignment="Left" />
									<DatePicker
											Text=""											
											SelectedDate="{Binding UserModel.ExpiryDate, Mode=TwoWay, NotifyOnValidationError=True, StringFormat=\{0:d\}, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}"
											x:Name="dtpExpiryDate" Margin="0,2" Grid.Column="1" Grid.Row="8" Width="90" HorizontalAlignment="Left" />
								</Grid>
							</GroupBox>
						
						</Grid>
						<Grid x:Name="grdUserRightGeneral" Grid.Column="1" Margin="10,0,0,0">
							<Grid.RowDefinitions>
								<RowDefinition Height="170"/>
								<RowDefinition/>									
							</Grid.RowDefinitions>
						
							<GroupBox x:Name="gbUserRight">
								<GroupBox.Header>
									<TextBlock x:Name="txtblSecurity"
										Text="Security"
										TextWrapping="NoWrap" Style="{DynamicResource GroupboxTextBlock}" />
								</GroupBox.Header>
								<Grid x:Name="grdContentUserRight" Margin="0,4,0,0">
									<Grid.ColumnDefinitions>
										<ColumnDefinition/>
									</Grid.ColumnDefinitions>
									<Grid x:Name="grdMajorGroupReport" Grid.Column="1">
										<Grid.RowDefinitions>
											<RowDefinition Height="Auto" MinHeight="0.7"/>
											<RowDefinition/>
										</Grid.RowDefinitions>
										<DataGrid 
											IsSynchronizedWithCurrentItem="True" 
                                            CanUserAddRows="False"                                            
                                            AutoGenerateColumns="False"                    
                                            SelectionMode="Single"
                                            ItemsSource="{Binding UGPermissionModelCollection}"
											x:Name="dtgrdUserRight_Copy" 
											Style="{DynamicResource DatagridWithRowHeader}" RenderTransformOrigin="0.5,0.5" Grid.Row="1">
											<DataGrid.Columns>
                                                <DataGridTemplateColumn Width="60">
                                                    <DataGridTemplateColumn.HeaderTemplate>
                                                        <DataTemplate>
                                                            <Grid>
                                                                <TextBlock Text="Not Show"></TextBlock>
                                                            </Grid>
                                                        </DataTemplate>
                                                    </DataGridTemplateColumn.HeaderTemplate>
                                                    <DataGridTemplateColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <CheckBox 
															x:Name="cbGroup" 
                                                                IsChecked="{Binding Right, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                                                Command="{Binding DataContext.CheckGroupRightCommand, RelativeSource={RelativeSource AncestorLevel=1, AncestorType=DataGrid,Mode=FindAncestor}}"
                                                                CommandParameter="{Binding ElementName=cbGroup}"
															HorizontalAlignment="Center"                                                                                                                        
															/>
                                                        </DataTemplate>
                                                    </DataGridTemplateColumn.CellTemplate>
                                                </DataGridTemplateColumn>
                                                
                                                <DataGridTextColumn Header="Major Group Report" Binding="{Binding Name}" IsReadOnly="True" Width="*"/>		
											</DataGrid.Columns>											
										</DataGrid>
									</Grid>
								</Grid>
							</GroupBox>
							<TabControl x:Name="TabCodeReport" Grid.Row="1" Margin="0,10,0,0">
								<TabItem 
									x:Name="tabitemGeneral" Header="General">
									<Grid 
										x:Name="grdGeneral">
										<DataGrid IsSynchronizedWithCurrentItem="True"                                                  
                                                  AutoGenerateColumns="False"
                                                  SelectionMode="Single"
                                                  ItemsSource="{Binding UMPermissionModelCollection}"
                                                  x:Name="dtgrdGeneral" 
                                                  CanUserAddRows="False"
                                                  Style="{DynamicResource DatagridWithRowHeader}" Margin="5,5.7,5,5" >
											<DataGrid.Columns>
												<DataGridTextColumn Header="# Code" Binding="{Binding Code}" IsReadOnly="True" Width="80"/>
												<DataGridTextColumn Header="Name" Binding="{Binding Name}" IsReadOnly="True" Width="*"/>
                                                <DataGridTemplateColumn Width="30">
                                                    <DataGridTemplateColumn.HeaderTemplate>
                                                        <DataTemplate>
                                                            <Grid>
                                                                <CheckBox 
															        x:Name="cbAllRight" 
															        HorizontalAlignment="Center" 
                                                                    VerticalAlignment="Center" 
                                                                    IsChecked="{Binding DataContext.IsCheckRight, RelativeSource={RelativeSource AncestorType=DataGrid,AncestorLevel=1,Mode=FindAncestor}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"        
                                                                    Command="{Binding DataContext.CheckAllRightCommand, RelativeSource={RelativeSource AncestorType=DataGrid,AncestorLevel=1,Mode=FindAncestor}}"
                                                                    CommandParameter="{Binding ElementName=cbAllRight}">
                                                                </CheckBox>
                                                            </Grid>
                                                        </DataTemplate>
                                                    </DataGridTemplateColumn.HeaderTemplate>
                                                    <DataGridTemplateColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <CheckBox 
															x:Name="cbRight" 
															HorizontalAlignment="Center"                                                                                                                       
                                                            IsChecked="{Binding Right,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                                            Command="{Binding DataContext.CheckRightCommand, RelativeSource={RelativeSource AncestorType=DataGrid,AncestorLevel=1,Mode=FindAncestor}}"
                                                            CommandParameter="{Binding ElementName= cbRight}"
															/>
                                                        </DataTemplate>
                                                    </DataGridTemplateColumn.CellTemplate>
                                                </DataGridTemplateColumn>
                                            
                                            </DataGrid.Columns>											
										</DataGrid>
									</Grid>
								</TabItem>
								<TabItem 
									x:Name="tabitemReport" Header="Report">
									<Grid x:Name="grdgbReport">
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" MinHeight="5.7"/>
									<RowDefinition/>
								</Grid.RowDefinitions>
								<DataGrid IsSynchronizedWithCurrentItem="True"                                           
									    SelectionMode="Single"
									    AutoGenerateColumns="False"
									    ItemsSource="{Binding URPermissionModelCollection, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
									    CanUserAddRows="False"
								            x:Name="dtgrdReport" Style="{DynamicResource DatagridWithRowHeader}" 
								            Margin="5,0,5,5" Grid.Row="1" >
									<DataGrid.Columns>
										<DataGridTextColumn Header="Report Code" Binding="{Binding Code}" IsReadOnly="True" Width="80"/>
										<DataGridTextColumn Header="Report Name" Binding="{Binding Name}" IsReadOnly="True" Width="*"/>
										<DataGridTemplateColumn Width="60">
                                            <DataGridTemplateColumn.HeaderTemplate>
                                                <DataTemplate>
                                                    <Grid>
                                                        <CheckBox
															x:Name="cbAllView" 
															HorizontalAlignment="Left" 
                                                            IsChecked="{Binding DataContext.IsCheckView, RelativeSource={RelativeSource AncestorType=DataGrid,AncestorLevel=1,Mode=FindAncestor}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"        
                                                            Command="{Binding DataContext.CheckAllViewCommand, RelativeSource={RelativeSource AncestorType=DataGrid,AncestorLevel=1,Mode=FindAncestor}}"
                                                            CommandParameter="{Binding ElementName=cbAllView}"
															Content="View">
                                                        </CheckBox>
                                                    </Grid>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.HeaderTemplate>
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <CheckBox 
															x:Name="cbView" 
															HorizontalAlignment="Left" 
															Margin="10,0,0,0"                                                                                                                        
                                                            IsChecked="{Binding IsView,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}"
                                                            Command="{Binding DataContext.CheckIsViewCommand, RelativeSource={RelativeSource AncestorType=DataGrid,AncestorLevel=1,Mode=FindAncestor}}"
                                                            CommandParameter="{Binding ElementName= cbView}"
															/>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>                                   

                                    <DataGridTemplateColumn Width="60">
                                            <DataGridTemplateColumn.HeaderTemplate>
                                                <DataTemplate>
                                                    <Grid>
                                                        <CheckBox 
															x:Name="cbAllPrint" 
															HorizontalAlignment="Left" 
                                                            IsChecked="{Binding DataContext.IsCheckPrint, RelativeSource={RelativeSource AncestorType=DataGrid,AncestorLevel=1,Mode=FindAncestor}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                                            Command="{Binding DataContext.CheckAllPrintCommand, RelativeSource={RelativeSource AncestorType=DataGrid,AncestorLevel=1,Mode=FindAncestor}}"
                                                            CommandParameter="{Binding ElementName= cbAllPrint}"
															Content="Print">
                                                        </CheckBox>
                                                    </Grid>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.HeaderTemplate>
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <CheckBox 
															x:Name="cbPrint" 
															HorizontalAlignment="Left" 
															Margin="10,0,0,0"                
                                                            Command="{Binding DataContext.CheckIsPrintCommand, RelativeSource={RelativeSource AncestorType=DataGrid,AncestorLevel=1,Mode=FindAncestor}}"
                                                            CommandParameter="{Binding ElementName= cbPrint}"
                                                            IsChecked="{Binding IsPrint,UpdateSourceTrigger=PropertyChanged,Mode=TwoWay}">                                                        
                                                    </CheckBox>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
									</DataGrid.Columns>									
								</DataGrid>
							</Grid>
								</TabItem>
							</TabControl>
						
						</Grid>
						
					</Grid>
				</Border>
			</Grid>
		</Grid>
	</Grid>
</UserControl>
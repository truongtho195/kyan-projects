//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using CPC.POSReport.Database;
using Toolkit.Base;

namespace CPC.POSReport.Model
{
    /// <summary>
    /// Model for table tims_WorkSchedule
    /// </summary>
    [Serializable]
    public partial class tims_WorkScheduleModel : ModelBase, IDataErrorInfo
    {
        #region Constructor

        // Default constructor
        public tims_WorkScheduleModel()
        {
            this.IsNew = true;
            this.tims_WorkSchedule = new tims_WorkSchedule();
        }

        // Default constructor that set entity to field
        public tims_WorkScheduleModel(tims_WorkSchedule tims_workschedule, bool isRaiseProperties = false)
        {
            this.tims_WorkSchedule = tims_workschedule;
            if (!isRaiseProperties)
                this.ToModel();
            else
                this.ToModelAndRaise();
            this.IsDirty = false;
        }

        #endregion

        #region Entity Properties

        public tims_WorkSchedule tims_WorkSchedule { get; private set; }

        #endregion

        #region Primitive Properties

        protected int _id;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the Id</para>
        /// </summary>
        public int Id
        {
            get { return this._id; }
            set
            {
                if (this._id != value)
                {
                    this.IsDirty = true;
                    this._id = value;
                    OnPropertyChanged(() => Id);
                    PropertyChangedCompleted(() => Id);
                }
            }
        }

        protected string _workScheduleName;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the WorkScheduleName</para>
        /// </summary>
        public string WorkScheduleName
        {
            get { return this._workScheduleName; }
            set
            {
                if (this._workScheduleName != value)
                {
                    this.IsDirty = true;
                    this._workScheduleName = value;
                    OnPropertyChanged(() => WorkScheduleName);
                    PropertyChangedCompleted(() => WorkScheduleName);
                }
            }
        }

        protected int _workScheduleType;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the WorkScheduleType</para>
        /// </summary>
        public int WorkScheduleType
        {
            get { return this._workScheduleType; }
            set
            {
                if (this._workScheduleType != value)
                {
                    this.IsDirty = true;
                    this._workScheduleType = value;
                    OnPropertyChanged(() => WorkScheduleType);
                    PropertyChangedCompleted(() => WorkScheduleType);
                }
            }
        }

        protected int _rotate;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the Rotate</para>
        /// </summary>
        public int Rotate
        {
            get { return this._rotate; }
            set
            {
                if (this._rotate != value)
                {
                    this.IsDirty = true;
                    this._rotate = value;
                    OnPropertyChanged(() => Rotate);
                    PropertyChangedCompleted(() => Rotate);
                }
            }
        }

        protected int _status;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the Status</para>
        /// </summary>
        public int Status
        {
            get { return this._status; }
            set
            {
                if (this._status != value)
                {
                    this.IsDirty = true;
                    this._status = value;
                    OnPropertyChanged(() => Status);
                    PropertyChangedCompleted(() => Status);
                }
            }
        }

        protected System.DateTime _dateCreated;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the DateCreated</para>
        /// </summary>
        public System.DateTime DateCreated
        {
            get { return this._dateCreated; }
            set
            {
                if (this._dateCreated != value)
                {
                    this.IsDirty = true;
                    this._dateCreated = value;
                    OnPropertyChanged(() => DateCreated);
                    PropertyChangedCompleted(() => DateCreated);
                }
            }
        }

        protected string _userCreated;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the UserCreated</para>
        /// </summary>
        public string UserCreated
        {
            get { return this._userCreated; }
            set
            {
                if (this._userCreated != value)
                {
                    this.IsDirty = true;
                    this._userCreated = value;
                    OnPropertyChanged(() => UserCreated);
                    PropertyChangedCompleted(() => UserCreated);
                }
            }
        }

        protected string _userUpdated;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the UserUpdated</para>
        /// </summary>
        public string UserUpdated
        {
            get { return this._userUpdated; }
            set
            {
                if (this._userUpdated != value)
                {
                    this.IsDirty = true;
                    this._userUpdated = value;
                    OnPropertyChanged(() => UserUpdated);
                    PropertyChangedCompleted(() => UserUpdated);
                }
            }
        }

        protected Nullable<System.DateTime> _dateUpdated;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the DateUpdated</para>
        /// </summary>
        public Nullable<System.DateTime> DateUpdated
        {
            get { return this._dateUpdated; }
            set
            {
                if (this._dateUpdated != value)
                {
                    this.IsDirty = true;
                    this._dateUpdated = value;
                    OnPropertyChanged(() => DateUpdated);
                    PropertyChangedCompleted(() => DateUpdated);
                }
            }
        }

        #endregion

        #region Public Methods

        /// <summary>
        /// <para>Public Method</para>
        /// Method for set IsNew & IsDirty = false;
        /// </summary>
        public void EndUpdate()
        {
            this.IsNew = false;
            this.IsDirty = false;
        }

        /// <summary>
        /// Public Method
        /// <para>Method for set PropertyModel to Entity</para>
        /// </summary>
        public void ToEntity()
        {
            if (IsNew)
                this.tims_WorkSchedule.Id = this.Id;
            this.tims_WorkSchedule.WorkScheduleName = this.WorkScheduleName;
            this.tims_WorkSchedule.WorkScheduleType = this.WorkScheduleType;
            this.tims_WorkSchedule.Rotate = this.Rotate;
            this.tims_WorkSchedule.Status = this.Status;
            this.tims_WorkSchedule.DateCreated = this.DateCreated;
            this.tims_WorkSchedule.UserCreated = this.UserCreated;
            this.tims_WorkSchedule.UserUpdated = this.UserUpdated;
            this.tims_WorkSchedule.DateUpdated = this.DateUpdated;
        }

        /// <summary>
        /// Public Method
        /// <para>Method for set Entity to PropertyModel</para>
        /// </summary
        public void ToModel()
        {
            this._id = this.tims_WorkSchedule.Id;
            this._workScheduleName = this.tims_WorkSchedule.WorkScheduleName;
            this._workScheduleType = this.tims_WorkSchedule.WorkScheduleType;
            this._rotate = this.tims_WorkSchedule.Rotate;
            this._status = this.tims_WorkSchedule.Status;
            this._dateCreated = this.tims_WorkSchedule.DateCreated;
            this._userCreated = this.tims_WorkSchedule.UserCreated;
            this._userUpdated = this.tims_WorkSchedule.UserUpdated;
            this._dateUpdated = this.tims_WorkSchedule.DateUpdated;
        }

        /// <summary>
        /// Public Method
        /// <para>Method for set Entity to PropertyModel</para>
        /// </summary
        public void ToModelAndRaise()
        {
            this.Id = this.tims_WorkSchedule.Id;
            this.WorkScheduleName = this.tims_WorkSchedule.WorkScheduleName;
            this.WorkScheduleType = this.tims_WorkSchedule.WorkScheduleType;
            this.Rotate = this.tims_WorkSchedule.Rotate;
            this.Status = this.tims_WorkSchedule.Status;
            this.DateCreated = this.tims_WorkSchedule.DateCreated;
            this.UserCreated = this.tims_WorkSchedule.UserCreated;
            this.UserUpdated = this.tims_WorkSchedule.UserUpdated;
            this.DateUpdated = this.tims_WorkSchedule.DateUpdated;
        }

        #endregion

        #region Custom Code


        #endregion

        #region IDataErrorInfo Members

        public string Error
        {
            get { throw new NotImplementedException(); }
        }

        public string this[string columnName]
        {
            get
            {
                string message = string.Empty;

                switch (columnName)
                {
                    case "Id":
                        break;
                    case "WorkScheduleName":
                        break;
                    case "WorkScheduleType":
                        break;
                    case "Rotate":
                        break;
                    case "Status":
                        break;
                    case "CreatedDate":
                        break;
                    case "CreatedById":
                        break;
                    case "ModifiedDate":
                        break;
                    case "ModifiedById":
                        break;
                }

                if (!string.IsNullOrWhiteSpace(message))
                    return message;
                return null;
            }
        }

        #endregion
    }
}

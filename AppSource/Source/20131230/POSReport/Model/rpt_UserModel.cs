//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using CPC.POSReport.Database;
using Toolkit.Base;

namespace CPC.POSReport.Model
{
    /// <summary>
    /// Model for table rpt_User
    /// </summary>
    [Serializable]
    public partial class rpt_UserModel : ModelBase, IDataErrorInfo
    {
        #region Constructor

        // Default constructor
        public rpt_UserModel()
        {
            this.IsNew = true;
            this.rpt_User = new rpt_User();
        }

        // Default constructor that set entity to field
        public rpt_UserModel(rpt_User rpt_user, bool isRaiseProperties = false)
        {
            this.rpt_User = rpt_user;
            if (!isRaiseProperties)
                this.ToModel();
            else
                this.ToModelAndRaise();
            this.IsDirty = false;
        }

        #endregion

        #region Entity Properties

        public rpt_User rpt_User { get; private set; }

        #endregion

        #region Primitive Properties

        protected int _id;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the Id</para>
        /// </summary>
        public int Id
        {
            get { return this._id; }
            set
            {
                if (this._id != value)
                {
                    this.IsDirty = true;
                    this._id = value;
                    OnPropertyChanged(() => Id);
                    PropertyChangedCompleted(() => Id);
                }
            }
        }

        protected string _userName;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the UserName</para>
        /// </summary>
        public string UserName
        {
            get { return this._userName; }
            set
            {
                if (this._userName != value)
                {
                    this.IsDirty = true;
                    this._userName = value;
                    OnPropertyChanged(() => UserName);
                    PropertyChangedCompleted(() => UserName);
                }
            }
        }

        protected string _loginName;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the LoginName</para>
        /// </summary>
        public string LoginName
        {
            get { return this._loginName; }
            set
            {
                if (this._loginName != value)
                {
                    this.IsDirty = true;
                    this._loginName = value;
                    OnPropertyChanged(() => LoginName);
                    PropertyChangedCompleted(() => LoginName);
                }
            }
        }

        protected string _password;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the Password</para>
        /// </summary>
        public string Password
        {
            get { return this._password; }
            set
            {
                if (this._password != value)
                {
                    this.IsDirty = true;
                    this._password = value;
                    OnPropertyChanged(() => Password);
                    PropertyChangedCompleted(() => Password);
                }
            }
        }

        protected System.Guid _resource;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the Resource</para>
        /// </summary>
        public System.Guid Resource
        {
            get { return this._resource; }
            set
            {
                if (this._resource != value)
                {
                    this.IsDirty = true;
                    this._resource = value;
                    OnPropertyChanged(() => Resource);
                    PropertyChangedCompleted(() => Resource);
                }
            }
        }

        protected Nullable<System.DateTime> _createdDate;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the CreatedDate</para>
        /// </summary>
        public Nullable<System.DateTime> CreatedDate
        {
            get { return this._createdDate; }
            set
            {
                if (this._createdDate != value)
                {
                    this.IsDirty = true;
                    this._createdDate = value;
                    OnPropertyChanged(() => CreatedDate);
                    PropertyChangedCompleted(() => CreatedDate);
                }
            }
        }

        protected Nullable<System.DateTime> _expiryDate;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the ExpiryDate</para>
        /// </summary>
        public Nullable<System.DateTime> ExpiryDate
        {
            get { return this._expiryDate; }
            set
            {
                if (this._expiryDate != value)
                {
                    this.IsDirty = true;
                    this._expiryDate = value;
                    OnPropertyChanged(() => ExpiryDate);
                    PropertyChangedCompleted(() => ExpiryDate);
                }
            }
        }

        protected Nullable<int> _departId;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the DepartId</para>
        /// </summary>
        public Nullable<int> DepartId
        {
            get { return this._departId; }
            set
            {
                if (this._departId != value)
                {
                    this.IsDirty = true;
                    this._departId = value;
                    OnPropertyChanged(() => DepartId);
                    PropertyChangedCompleted(() => DepartId);
                }
            }
        }

        protected string _position;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the Position</para>
        /// </summary>
        public string Position
        {
            get { return this._position; }
            set
            {
                if (this._position != value)
                {
                    this.IsDirty = true;
                    this._position = value;
                    OnPropertyChanged(() => Position);
                    PropertyChangedCompleted(() => Position);
                }
            }
        }

        protected Nullable<int> _levelId;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the LevelId</para>
        /// </summary>
        public Nullable<int> LevelId
        {
            get { return this._levelId; }
            set
            {
                if (this._levelId != value)
                {
                    this.IsDirty = true;
                    this._levelId = value;
                    OnPropertyChanged(() => LevelId);
                    PropertyChangedCompleted(() => LevelId);
                }
            }
        }

        protected bool _isActive;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the IsActive</para>
        /// </summary>
        public bool IsActive
        {
            get { return this._isActive; }
            set
            {
                if (this._isActive != value)
                {
                    this.IsDirty = true;
                    this._isActive = value;
                    OnPropertyChanged(() => IsActive);
                    PropertyChangedCompleted(() => IsActive);
                }
            }
        }

        #endregion

        #region Public Methods

        /// <summary>
        /// <para>Public Method</para>
        /// Method for set IsNew & IsDirty = false;
        /// </summary>
        public void EndUpdate()
        {
            this.IsNew = false;
            this.IsDirty = false;
        }

        /// <summary>
        /// Public Method
        /// <para>Method for set PropertyModel to Entity</para>
        /// </summary>
        public void ToEntity()
        {
            if (IsNew)
                this.rpt_User.Id = this.Id;
            this.rpt_User.UserName = this.UserName;
            this.rpt_User.LoginName = this.LoginName;
            this.rpt_User.Password = this.Password;
            this.rpt_User.Resource = this.Resource;
            this.rpt_User.CreatedDate = this.CreatedDate;
            this.rpt_User.ExpiryDate = this.ExpiryDate;
            this.rpt_User.DepartId = this.DepartId;
            this.rpt_User.Position = this.Position;
            this.rpt_User.LevelId = this.LevelId;
            this.rpt_User.IsActive = this.IsActive;
        }

        /// <summary>
        /// Public Method
        /// <para>Method for set Entity to PropertyModel</para>
        /// </summary
        public void ToModel()
        {
            this._id = this.rpt_User.Id;
            this._userName = this.rpt_User.UserName;
            this._loginName = this.rpt_User.LoginName;
            this._password = this.rpt_User.Password;
            this._resource = this.rpt_User.Resource;
            this._createdDate = this.rpt_User.CreatedDate;
            this._expiryDate = this.rpt_User.ExpiryDate;
            this._departId = this.rpt_User.DepartId;
            this._position = this.rpt_User.Position;
            this._levelId = this.rpt_User.LevelId;
            this._isActive = this.rpt_User.IsActive;
        }

        /// <summary>
        /// Public Method
        /// <para>Method for set Entity to PropertyModel</para>
        /// </summary
        public void ToModelAndRaise()
        {
            this.Id = this.rpt_User.Id;
            this.UserName = this.rpt_User.UserName;
            this.LoginName = this.rpt_User.LoginName;
            this.Password = this.rpt_User.Password;
            this.Resource = this.rpt_User.Resource;
            this.CreatedDate = this.rpt_User.CreatedDate;
            this.ExpiryDate = this.rpt_User.ExpiryDate;
            this.DepartId = this.rpt_User.DepartId;
            this.Position = this.rpt_User.Position;
            this.LevelId = this.rpt_User.LevelId;
            this.IsActive = this.rpt_User.IsActive;
        }

        #endregion

        #region Custom Code

        // Default constructor that set entity to field
        public rpt_UserModel(rpt_User rpt_user)
        {
            this.rpt_User = rpt_user;
            this.ToModel();
            this.StorePassword = this.Password;
            this.ConfirmPassword = this.Password = CPC.POSReport.Function.Common.PWD_TEMP;
            this.IsDirty = false;
        }

        //// Default constructor that set entity to field
        //public rpt_UserModel(rpt_User rpt_user, int reportId)
        //{
        //    this.rpt_User = rpt_user;
        //    this.ToModel();
        //    string resource = rpt_user.Resource.ToString();
        //    //var userReport = uRPerRepo.Get(x => x.UserResource == resource && x.rpt_Report.Id == reportId);
        //    //if (userReport != null)
        //    //{
        //    //    this.IsView = userReport.IsView;
        //    //    this.IsPrint = userReport.IsPrint;
        //    //}
        //    this.IsDirty = false;
        //}

        protected bool _isView = false;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the IsView</para>
        /// </summary>
        public bool IsView
        {
            get { return this._isView; }
            set
            {
                if (this._isView != value)
                {
                    this.IsDirty = true;
                    this._isView = value;
                    OnPropertyChanged(() => IsView);
                    PropertyChangedCompleted(() => IsView);
                }
            }
        }

        protected bool _isPrint = false;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the IsPrint</para>
        /// </summary>
        public bool IsPrint
        {
            get { return this._isPrint; }
            set
            {
                if (this._isPrint != value)
                {
                    this.IsDirty = true;
                    this._isPrint = value;
                    OnPropertyChanged(() => IsPrint);
                    PropertyChangedCompleted(() => IsPrint);
                }
            }
        }

        protected override void PropertyChangedCompleted(string propertyName)
        {
            base.PropertyChangedCompleted(propertyName);
            if (propertyName == "Password")
            {
                OnPropertyChanged(()=> ConfirmPassword);
            }
            if (propertyName == "ConfirmPassword")
            {
                OnPropertyChanged(() => Password);
            }
        }

        protected string _confirmPassword;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the Password</para>
        /// </summary>
        public string ConfirmPassword
        {
            get { return this._confirmPassword; }
            set
            {
                if (this._confirmPassword != value)
                {
                    this.IsDirty = true;
                    this._confirmPassword = value;
                    OnPropertyChanged(() => ConfirmPassword);
                    PropertyChangedCompleted(() => ConfirmPassword);
                }
            }
        }

        protected string _storePassword;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the Password</para>
        /// </summary>
        public string StorePassword
        {
            get { return this._storePassword; }
            set
            {
                if (this._storePassword != value)
                {
                    this._storePassword = value;
                }
            }
        }

        public string Error
        {
            get { return null; }
        }

        /// <summary>
        /// Get or set Errors string.
        /// </summary>
        protected Dictionary<string, string> _errors = new Dictionary<string, string>();
        public Dictionary<string, string> Errors
        {
            get { return _errors; }
        }
        

        #region IDataErrorInfo Members

        public string this[string columnName]
        {
            get
            {
                string message = string.Empty;
                System.Text.RegularExpressions.Regex regex;
                this.Errors.Remove(columnName);
                switch (columnName)
                {
                    case "UserName":
                        if (!string.IsNullOrEmpty(this.UserName))
                        {
                            regex = new System.Text.RegularExpressions.Regex(CPC.POSReport.Function.Common.USERNAME_FORMAT);
                            if (!regex.IsMatch(UserName))
                            {
                                message = "User name must a-z and length of 5-60 characters";
                            }
                        }
                        else
                        {
                            message = "User name is required";
                        }
                        break;
                    case "LoginName":
                        if (!string.IsNullOrEmpty(this.LoginName) && (!this.LoginName.Contains(" ")))
                        {
                            regex = new System.Text.RegularExpressions.Regex(CPC.POSReport.Function.Common.LOGIN_NAME_FORMAT);
                            if (!regex.IsMatch(this.LoginName))
                            {
                                message = "User name must a-z and length of 5-20 characters";
                            }
                        }
                        else
                        {
                            message = "Password is required";
                        }
                        break;
                    case "Password":
                        if (!string.IsNullOrEmpty(Password))
                        {
                            regex = new System.Text.RegularExpressions.Regex(CPC.POSReport.Function.Common.PASSWORD_FORMAT);
                            if (!regex.IsMatch(this.Password))
                            {
                                message = "Password must be 8 to 20 characters\n" +
                                            "and contain uppercase, lowercase characters and special or numeric characters!";
                            }
                        }
                        else
                        {
                            message = "Password is required";
                        }
                        break;
                    case "ConfirmPassword":
                        if (!string.IsNullOrEmpty(this.ConfirmPassword))
                        {
                            if (this.Password != this.ConfirmPassword)
                            {
                                message = "Confirm password is mismatch";
                            }
                        }
                        else
                        {
                            message = "Confirm password is required";
                        }
                        break;
                }
                if (!string.IsNullOrWhiteSpace(message))
                {
                    this.Errors.Add(columnName, message);
                }
                return message;
            }
        }

        #endregion

        #endregion
    }
}

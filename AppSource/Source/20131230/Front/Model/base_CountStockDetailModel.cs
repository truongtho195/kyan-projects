//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Linq;
using System.Linq.Expressions;
using CPC.Helper;
using CPC.POS.Database;
using CPC.Toolkit.Base;

namespace CPC.POS.Model
{
    /// <summary>
    /// Model for table base_CountStockDetail
    /// </summary>
    [Serializable]
    public partial class base_CountStockDetailModel : ModelBase, IDataErrorInfo
    {
        #region Constructor

        // Default constructor
        public base_CountStockDetailModel()
        {
            this.IsNew = true;
            this.base_CountStockDetail = new base_CountStockDetail();
        }

        // Default constructor that set entity to field
        public base_CountStockDetailModel(base_CountStockDetail base_countstockdetail, bool isRaiseProperties = false)
        {
            this.base_CountStockDetail = base_countstockdetail;
            if (!isRaiseProperties)
                this.ToModel();
            else
                this.ToModelAndRaise();
            this.IsDirty = false;
        }

        #endregion

        #region Entity Properties

        public base_CountStockDetail base_CountStockDetail { get; private set; }

        #endregion

        #region Primitive Properties

        protected long _id;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Id</param>
        /// </summary>
        public long Id
        {
            get { return this._id; }
            set
            {
                if (this._id != value)
                {
                    this.IsDirty = true;
                    this._id = value;
                    OnPropertyChanged(() => Id);
                    PropertyChangedCompleted(() => Id);
                }
            }
        }

        protected long _countStockId;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the CountStockId</param>
        /// </summary>
        public long CountStockId
        {
            get { return this._countStockId; }
            set
            {
                if (this._countStockId != value)
                {
                    this.IsDirty = true;
                    this._countStockId = value;
                    OnPropertyChanged(() => CountStockId);
                    PropertyChangedCompleted(() => CountStockId);
                }
            }
        }

        protected long _productId;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the ProductId</param>
        /// </summary>
        public long ProductId
        {
            get { return this._productId; }
            set
            {
                if (this._productId != value)
                {
                    this.IsDirty = true;
                    this._productId = value;
                    OnPropertyChanged(() => ProductId);
                    PropertyChangedCompleted(() => ProductId);
                }
            }
        }

        protected string _productResource;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the ProductResource</param>
        /// </summary>
        public string ProductResource
        {
            get { return this._productResource; }
            set
            {
                if (this._productResource != value)
                {
                    this.IsDirty = true;
                    this._productResource = value;
                    OnPropertyChanged(() => ProductResource);
                    PropertyChangedCompleted(() => ProductResource);
                }
            }
        }

        protected short _storeId;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the StoreId</param>
        /// </summary>
        public short StoreId
        {
            get { return this._storeId; }
            set
            {
                if (this._storeId != value)
                {
                    this.IsDirty = true;
                    this._storeId = value;
                    OnPropertyChanged(() => StoreId);
                    PropertyChangedCompleted(() => StoreId);
                }
            }
        }

        protected decimal _quantity;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Quantity</param>
        /// </summary>
        public decimal Quantity
        {
            get { return this._quantity; }
            set
            {
                if (this._quantity != value)
                {
                    this.IsDirty = true;
                    this._quantity = value;
                    OnPropertyChanged(() => Quantity);
                    PropertyChangedCompleted(() => Quantity);
                }
            }
        }

        protected Nullable<decimal> _countedQuantity;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the CountedQuantity</param>
        /// </summary>
        public Nullable<decimal> CountedQuantity
        {
            get { return this._countedQuantity; }
            set
            {
                if (this._countedQuantity != value)
                {
                    this.IsDirty = true;
                    this._countedQuantity = value;
                    OnPropertyChanged(() => CountedQuantity);
                    PropertyChangedCompleted(() => CountedQuantity);
                }
            }
        }

        protected Nullable<decimal> _difference;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Difference</param>
        /// </summary>
        public Nullable<decimal> Difference
        {
            get { return this._difference; }
            set
            {
                if (this._difference != value)
                {
                    this.IsDirty = true;
                    this._difference = value;
                    OnPropertyChanged(() => Difference);
                    PropertyChangedCompleted(() => Difference);
                }
            }
        }

        #endregion

        #region Public Methods

        /// <summary>
        /// <param>Public Method</param>
        /// Method for set IsNew & IsDirty = false;
        /// </summary>
        public void EndUpdate()
        {
            this.IsNew = false;
            this.IsDirty = false;
        }

        /// <summary>
        /// Public Method
        /// <param>Method for set PropertyModel to Entity</param>
        /// </summary>
        public void ToEntity()
        {
            if (IsNew)
                this.base_CountStockDetail.Id = this.Id;
            this.base_CountStockDetail.CountStockId = this.CountStockId;
            this.base_CountStockDetail.ProductId = this.ProductId;
            if (this.ProductResource != null)
                this.base_CountStockDetail.ProductResource = this.ProductResource.Trim();
            this.base_CountStockDetail.StoreId = this.StoreId;
            this.base_CountStockDetail.Quantity = this.Quantity;
            this.base_CountStockDetail.CountedQuantity = this.CountedQuantity;
            this.base_CountStockDetail.Difference = this.Difference;
        }

        /// <summary>
        /// Public Method
        /// <param>Method for set Entity to PropertyModel</param>
        /// </summary
        public void ToModel()
        {
            this._id = this.base_CountStockDetail.Id;
            this._countStockId = this.base_CountStockDetail.CountStockId;
            this._productId = this.base_CountStockDetail.ProductId;
            this._productResource = this.base_CountStockDetail.ProductResource;
            this._storeId = this.base_CountStockDetail.StoreId;
            this._quantity = this.base_CountStockDetail.Quantity;
            this._countedQuantity = this.base_CountStockDetail.CountedQuantity;
            this._difference = this.base_CountStockDetail.Difference;
        }

        /// <summary>
        /// Public Method
        /// <param>Method for set Entity to PropertyModel</param>
        /// </summary
        public void ToModelAndRaise()
        {
            this.Id = this.base_CountStockDetail.Id;
            this.CountStockId = this.base_CountStockDetail.CountStockId;
            this.ProductId = this.base_CountStockDetail.ProductId;
            this.ProductResource = this.base_CountStockDetail.ProductResource;
            this.StoreId = this.base_CountStockDetail.StoreId;
            this.Quantity = this.base_CountStockDetail.Quantity;
            this.CountedQuantity = this.base_CountStockDetail.CountedQuantity;
            this.Difference = this.base_CountStockDetail.Difference;
        }

        #endregion

        #region Custom Code
        protected string _productName;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the ProductName</para>
        /// </summary>
        public string ProductName
        {
            get { return this._productName; }
            set
            {
                if (this._productName != value)
                {
                    this._productName = value;
                    OnPropertyChanged(() => ProductName);
                    PropertyChangedCompleted(() => ProductName);
                }
            }
        }

        protected string _description;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the Description</para>
        /// </summary>
        public string Description
        {
            get { return this._description; }
            set
            {
                if (this._description != value)
                {
                    this._description = value;
                    OnPropertyChanged(() => Description);
                    PropertyChangedCompleted(() => Description);
                }
            }
        }

        protected string _attribute;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the Attribute</para>
        /// </summary>
        public string Attribute
        {
            get { return this._attribute; }
            set
            {
                if (this._attribute != value)
                {
                    this._attribute = value;
                    OnPropertyChanged(() => Attribute);
                    PropertyChangedCompleted(() => Attribute);
                }
            }
        }

        protected string _size;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the Size</para>
        /// </summary>
        public string Size
        {
            get { return this._size; }
            set
            {
                if (this._size != value)
                {
                    this._size = value;
                    OnPropertyChanged(() => Size);
                    PropertyChangedCompleted(() => Size);
                }
            }
        }

        protected string _productCode;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the ProductResource</para>
        /// </summary>
        public string ProductCode
        {
            get { return this._productCode; }
            set
            {
                if (this._productCode != value)
                {
                    this._productCode = value;
                    OnPropertyChanged(() => ProductCode);
                }
            }
        }

        protected bool _isCounted;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the IsCounted</para>
        /// </summary>
        public bool IsCounted
        {
            get { return this._isCounted; }
            set
            {
                if (this._isCounted != value)
                {
                    this._isCounted = value;
                    OnPropertyChanged(() => IsCounted);
                }
            }
        }

        protected Nullable<decimal> _countedQty;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the CountedQty</para>
        /// </summary>
        public Nullable<decimal> CountedQty
        {
            get { return this._countedQty; }
            set
            {
                this.IsDirty = true;
                this._countedQty = value;
                OnPropertyChanged(() => CountedQty);
                PropertyChangedCompleted(() => CountedQty);
            }
        }

        protected bool _isSetCounted;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the IsSetCounted</para>
        /// </summary>
        public bool IsSetCounted
        {
            get { return this._isSetCounted; }
            set
            {
                if (this._isSetCounted != value)
                {
                    this._isSetCounted = value;
                    OnPropertyChanged(() => IsSetCounted);
                }
            }
        }
        #endregion

        #region IDataErrorInfo Members

        public string Error
        {
            get
            {
                List<string> errors = new List<string>();
                PropertyDescriptorCollection props = TypeDescriptor.GetProperties(this);
                foreach (PropertyDescriptor prop in props)
                {
                    string msg = this[prop.Name];
                    if (!string.IsNullOrWhiteSpace(msg))
                    {
                        errors.Add(msg);
                    }
                }
                return string.Join(Environment.NewLine, errors);
            }
        }

        public string this[string columnName]
        {
            get
            {
                string message = string.Empty;

                switch (columnName)
                {
                    case "Id":
                        break;
                    case "CountStockId":
                        break;
                    case "ProductId":
                        break;
                    case "ProductResource":
                        break;
                    case "StoreId":
                        break;
                    case "Quantity":
                        break;
                    case "CountedQuantity":
                        break;
                }

                if (!string.IsNullOrWhiteSpace(message))
                    return message;
                return null;
            }
        }

        #endregion
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Linq;
using System.Linq.Expressions;
using CPC.Helper;
using CPC.POS.Database;
using CPC.Toolkit.Base;

namespace CPC.POS.Model
{
    /// <summary>
    /// Model for table base_SaleOrderDetail
    /// </summary>
    [Serializable]
    public partial class base_SaleOrderDetailModel : ModelBase, IDataErrorInfo, IEditableObject
    {
        #region Constructor

        // Default constructor
        public base_SaleOrderDetailModel()
        {
            this.IsNew = true;
            this.base_SaleOrderDetail = new base_SaleOrderDetail();
        }

        // Default constructor that set entity to field
        public base_SaleOrderDetailModel(base_SaleOrderDetail base_saleorderdetail, bool isRaiseProperties = false)
        {
            this.base_SaleOrderDetail = base_saleorderdetail;
            if (!isRaiseProperties)
                this.ToModel();
            else
                this.ToModelAndRaise();
            this.IsDirty = false;
        }

        #endregion

        #region Entity Properties

        public base_SaleOrderDetail base_SaleOrderDetail { get; private set; }

        #endregion

        #region Primitive Properties

        protected long _id;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Id</param>
        /// </summary>
        public long Id
        {
            get { return this._id; }
            set
            {
                if (this._id != value)
                {
                    this.IsDirty = true;
                    this._id = value;
                    OnPropertyChanged(() => Id);
                    PropertyChangedCompleted(() => Id);
                }
            }
        }

        protected long _saleOrderId;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the SaleOrderId</param>
        /// </summary>
        public long SaleOrderId
        {
            get { return this._saleOrderId; }
            set
            {
                if (this._saleOrderId != value)
                {
                    this.IsDirty = true;
                    this._saleOrderId = value;
                    OnPropertyChanged(() => SaleOrderId);
                    PropertyChangedCompleted(() => SaleOrderId);
                }
            }
        }

        protected string _productResource;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the ProductResource</param>
        /// </summary>
        public string ProductResource
        {
            get { return this._productResource; }
            set
            {
                if (this._productResource != value)
                {
                    this.IsDirty = true;
                    this._productResource = value;
                    OnPropertyChanged(() => ProductResource);
                    PropertyChangedCompleted(() => ProductResource);
                }
            }
        }

        protected string _itemCode;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the ItemCode</param>
        /// </summary>
        public string ItemCode
        {
            get { return this._itemCode; }
            set
            {
                if (this._itemCode != value)
                {
                    this.IsDirty = true;
                    this._itemCode = value;
                    OnPropertyChanged(() => ItemCode);
                    PropertyChangedCompleted(() => ItemCode);
                }
            }
        }

        protected string _itemName;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the ItemName</param>
        /// </summary>
        public string ItemName
        {
            get { return this._itemName; }
            set
            {
                if (this._itemName != value)
                {
                    this.IsDirty = true;
                    this._itemName = value;
                    OnPropertyChanged(() => ItemName);
                    PropertyChangedCompleted(() => ItemName);
                }
            }
        }

        protected string _itemAtribute;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the ItemAtribute</param>
        /// </summary>
        public string ItemAtribute
        {
            get { return this._itemAtribute; }
            set
            {
                if (this._itemAtribute != value)
                {
                    this.IsDirty = true;
                    this._itemAtribute = value;
                    OnPropertyChanged(() => ItemAtribute);
                    PropertyChangedCompleted(() => ItemAtribute);
                }
            }
        }

        protected string _itemSize;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the ItemSize</param>
        /// </summary>
        public string ItemSize
        {
            get { return this._itemSize; }
            set
            {
                if (this._itemSize != value)
                {
                    this.IsDirty = true;
                    this._itemSize = value;
                    OnPropertyChanged(() => ItemSize);
                    PropertyChangedCompleted(() => ItemSize);
                }
            }
        }

        protected string _taxCode;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the TaxCode</param>
        /// </summary>
        public string TaxCode
        {
            get { return this._taxCode; }
            set
            {
                if (this._taxCode != value)
                {
                    this.IsDirty = true;
                    this._taxCode = value;
                    OnPropertyChanged(() => TaxCode);
                    PropertyChangedCompleted(() => TaxCode);
                }
            }
        }

        protected decimal _quantity;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Quantity</param>
        /// </summary>
        public decimal Quantity
        {
            get { return this._quantity; }
            set
            {
                if (this._quantity != value)
                {
                    this.IsDirty = true;
                    this._quantity = value;
                    OnPropertyChanged(() => Quantity);
                    PropertyChangedCompleted(() => Quantity);
                }
            }
        }

        protected decimal _pickQty;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the PickQty</param>
        /// </summary>
        public decimal PickQty
        {
            get { return this._pickQty; }
            set
            {
                if (this._pickQty != value)
                {
                    this.IsDirty = true;
                    this._pickQty = value;
                    OnPropertyChanged(() => PickQty);
                    PropertyChangedCompleted(() => PickQty);
                }
            }
        }

        protected decimal _dueQty;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the DueQty</param>
        /// </summary>
        public decimal DueQty
        {
            get { return this._dueQty; }
            set
            {
                if (this._dueQty != value)
                {
                    this.IsDirty = true;
                    this._dueQty = value;
                    OnPropertyChanged(() => DueQty);
                    PropertyChangedCompleted(() => DueQty);
                }
            }
        }

        protected decimal _unFilled;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the UnFilled</param>
        /// </summary>
        public decimal UnFilled
        {
            get { return this._unFilled; }
            set
            {
                if (this._unFilled != value)
                {
                    this.IsDirty = true;
                    this._unFilled = value;
                    OnPropertyChanged(() => UnFilled);
                    PropertyChangedCompleted(() => UnFilled);
                }
            }
        }

        protected decimal _regularPrice;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the RegularPrice</param>
        /// </summary>
        public decimal RegularPrice
        {
            get { return this._regularPrice; }
            set
            {
                if (this._regularPrice != value)
                {
                    this.IsDirty = true;
                    this._regularPrice = value;
                    OnPropertyChanged(() => RegularPrice);
                    PropertyChangedCompleted(() => RegularPrice);
                }
            }
        }

        protected decimal _salePrice;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the SalePrice</param>
        /// </summary>
        public decimal SalePrice
        {
            get { return this._salePrice; }
            set
            {
                if (this._salePrice != value)
                {
                    this.IsDirty = true;
                    this._salePrice = value;
                    OnPropertyChanged(() => SalePrice);
                    PropertyChangedCompleted(() => SalePrice);
                }
            }
        }

        protected Nullable<int> _uOMId;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the UOMId</param>
        /// </summary>
        public Nullable<int> UOMId
        {
            get { return this._uOMId; }
            set
            {
                if (this._uOMId != value)
                {
                    this.IsDirty = true;
                    this._uOMId = value;
                    OnPropertyChanged(() => UOMId);
                    PropertyChangedCompleted(() => UOMId);
                }
            }
        }

        protected string _uOM;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the UOM</param>
        /// </summary>
        public string UOM
        {
            get { return this._uOM; }
            set
            {
                if (this._uOM != value)
                {
                    this.IsDirty = true;
                    this._uOM = value;
                    OnPropertyChanged(() => UOM);
                    PropertyChangedCompleted(() => UOM);
                }
            }
        }

        protected decimal _discountPercent;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the DiscountPercent</param>
        /// </summary>
        public decimal DiscountPercent
        {
            get { return this._discountPercent; }
            set
            {
                if (this._discountPercent != value)
                {
                    this.IsDirty = true;
                    this._discountPercent = value;
                    OnPropertyChanged(() => DiscountPercent);
                    PropertyChangedCompleted(() => DiscountPercent);
                }
            }
        }

        protected decimal _discountAmount;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the DiscountAmount</param>
        /// </summary>
        public decimal DiscountAmount
        {
            get { return this._discountAmount; }
            set
            {
                if (this._discountAmount != value)
                {
                    this.IsDirty = true;
                    this._discountAmount = value;
                    OnPropertyChanged(() => DiscountAmount);
                    PropertyChangedCompleted(() => DiscountAmount);
                }
            }
        }

        protected decimal _subTotal;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the SubTotal</param>
        /// </summary>
        public decimal SubTotal
        {
            get { return this._subTotal; }
            set
            {
                if (this._subTotal != value)
                {
                    this.IsDirty = true;
                    this._subTotal = value;
                    OnPropertyChanged(() => SubTotal);
                    PropertyChangedCompleted(() => SubTotal);
                }
            }
        }

        protected decimal _onHandQty;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the OnHandQty</param>
        /// </summary>
        public decimal OnHandQty
        {
            get { return this._onHandQty; }
            set
            {
                if (this._onHandQty != value)
                {
                    this.IsDirty = true;
                    this._onHandQty = value;
                    OnPropertyChanged(() => OnHandQty);
                    PropertyChangedCompleted(() => OnHandQty);
                }
            }
        }

        protected string _serialTracking;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the SerialTracking</param>
        /// </summary>
        public string SerialTracking
        {
            get { return this._serialTracking; }
            set
            {
                if (this._serialTracking != value)
                {
                    this.IsDirty = true;
                    this._serialTracking = value;
                    OnPropertyChanged(() => SerialTracking);
                    PropertyChangedCompleted(() => SerialTracking);
                }
            }
        }

        protected System.Guid _resource;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Resource</param>
        /// </summary>
        public System.Guid Resource
        {
            get { return this._resource; }
            set
            {
                if (this._resource != value)
                {
                    this.IsDirty = true;
                    this._resource = value;
                    OnPropertyChanged(() => Resource);
                    PropertyChangedCompleted(() => Resource);
                }
            }
        }

        protected int _balanceShipped;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the BalanceShipped</param>
        /// </summary>
        public int BalanceShipped
        {
            get { return this._balanceShipped; }
            set
            {
                if (this._balanceShipped != value)
                {
                    this.IsDirty = true;
                    this._balanceShipped = value;
                    OnPropertyChanged(() => BalanceShipped);
                    PropertyChangedCompleted(() => BalanceShipped);
                }
            }
        }

        protected string _comment;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Comment</param>
        /// </summary>
        public string Comment
        {
            get { return this._comment; }
            set
            {
                if (this._comment != value)
                {
                    this.IsDirty = true;
                    this._comment = value;
                    OnPropertyChanged(() => Comment);
                    PropertyChangedCompleted(() => Comment);
                }
            }
        }

        protected decimal _totalDiscount;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the TotalDiscount</param>
        /// </summary>
        public decimal TotalDiscount
        {
            get { return this._totalDiscount; }
            set
            {
                if (this._totalDiscount != value)
                {
                    this.IsDirty = true;
                    this._totalDiscount = value;
                    OnPropertyChanged(() => TotalDiscount);
                    PropertyChangedCompleted(() => TotalDiscount);
                }
            }
        }

        protected Nullable<int> _promotionId;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the PromotionId</param>
        /// </summary>
        public Nullable<int> PromotionId
        {
            get { return this._promotionId; }
            set
            {
                if (this._promotionId != value)
                {
                    this.IsDirty = true;
                    this._promotionId = value;
                    OnPropertyChanged(() => PromotionId);
                    PropertyChangedCompleted(() => PromotionId);
                }
            }
        }

        protected bool _isManual;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the IsManual</param>
        /// </summary>
        public bool IsManual
        {
            get { return this._isManual; }
            set
            {
                if (this._isManual != value)
                {
                    this.IsDirty = true;
                    this._isManual = value;
                    OnPropertyChanged(() => IsManual);
                    PropertyChangedCompleted(() => IsManual);
                }
            }
        }

        protected string _parentResource;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the ParentResource</param>
        /// </summary>
        public string ParentResource
        {
            get { return this._parentResource; }
            set
            {
                if (this._parentResource != value)
                {
                    this.IsDirty = true;
                    this._parentResource = value;
                    OnPropertyChanged(() => ParentResource);
                    PropertyChangedCompleted(() => ParentResource);
                }
            }
        }

        protected long _productParentId;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the ProductParentId</param>
        /// </summary>
        public long ProductParentId
        {
            get { return this._productParentId; }
            set
            {
                if (this._productParentId != value)
                {
                    this.IsDirty = true;
                    this._productParentId = value;
                    OnPropertyChanged(() => ProductParentId);
                    PropertyChangedCompleted(() => ProductParentId);
                }
            }
        }

        protected string _promotionName;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the PromotionName</param>
        /// </summary>
        public string PromotionName
        {
            get { return this._promotionName; }
            set
            {
                if (this._promotionName != value)
                {
                    this.IsDirty = true;
                    this._promotionName = value;
                    OnPropertyChanged(() => PromotionName);
                    PropertyChangedCompleted(() => PromotionName);
                }
            }
        }

        #endregion

        #region Public Methods

        /// <summary>
        /// <param>Public Method</param>
        /// Method for set IsNew & IsDirty = false;
        /// </summary>
        public void EndUpdate()
        {
            this.IsNew = false;
            this.IsDirty = false;
        }

        /// <summary>
        /// Public Method
        /// <param>Method for set PropertyModel to Entity</param>
        /// </summary>
        public void ToEntity()
        {
            if (IsNew)
                this.base_SaleOrderDetail.Id = this.Id;
            this.base_SaleOrderDetail.SaleOrderId = this.SaleOrderId;
            if (this.ProductResource != null)
                this.base_SaleOrderDetail.ProductResource = this.ProductResource.Trim();
            if (this.ItemCode != null)
                this.base_SaleOrderDetail.ItemCode = this.ItemCode.Trim();
            if (this.ItemName != null)
                this.base_SaleOrderDetail.ItemName = this.ItemName.Trim();
            if (this.ItemAtribute != null)
                this.base_SaleOrderDetail.ItemAtribute = this.ItemAtribute.Trim();
            if (this.ItemSize != null)
                this.base_SaleOrderDetail.ItemSize = this.ItemSize.Trim();
            if (this.TaxCode != null)
                this.base_SaleOrderDetail.TaxCode = this.TaxCode.Trim();
            this.base_SaleOrderDetail.Quantity = this.Quantity;
            this.base_SaleOrderDetail.PickQty = this.PickQty;
            this.base_SaleOrderDetail.DueQty = this.DueQty;
            this.base_SaleOrderDetail.UnFilled = this.UnFilled;
            this.base_SaleOrderDetail.RegularPrice = this.RegularPrice;
            this.base_SaleOrderDetail.SalePrice = this.SalePrice;
            this.base_SaleOrderDetail.UOMId = this.UOMId;
            if (this.UOM != null)
                this.base_SaleOrderDetail.UOM = this.UOM.Trim();
            this.base_SaleOrderDetail.DiscountPercent = this.DiscountPercent;
            this.base_SaleOrderDetail.DiscountAmount = this.DiscountAmount;
            this.base_SaleOrderDetail.SubTotal = this.SubTotal;
            this.base_SaleOrderDetail.OnHandQty = this.OnHandQty;
            if (this.SerialTracking != null)
                this.base_SaleOrderDetail.SerialTracking = this.SerialTracking.Trim();
            this.base_SaleOrderDetail.Resource = this.Resource;
            this.base_SaleOrderDetail.BalanceShipped = this.BalanceShipped;
            if (this.Comment != null)
                this.base_SaleOrderDetail.Comment = this.Comment.Trim();
            this.base_SaleOrderDetail.TotalDiscount = this.TotalDiscount;
            this.base_SaleOrderDetail.PromotionId = this.PromotionId;
            this.base_SaleOrderDetail.IsManual = this.IsManual;
            if (this.ParentResource != null)
                this.base_SaleOrderDetail.ParentResource = this.ParentResource.Trim();
            this.base_SaleOrderDetail.ProductParentId = this.ProductParentId;
            if (this.PromotionName != null)
                this.base_SaleOrderDetail.PromotionName = this.PromotionName.Trim();
        }

        /// <summary>
        /// Public Method
        /// <param>Method for set Entity to PropertyModel</param>
        /// </summary
        public void ToModel()
        {
            this._id = this.base_SaleOrderDetail.Id;
            this._saleOrderId = this.base_SaleOrderDetail.SaleOrderId;
            this._productResource = this.base_SaleOrderDetail.ProductResource;
            this._itemCode = this.base_SaleOrderDetail.ItemCode;
            this._itemName = this.base_SaleOrderDetail.ItemName;
            this._itemAtribute = this.base_SaleOrderDetail.ItemAtribute;
            this._itemSize = this.base_SaleOrderDetail.ItemSize;
            this._taxCode = this.base_SaleOrderDetail.TaxCode;
            this._quantity = this.base_SaleOrderDetail.Quantity;
            this._pickQty = this.base_SaleOrderDetail.PickQty;
            this._dueQty = this.base_SaleOrderDetail.DueQty;
            this._unFilled = this.base_SaleOrderDetail.UnFilled;
            this._regularPrice = this.base_SaleOrderDetail.RegularPrice;
            this._salePrice = this.base_SaleOrderDetail.SalePrice;
            this._uOMId = this.base_SaleOrderDetail.UOMId;
            this._uOM = this.base_SaleOrderDetail.UOM;
            this._discountPercent = this.base_SaleOrderDetail.DiscountPercent;
            this._discountAmount = this.base_SaleOrderDetail.DiscountAmount;
            this._subTotal = this.base_SaleOrderDetail.SubTotal;
            this._onHandQty = this.base_SaleOrderDetail.OnHandQty;
            this._serialTracking = this.base_SaleOrderDetail.SerialTracking;
            this._resource = this.base_SaleOrderDetail.Resource;
            this._balanceShipped = this.base_SaleOrderDetail.BalanceShipped;
            this._comment = this.base_SaleOrderDetail.Comment;
            this._totalDiscount = this.base_SaleOrderDetail.TotalDiscount;
            this._promotionId = this.base_SaleOrderDetail.PromotionId;
            this._isManual = this.base_SaleOrderDetail.IsManual;
            this._parentResource = this.base_SaleOrderDetail.ParentResource;
            this._productParentId = this.base_SaleOrderDetail.ProductParentId;
            this._promotionName = this.base_SaleOrderDetail.PromotionName;
        }

        /// <summary>
        /// Public Method
        /// <param>Method for set Entity to PropertyModel</param>
        /// </summary
        public void ToModelAndRaise()
        {
            this.Id = this.base_SaleOrderDetail.Id;
            this.SaleOrderId = this.base_SaleOrderDetail.SaleOrderId;
            this.ProductResource = this.base_SaleOrderDetail.ProductResource;
            this.ItemCode = this.base_SaleOrderDetail.ItemCode;
            this.ItemName = this.base_SaleOrderDetail.ItemName;
            this.ItemAtribute = this.base_SaleOrderDetail.ItemAtribute;
            this.ItemSize = this.base_SaleOrderDetail.ItemSize;
            this.TaxCode = this.base_SaleOrderDetail.TaxCode;
            this.Quantity = this.base_SaleOrderDetail.Quantity;
            this.PickQty = this.base_SaleOrderDetail.PickQty;
            this.DueQty = this.base_SaleOrderDetail.DueQty;
            this.UnFilled = this.base_SaleOrderDetail.UnFilled;
            this.RegularPrice = this.base_SaleOrderDetail.RegularPrice;
            this.SalePrice = this.base_SaleOrderDetail.SalePrice;
            this.UOMId = this.base_SaleOrderDetail.UOMId;
            this.UOM = this.base_SaleOrderDetail.UOM;
            this.DiscountPercent = this.base_SaleOrderDetail.DiscountPercent;
            this.DiscountAmount = this.base_SaleOrderDetail.DiscountAmount;
            this.SubTotal = this.base_SaleOrderDetail.SubTotal;
            this.OnHandQty = this.base_SaleOrderDetail.OnHandQty;
            this.SerialTracking = this.base_SaleOrderDetail.SerialTracking;
            this.Resource = this.base_SaleOrderDetail.Resource;
            this.BalanceShipped = this.base_SaleOrderDetail.BalanceShipped;
            this.Comment = this.base_SaleOrderDetail.Comment;
            this.TotalDiscount = this.base_SaleOrderDetail.TotalDiscount;
            this.PromotionId = this.base_SaleOrderDetail.PromotionId;
            this.IsManual = this.base_SaleOrderDetail.IsManual;
            this.ParentResource = this.base_SaleOrderDetail.ParentResource;
            this.ProductParentId = this.base_SaleOrderDetail.ProductParentId;
            this.PromotionName = this.base_SaleOrderDetail.PromotionName;
        }

        #endregion

        #region Custom Code

        #region Properties
        /// <summary>
        /// Flag Validation QtyOfPick > DueQty in Pick & Pack  process
        /// <para>Using in pick & pack view</para>
        /// </summary>
        public bool IsPickProcess { get; set; }

        #region ProductModel
        private base_ProductModel _productModel;
        /// <summary>
        /// Gets or sets the ProductModel.
        /// </summary>
        public base_ProductModel ProductModel
        {
            get { return _productModel; }
            set
            {
                if (_productModel != value)
                {
                    _productModel = value;
                    OnPropertyChanged(() => ProductModel);
                }
            }
        }
        #endregion

        #region ProductUOMCollection
        private ObservableCollection<base_ProductUOMModel> _productUOMCollection;
        /// <summary>
        /// Gets or sets the ProductUOMCollection.
        /// </summary>
        public ObservableCollection<base_ProductUOMModel> ProductUOMCollection
        {
            get { return _productUOMCollection; }
            set
            {
                if (_productUOMCollection != value)
                {
                    _productUOMCollection = value;
                    OnPropertyChanged(() => ProductUOMCollection);
                }
            }
        }
        #endregion

        #region UnitName

        private string _unitName;
        /// <summary>
        /// Gets or sets unit's name that this object is holding.
        /// </summary>
        public string UnitName
        {
            get
            {
                return _unitName;
            }
            set
            {
                if (_unitName != value)
                {
                    _isDirty = true;
                    _unitName = value;
                    OnPropertyChanged(() => UnitName);
                }
            }
        }

        #endregion

        #region Qty
        private decimal _qty;
        /// <summary>
        /// Gets or sets the Qty.
        /// <para>Using for compare quanty when user lost focus</para>
        /// </summary>
        public decimal Qty
        {
            get { return _qty; }
            set
            {
                if (_qty != value)
                {
                    _qty = value;
                    OnPropertyChanged(() => Qty);
                }
            }
        }
        #endregion

        #region QtyOfPick
        private decimal _qtyOfPick;

        /// <summary>
        /// Gets or sets the QtyOfPick.
        /// Quantity when user pick in current pick & pack process</summary>
        public decimal QtyOfPick
        {
            get { return _qtyOfPick; }
            set
            {
                if (_qtyOfPick != value)
                {
                    _qtyOfPick = value;
                    OnPropertyChanged(() => QtyOfPick);
                }
            }
        }
        #endregion

        #region IsVisibleRowDetail
        private bool _isVisibleRowDetail;
        /// <summary>
        /// Gets or sets the IsVisibleRowDetail.
        /// </summary>
        public bool IsVisibleRowDetail
        {
            get { return _isVisibleRowDetail; }
            set
            {
                if (_isVisibleRowDetail != value)
                {
                    _isVisibleRowDetail = value;
                    OnPropertyChanged(() => IsVisibleRowDetail);
                }
            }
        }
        #endregion

        #region UnitDiscount
        private decimal _unitDiscount;
        /// <summary>
        /// Gets or sets the UnitDiscount.
        /// </summary>
        public decimal UnitDiscount
        {
            get { return _unitDiscount; }
            set
            {
                if (_unitDiscount != value)
                {
                    _unitDiscount = value;
                    OnPropertyChanged(() => UnitDiscount);
                }
            }
        }
        #endregion

        #region TotalDiscount
        //private decimal _totalDiscount;
        ///// <summary>
        ///// Gets or sets the TotalDiscount.
        ///// </summary>
        //public decimal TotalDiscount
        //{
        //    get { return _totalDiscount; }
        //    set
        //    {
        //        if (_totalDiscount != value)
        //        {
        //            _totalDiscount = value;
        //            OnPropertyChanged(() => TotalDiscount);
        //        }
        //    }
        //}
        #endregion

        private string _docType;
        /// <summary>
        /// Gets or sets the DocType.
        /// </summary>
        public string DocType
        {
            get { return _docType; }
            set
            {
                if (_docType != value)
                {
                    _docType = value;
                    OnPropertyChanged(() => DocType);
                }
            }
        }

        private DateTime _orderDate;
        /// <summary>
        /// Gets or sets the OrderDate.
        /// </summary>
        public DateTime OrderDate
        {
            get { return _orderDate; }
            set
            {
                if (_orderDate != value)
                {
                    _orderDate = value;
                    OnPropertyChanged(() => OrderDate);
                }
            }
        }

        private string _docNo;
        /// <summary>
        /// Gets or sets the DocNo.
        /// </summary>
        public string DocNo
        {
            get { return _docNo; }
            set
            {
                if (_docNo != value)
                {
                    _docNo = value;
                    OnPropertyChanged(() => DocNo);
                }
            }
        }

        #region QtyAfterRerturn
        private decimal _qtyAfterRetrun;
        /// <summary>
        /// Gets or sets the QtyAfterRerturn.
        /// Using for return = PickQty- QtyReturned
        /// </summary>
        public decimal QtyAfterRerturn
        {
            get { return _qtyAfterRetrun; }
            set
            {
                if (_qtyAfterRetrun != value)
                {
                    _qtyAfterRetrun = value;
                    OnPropertyChanged(() => QtyAfterRerturn);
                }
            }
        }
        #endregion

        #region IsReadOnlyUOM
        private bool _isReadOnlyUOM = false;
        /// <summary>
        /// Gets or sets the IsReadOnlyUOM.
        /// </summary>
        public bool IsReadOnlyUOM
        {
            get { return _isReadOnlyUOM; }
            set
            {
                if (_isReadOnlyUOM != value)
                {
                    _isReadOnlyUOM = value;
                    OnPropertyChanged(() => IsReadOnlyUOM);
                }
            }
        }
        #endregion

        #region IsQuantityAccepted
        private bool _isQuantityAccepted = true;
        /// <summary>
        /// Gets or sets the IsQuantityAccepted.
        /// </summary>
        public bool IsQuantityAccepted
        {
            get { return _isQuantityAccepted; }
            set
            {
                if (_isQuantityAccepted != value)
                {
                    _isQuantityAccepted = value;
                    OnPropertyChanged(() => IsQuantityAccepted);
                }
            }
        }
        #endregion


        #region IsAllowChange
        private bool _isAllowChange = true;
        /// <summary>
        /// Gets or sets the IsAllowChange.
        /// </summary>
        public bool IsAllowChange
        {
            get { return _isAllowChange; }
            set
            {
                if (_isAllowChange != value)
                {
                    _isAllowChange = value;
                    OnPropertyChanged(() => IsAllowChange);
                }
            }
        }
        #endregion


        #region SerialTrackingDisplay
        /// <summary>
        /// Gets  the SerialTrackingDisplay.
        /// </summary>
        public string SerialTrackingDisplay
        {
            get
            {
                if (!string.IsNullOrWhiteSpace(SerialTracking))
                {
                    string[] serialList = SerialTracking.Split(',');
                    if (serialList.Count() > Define.MaxSerialLenght)
                        return string.Join(", ", SerialTracking.Split(',').Select(x => x.Trim()).Take(Define.MaxSerialLenght)) + ", ...";
                    else
                        return SerialTracking;
                }
                return string.Empty;
            }
        }
        #endregion

        #region SalePriceChange
        private decimal _salePriceChange;
        /// <summary>
        /// Gets or sets the SalePriceChange.
        /// <para>using for determine Sale price is change with manual or discount</para>
        /// </summary>
        public decimal SalePriceChange
        {
            get { return _salePriceChange; }
            set
            {
                if (_salePriceChange != value)
                {
                    _salePriceChange = value;
                    OnPropertyChanged(() => SalePriceChange);
                }
            }
        }
        #endregion

        #region IsParent
        private bool _isParent;
        /// <summary>
        /// Gets or sets the IsParent.
        /// <para>Is a Parent of Product Group</para>
        /// </summary>
        public bool IsParent
        {
            get { return _isParent; }
            set
            {
                if (_isParent != value)
                {
                    _isParent = value;
                    OnPropertyChanged(() => IsParent);
                }
            }
        }
        #endregion

        #region ItemType
        private int _itemType;
        /// <summary>
        /// <para>Gets or sets the ItemType.</para>
        /// <para>0: None; 1 : Parent Item; 2: Child Item</para>
        /// </summary>
        public int ItemType
        {
            get { return _itemType; }
            set
            {
                if (_itemType != value)
                {
                    _itemType = value;
                    OnPropertyChanged(() => ItemType);
                }
            }
        }
        #endregion

        #region ProductGroupItem
        private base_ProductGroup _productGroupItem;
        /// <summary>
        /// Gets or sets the ProductGroupItem.
        /// <para>ProductGroupItem!=null : this product in group</para>
        /// </summary>
        public base_ProductGroup ProductGroupItem
        {
            get { return _productGroupItem; }
            set
            {
                if (_productGroupItem != value)
                {
                    _productGroupItem = value;
                    OnPropertyChanged(() => ProductGroupItem);
                }
            }
        }
        #endregion


        #region CouponCardModel
        private base_CardManagementModel _couponCardModel;
        /// <summary>
        /// Gets or sets the CouponCardModel.
        /// </summary>
        public base_CardManagementModel CouponCardModel
        {
            get { return _couponCardModel; }
            set
            {
                if (_couponCardModel != value)
                {
                    _couponCardModel = value;
                    OnPropertyChanged(() => CouponCardModel);
                }
            }
        }
        #endregion


        #endregion

        #region Private Methods
        /// <summary>
        /// 
        /// </summary>
        public void CalcSubTotal()
        {
            _subTotal = SalePrice * Quantity;
            OnPropertyChanged(() => SubTotal);
        }

        /// <summary>
        /// Calculate Unfill
        /// </summary>
        public void CalUnfill()
        {
            if (Quantity != 0)
                UnFilled = (Convert.ToDecimal(DueQty) / Convert.ToDecimal(Quantity)) * 100;
            else
                UnFilled = 0;
        }

        /// <summary>
        /// Skip Property Changed 
        /// </summary>
        /// <param name="qty"></param>
        public void SetQuanty(int qty)
        {
            _quantity = qty;
            OnPropertyChanged(() => Quantity);
        }

        /// <summary>
        /// Calculate Discount amount/Unit Discount / TotalDiscount when Sale Price Changed
        /// </summary>
        public void SalePriceChanged(bool isCalcDiscPercent)
        {
            if (isCalcDiscPercent)
            {
                if (_regularPrice > 0 && _regularPrice > _salePrice)
                    _discountPercent = Math.Round((_regularPrice - _salePrice) / _regularPrice * 100, 2);
                else
                    _discountPercent = 0;
            }

            if (_discountPercent > 0)
            {
                _discountAmount = _salePrice;
                _unitDiscount = _regularPrice - _salePrice;//Math.Round(_regularPrice * _discountPercent / 100,2);
                _totalDiscount = _unitDiscount * _quantity;
            }
            else
            {
                _discountAmount = 0;
                _unitDiscount = 0;//Math.Round(_regularPrice * _discountPercent / 100,2);
                _totalDiscount = 0;
            }

            OnPropertyChanged(() => DiscountPercent);
            OnPropertyChanged(() => DiscountAmount);
            OnPropertyChanged(() => TotalDiscount);
            OnPropertyChanged(() => UnitDiscount);
        }

        /// <summary>
        /// Calculate Due Qty (= Qantity - PickQty)
        /// </summary>
        public void CalcDueQty()
        {
            DueQty = Quantity - PickQty;
        }

        /// <summary>
        /// Copy SaleOrder detail from another saleOrder detail
        /// </summary>
        /// <param name="saleOrderDetailModel"></param>
        public void CopyFrom(base_SaleOrderDetailModel saleOrderDetailModel)
        {
            //this._id = saleOrderDetailModel.Id;
            //this._saleOrderId = saleOrderDetailModel.SaleOrderId;
            this.ProductResource = saleOrderDetailModel.ProductResource;
            this.ItemCode = saleOrderDetailModel.ItemCode;
            this.ItemName = saleOrderDetailModel.ItemName;
            this.ItemAtribute = saleOrderDetailModel.ItemAtribute;
            this.ItemSize = saleOrderDetailModel.ItemSize;
            this.TaxCode = saleOrderDetailModel.TaxCode;
            this.Quantity = saleOrderDetailModel.Quantity;
            this.PickQty = 0;
            //this._dueQty = saleOrderDetailModel.DueQty;
            //this._unFilled = saleOrderDetailModel.UnFilled;
            this.RegularPrice = saleOrderDetailModel.RegularPrice;
            this.SalePrice = saleOrderDetailModel.SalePrice;
            this.UOMId = saleOrderDetailModel.UOMId;
            this.UOM = saleOrderDetailModel._uOM;
            this.DiscountPercent = saleOrderDetailModel.DiscountPercent;
            this.DiscountAmount = saleOrderDetailModel.DiscountAmount;
            this.SubTotal = saleOrderDetailModel.SubTotal;
            this.OnHandQty = saleOrderDetailModel.OnHandQty;
            this.SerialTracking = saleOrderDetailModel.SerialTracking;
            //this._resource = saleOrderDetailModel.Resource;
            //this._balanceShipped = saleOrderDetailModel.BalanceShipped;
            this.Comment = saleOrderDetailModel.Comment;
            this.TotalDiscount = saleOrderDetailModel.TotalDiscount;

            //ExtentionProperty
            this.UnitName = saleOrderDetailModel.UnitName;
            this.ProductModel = saleOrderDetailModel.ProductModel;
            this.ProductUOMCollection = saleOrderDetailModel.ProductUOMCollection;
            this.Qty = saleOrderDetailModel.Quantity;
            this.TotalDiscount = saleOrderDetailModel.TotalDiscount;
            this.UnitDiscount = saleOrderDetailModel.UnitDiscount;
            this.IsVisibleRowDetail = saleOrderDetailModel.IsVisibleRowDetail;

        }

        /// <summary>
        /// Raise QuantityAccepted
        /// </summary>
        public void RaiseIsQuantityAccepted()
        {
            OnPropertyChanged(() => IsQuantityAccepted);
        }

        /// <summary>
        /// Calculate discount by discount percent
        /// </summary>
        public void CalcDicountByPercent()
        {
            if (IsManual)
            {
                _unitDiscount = (_regularPrice * _discountPercent / 100);
                _discountAmount = _regularPrice - _unitDiscount;
                _salePrice = _discountAmount;
                _salePriceChange = _salePrice;
                _totalDiscount = _unitDiscount * _quantity;

                OnPropertyChanged(() => DiscountPercent);
                OnPropertyChanged(() => DiscountAmount);
                OnPropertyChanged(() => TotalDiscount);
                OnPropertyChanged(() => UnitDiscount);
                OnPropertyChanged(() => SalePrice);
                OnPropertyChanged(() => SalePriceChange);

            }
        }

        #endregion

        #region Override Methods
        protected override void PropertyChangedCompleted(string propertyName)
        {
            switch (propertyName)
            {
                case "UnitPrice":
                    break;
                case "Quantity":
                    _qty = Quantity;
                    OnPropertyChanged(() => Qty);
                    //CalcDueQty();
                    break;
                case "PickQty":
                    //CalcDueQty();
                    break;
                case "DueQty":
                    CalUnfill();
                    break;
                case "SalePrice":
                    SalePriceChange = SalePrice;
                    break;
                case "SerialTracking":
                    OnPropertyChanged(() => SerialTrackingDisplay);
                    break;


                default:
                    break;
            }
        }
        #endregion

        #endregion

        #region IDataErrorInfo Members
        /// <summary>
        /// Gets or sets the IsError.
        /// </summary>
        public bool IsError
        {
            get { return !string.IsNullOrWhiteSpace(Error); }

        }

        public string Error
        {
            get
            {
                List<string> errors = new List<string>();
                PropertyDescriptorCollection props = TypeDescriptor.GetProperties(this);
                foreach (PropertyDescriptor prop in props)
                {
                    string msg = this[prop.Name];
                    if (!string.IsNullOrWhiteSpace(msg))
                    {
                        errors.Add(msg);
                    }
                }
                return string.Join(Environment.NewLine, errors);
            }
        }

        public string this[string columnName]
        {
            get
            {
                string message = string.Empty;

                switch (columnName)
                {
                    case "Id":
                        break;
                    case "SaleOrderId":
                        break;
                    case "Quantity":
                        if (Quantity < PickQty)
                        {
                            message = "Quanity is not smaller than Pick Quantity";
                        }
                        break;
                    case "QtyOfPick":
                        if (IsPickProcess && QtyOfPick > DueQty)
                        {
                            message = "Pick Quatity not greather than Due quatity";
                        }
                        break;
                    case "IsQuantityAccepted":
                        if (!IsQuantityAccepted)
                            message = "Quantity is not more than quantity store";
                        break;
                }


                if (!string.IsNullOrWhiteSpace(message))
                    return message;

                return null;
            }
        }

        #endregion


        private object ObjBackup;
        void IEditableObject.BeginEdit()
        {
            if (ObjBackup == null)
                ObjBackup = this.MemberwiseClone();
        }

        void IEditableObject.CancelEdit()
        {
            Restore(ObjBackup as base_SaleOrderDetailModel);
        }

        void IEditableObject.EndEdit()
        {
            if (ObjBackup != null)
                ObjBackup = null;
        }
        public void Restore(base_SaleOrderDetailModel saleOrderDetailModel)
        {
            this.Id = saleOrderDetailModel.Id;
            this.SaleOrderId = saleOrderDetailModel.SaleOrderId;
            this.ProductResource = saleOrderDetailModel.ProductResource;
            this.ItemCode = saleOrderDetailModel.ItemCode;
            this.ItemName = saleOrderDetailModel.ItemName;
            this.ItemAtribute = saleOrderDetailModel.ItemAtribute;
            this.ItemSize = saleOrderDetailModel.ItemSize;
            this.TaxCode = saleOrderDetailModel.TaxCode;
            this.Quantity = saleOrderDetailModel.Quantity;
            this.PickQty = saleOrderDetailModel.PickQty;
            this.DueQty = saleOrderDetailModel.DueQty;
            this.UnFilled = saleOrderDetailModel.UnFilled;
            this.RegularPrice = saleOrderDetailModel.RegularPrice;
            this.SalePrice = saleOrderDetailModel.SalePrice;
            this.UOMId = saleOrderDetailModel.UOMId;
            this.UOM = saleOrderDetailModel.UOM;
            this.DiscountPercent = saleOrderDetailModel.DiscountPercent;
            this.DiscountAmount = saleOrderDetailModel.DiscountAmount;
            this.SubTotal = saleOrderDetailModel.SubTotal;
            this.OnHandQty = saleOrderDetailModel.OnHandQty;
            this.SerialTracking = saleOrderDetailModel.SerialTracking;
            this.Resource = saleOrderDetailModel.Resource;
            this.BalanceShipped = saleOrderDetailModel.BalanceShipped;
            this.Comment = saleOrderDetailModel.Comment;
            this.TotalDiscount = saleOrderDetailModel.TotalDiscount;
            saleOrderDetailModel = null;
        }


    }
}

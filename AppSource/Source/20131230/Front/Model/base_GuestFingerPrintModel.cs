//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Linq;
using System.Linq.Expressions;
using CPC.Helper;
using CPC.POS.Database;
using CPC.Toolkit.Base;

namespace CPC.POS.Model
{
    /// <summary>
    /// Model for table base_GuestFingerPrint
    /// </summary>
    [Serializable]
    public partial class base_GuestFingerPrintModel : ModelBase, IDataErrorInfo
    {
        #region Constructor

        // Default constructor
        public base_GuestFingerPrintModel()
        {
            this.IsNew = true;
            this.base_GuestFingerPrint = new base_GuestFingerPrint();
        }

        // Default constructor that set entity to field
        public base_GuestFingerPrintModel(base_GuestFingerPrint base_guestfingerprint, bool isRaiseProperties = false)
        {
            this.base_GuestFingerPrint = base_guestfingerprint;
            if (!isRaiseProperties)
                this.ToModel();
            else
                this.ToModelAndRaise();
            this.IsDirty = false;
        }

        #endregion

        #region Entity Properties

        public base_GuestFingerPrint base_GuestFingerPrint { get; private set; }

        #endregion

        #region Primitive Properties

        protected long _id;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Id</param>
        /// </summary>
        public long Id
        {
            get { return this._id; }
            set
            {
                if (this._id != value)
                {
                    this.IsDirty = true;
                    this._id = value;
                    OnPropertyChanged(() => Id);
                    PropertyChangedCompleted(() => Id);
                }
            }
        }

        protected long _guestId;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the GuestId</param>
        /// </summary>
        public long GuestId
        {
            get { return this._guestId; }
            set
            {
                if (this._guestId != value)
                {
                    this.IsDirty = true;
                    this._guestId = value;
                    OnPropertyChanged(() => GuestId);
                    PropertyChangedCompleted(() => GuestId);
                }
            }
        }

        protected int _fingerIndex;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the FingerIndex</param>
        /// </summary>
        public int FingerIndex
        {
            get { return this._fingerIndex; }
            set
            {
                if (this._fingerIndex != value)
                {
                    this.IsDirty = true;
                    this._fingerIndex = value;
                    OnPropertyChanged(() => FingerIndex);
                    PropertyChangedCompleted(() => FingerIndex);
                }
            }
        }

        protected bool _handFlag;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the HandFlag</param>
        /// </summary>
        public bool HandFlag
        {
            get { return this._handFlag; }
            set
            {
                if (this._handFlag != value)
                {
                    this.IsDirty = true;
                    this._handFlag = value;
                    OnPropertyChanged(() => HandFlag);
                    PropertyChangedCompleted(() => HandFlag);
                }
            }
        }

        protected System.DateTime _dateUpdated;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the DateUpdated</param>
        /// </summary>
        public System.DateTime DateUpdated
        {
            get { return this._dateUpdated; }
            set
            {
                if (this._dateUpdated != value)
                {
                    this.IsDirty = true;
                    this._dateUpdated = value;
                    OnPropertyChanged(() => DateUpdated);
                    PropertyChangedCompleted(() => DateUpdated);
                }
            }
        }

        protected string _userUpdaed;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the UserUpdaed</param>
        /// </summary>
        public string UserUpdaed
        {
            get { return this._userUpdaed; }
            set
            {
                if (this._userUpdaed != value)
                {
                    this.IsDirty = true;
                    this._userUpdaed = value;
                    OnPropertyChanged(() => UserUpdaed);
                    PropertyChangedCompleted(() => UserUpdaed);
                }
            }
        }

        protected byte[] _fingerPrintImage;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the FingerPrintImage</param>
        /// </summary>
        public byte[] FingerPrintImage
        {
            get { return this._fingerPrintImage; }
            set
            {
                if (this._fingerPrintImage != value)
                {
                    this.IsDirty = true;
                    this._fingerPrintImage = value;
                    OnPropertyChanged(() => FingerPrintImage);
                    PropertyChangedCompleted(() => FingerPrintImage);
                }
            }
        }

        #endregion

        #region Public Methods

        /// <summary>
        /// <param>Public Method</param>
        /// Method for set IsNew & IsDirty = false;
        /// </summary>
        public void EndUpdate()
        {
            this.IsNew = false;
            this.IsDirty = false;
        }

        /// <summary>
        /// Public Method
        /// <param>Method for set PropertyModel to Entity</param>
        /// </summary>
        public void ToEntity()
        {
            if (IsNew)
                this.base_GuestFingerPrint.Id = this.Id;
            this.base_GuestFingerPrint.GuestId = this.GuestId;
            this.base_GuestFingerPrint.FingerIndex = this.FingerIndex;
            this.base_GuestFingerPrint.HandFlag = this.HandFlag;
            this.base_GuestFingerPrint.DateUpdated = this.DateUpdated;
            if (this.UserUpdaed != null)
                this.base_GuestFingerPrint.UserUpdaed = this.UserUpdaed.Trim();
            this.base_GuestFingerPrint.FingerPrintImage = this.FingerPrintImage;
        }

        /// <summary>
        /// Public Method
        /// <param>Method for set Entity to PropertyModel</param>
        /// </summary
        public void ToModel()
        {
            this._id = this.base_GuestFingerPrint.Id;
            this._guestId = this.base_GuestFingerPrint.GuestId;
            this._fingerIndex = this.base_GuestFingerPrint.FingerIndex;
            this._handFlag = this.base_GuestFingerPrint.HandFlag;
            this._dateUpdated = this.base_GuestFingerPrint.DateUpdated;
            this._userUpdaed = this.base_GuestFingerPrint.UserUpdaed;
            this._fingerPrintImage = this.base_GuestFingerPrint.FingerPrintImage;
        }

        /// <summary>
        /// Public Method
        /// <param>Method for set Entity to PropertyModel</param>
        /// </summary
        public void ToModelAndRaise()
        {
            this.Id = this.base_GuestFingerPrint.Id;
            this.GuestId = this.base_GuestFingerPrint.GuestId;
            this.FingerIndex = this.base_GuestFingerPrint.FingerIndex;
            this.HandFlag = this.base_GuestFingerPrint.HandFlag;
            this.DateUpdated = this.base_GuestFingerPrint.DateUpdated;
            this.UserUpdaed = this.base_GuestFingerPrint.UserUpdaed;
            this.FingerPrintImage = this.base_GuestFingerPrint.FingerPrintImage;
        }

        #endregion

        #region Custom Code


        #endregion

        #region IDataErrorInfo Members

        public string Error
        {
            get { throw new NotImplementedException(); }
        }

        public string this[string columnName]
        {
            get
            {
                string message = string.Empty;

                switch (columnName)
                {
                    case "Id":
                        break;
                    case "GuestId":
                        break;
                    case "FingerPrintId":
                        break;
                    case "FingerIndex":
                        break;
                    case "HandFlag":
                        break;
                    case "DateUpdated":
                        break;
                    case "UserUpdaed":
                        break;
                }

                if (!string.IsNullOrWhiteSpace(message))
                    return message;
                return null;
            }
        }

        #endregion
    }
}

<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:control="clr-namespace:Xceed.Wpf.Toolkit;assembly=WPFToolkit.Extended"
                    xmlns:s="clr-namespace:System;assembly=mscorlib"
                    xmlns:behavior="clr-namespace:CPC.Toolkit.Behavior"
                    xmlns:textBoxControl="clr-namespace:CPCToolkitExt.TextBoxControl;assembly=CPCToolkitExt"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    mc:Ignorable="d">
    <!--TextBox Base Style -->
    <Style TargetType="{x:Type textBoxControl:TextBox}">
        <Setter Property="behavior:MoveFocusHelper.MoveFocus"
                Value="True" />
        <Setter Property="Background"
                Value="White" />
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="KeyboardNavigation.TabNavigation"
                Value="None" />
        <Setter Property="FocusingBrush"
                Value="#FFFFF500" />
        <Setter Property="Validation.ErrorTemplate"
                Value="{x:Null}" />
        <Setter Property="BorderBrush"
                Value="#FF6B6B6B" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="2" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="AllowDrop"
                Value="true" />
        <Setter Property="ScrollViewer.PanningMode"
                Value="VerticalFirst" />
        <Setter Property="Validation.ErrorTemplate"
                Value="{x:Null}" />
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type textBoxControl:TextBox}">
                    <Border x:Name="Bd"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsInsideControl"
                                 Value="True">
                            <Setter Property="FocusManager.FocusedElement"
                                    Value="{Binding RelativeSource={RelativeSource Self}}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused"
                                           Value="True" />
                                <Condition Property="IsReadOnly"
                                           Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="{Binding FocusingBrush, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type textBoxControl:TextBox}}}" />
                            <Setter Property="BorderThickness"
                                    TargetName="Bd"
                                    Value="1" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused"
                                           Value="True" />
                                <Condition Property="IsReadOnly"
                                           Value="False" />
                                <Condition Property="IsInsideControl"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Height"
                                    Value="25"></Setter>
                            <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="Transparent" />
                            <Setter Property="BorderThickness"
                                    TargetName="Bd"
                                    Value="0" />

                        </MultiTrigger>
                        <Trigger Property="Validation.HasError"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    TargetName="Bd"
                                    Value="#FFFF0000" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource {x:Type textBoxControl:TextBox}}"
           TargetType="{x:Type textBoxControl:TextBoxName}" />

    <Style BasedOn="{StaticResource {x:Type textBoxControl:TextBox}}"
           TargetType="{x:Type textBoxControl:TextBoxEmail}" />

    <Style BasedOn="{StaticResource {x:Type textBoxControl:TextBox}}"
           TargetType="{x:Type textBoxControl:TextBoxDecimal}" />

    <Style BasedOn="{StaticResource {x:Type textBoxControl:TextBox}}"
           TargetType="{x:Type textBoxControl:TextBoxNumber}" />

    <Style BasedOn="{StaticResource {x:Type textBoxControl:TextBox}}"
           TargetType="{x:Type textBoxControl:TextBoxNumeric}" />

    
    <Style TargetType="{x:Type textBoxControl:TextBox}"
           x:Key="TextBoxInAnotherControlStyle">
        <Setter Property="behavior:MoveFocusHelper.MoveFocus"
                Value="True" />
        <Setter Property="Background"
                Value="White" />
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="KeyboardNavigation.TabNavigation"
                Value="None" />
        <Setter Property="FocusingBrush"
                Value="#FFFFF500" />
        <Setter Property="Validation.ErrorTemplate"
                Value="{x:Null}" />
        <Setter Property="BorderBrush"
                Value="#FF6B6B6B" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="2" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="AllowDrop"
                Value="true" />
        <Setter Property="ScrollViewer.PanningMode"
                Value="VerticalFirst" />
        <Setter Property="Validation.ErrorTemplate"
                Value="{x:Null}" />
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type textBoxControl:TextBox}">
                    <Border x:Name="Bd"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsFocused"
                                           Value="True" />
                                <Condition Property="IsReadOnly"
                                           Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="{Binding FocusingBrush, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type textBoxControl:TextBox}}}" />
                        </MultiTrigger>
                        <Trigger Property="Validation.HasError"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    TargetName="Bd"
                                    Value="#FFFF0000" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                            <Setter Property="Foreground"
                                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    <!--Edit-->
    
    <!--Mark TextBox Base Style -->
    <Style TargetType="{x:Type control:MaskedTextBox}">
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="BorderBrush"
                Value="#FF6B6B6B" />
        <Setter Property="Validation.ErrorTemplate"
                Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type control:MaskedTextBox}">
                    <Border x:Name="Bd"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused"
                                 Value="True">
                            <Setter Property="Background"
                                    Value="#FFFFF500" />
                        </Trigger>
                        <Trigger Property="Validation.HasError"
                                 Value="True">
                            <Setter Property="BorderBrush"
                                    TargetName="Bd"
                                    Value="#FFFF0000" />
                            <!--#FFFF0000-->
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--End-->

    <!--  TextBoxPhoneStyle  -->
    <Style x:Key="TextBoxPhoneStyle"
           BasedOn="{StaticResource {x:Type control:MaskedTextBox}}"
           TargetType="{x:Type control:MaskedTextBox}">
        <Setter Property="HorizontalContentAlignment"
                Value="Right" />
        <Setter Property="IncludeLiteralsInValue"
                Value="False" />
        <Setter Property="Mask"
                Value="(000) 000-0000 - 999999" />
        <Setter Property="Padding"
                Value="2,0" />
        <Setter Property="ValueDataType"
                Value="{x:Type s:String}" />
    </Style>
    <!--End-->

    <!--  TextBoxPhoneExtStyle  -->
    <Style x:Key="TextBoxPhoneExtStyle"
           BasedOn="{StaticResource {x:Type control:MaskedTextBox}}"
           TargetType="{x:Type control:MaskedTextBox}">
        <Setter Property="HorizontalContentAlignment"
                Value="Right" />
        <Setter Property="IncludeLiteralsInValue"
                Value="False" />
        <Setter Property="Mask"
                Value="999999" />
        <Setter Property="Padding"
                Value="2,0" />
        <Setter Property="ValueDataType"
                Value="{x:Type s:String}" />
    </Style>
    <!--End-->

    <!--  TextBoxCellphoneStyle  -->
    <Style x:Key="TextBoxCellphoneStyle"
           BasedOn="{StaticResource {x:Type control:MaskedTextBox}}"
           TargetType="{x:Type control:MaskedTextBox}">
        <Setter Property="HorizontalContentAlignment"
                Value="Right" />
        <Setter Property="IncludeLiteralsInValue"
                Value="False" />
        <Setter Property="Mask"
                Value="000-000-0000" />
        <Setter Property="Padding"
                Value="2,0" />
        <Setter Property="ValueDataType"
                Value="{x:Type s:String}" />
    </Style>
    <!--End-->

    <!--  TextBoxFaxStyle  -->
    <Style x:Key="TextBoxFaxStyle"
           BasedOn="{StaticResource {x:Type control:MaskedTextBox}}"
           TargetType="{x:Type control:MaskedTextBox}">
        <Setter Property="HorizontalContentAlignment"
                Value="Right" />
        <Setter Property="IncludeLiteralsInValue"
                Value="False" />
        <Setter Property="Mask"
                Value="000-000-0000" />
        <Setter Property="Padding"
                Value="2,0" />
        <Setter Property="ValueDataType"
                Value="{x:Type s:String}" />
    </Style>
    <!--End-->
	  
</ResourceDictionary>
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using KeyGenerator.Database;
using CPC.Toolkit.Base;

namespace KeyGenerator.Model
{
    /// <summary>
    /// Model for table Customer
    /// </summary>
    [Serializable]
    public partial class CustomerModel : ModelBase, IDataErrorInfo
    {
        #region Constructor

        // Default constructor
        public CustomerModel()
        {
            this.IsNew = true;
            this.Customer = new Customer();
        }

        // Default constructor that set entity to field
        public CustomerModel(Customer customer, bool isRaiseProperties = false)
        {
            this.Customer = customer;
            if (!isRaiseProperties)
                this.ToModel();
            else
                this.ToModelAndRaise();
            this.IsDirty = false;
        }

        #endregion

        #region Entity Properties

        public Customer Customer { get; private set; }

        #endregion

        #region Primitive Properties

        protected long _id;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the Id</para>
        /// </summary>
        public long Id
        {
            get { return this._id; }
            set
            {
                if (this._id != value)
                {
                    this.IsDirty = true;
                    this._id = value;
                    OnPropertyChanged(() => Id);
                    PropertyChangedCompleted(() => Id);
                }
            }
        }

        protected string _company;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the Company</para>
        /// </summary>
        public string Company
        {
            get { return this._company; }
            set
            {
                if (this._company != value)
                {
                    this.IsDirty = true;
                    this._company = value;
                    OnPropertyChanged(() => Company);
                    PropertyChangedCompleted(() => Company);
                }
            }
        }

        protected string _phone;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the Phone</para>
        /// </summary>
        public string Phone
        {
            get { return this._phone; }
            set
            {
                if (this._phone != value)
                {
                    this.IsDirty = true;
                    this._phone = value;
                    OnPropertyChanged(() => Phone);
                    PropertyChangedCompleted(() => Phone);
                }
            }
        }

        protected string _fax;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the Fax</para>
        /// </summary>
        public string Fax
        {
            get { return this._fax; }
            set
            {
                if (this._fax != value)
                {
                    this.IsDirty = true;
                    this._fax = value;
                    OnPropertyChanged(() => Fax);
                    PropertyChangedCompleted(() => Fax);
                }
            }
        }

        protected string _cellPhone;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the CellPhone</para>
        /// </summary>
        public string CellPhone
        {
            get { return this._cellPhone; }
            set
            {
                if (this._cellPhone != value)
                {
                    this.IsDirty = true;
                    this._cellPhone = value;
                    OnPropertyChanged(() => CellPhone);
                    PropertyChangedCompleted(() => CellPhone);
                }
            }
        }

        protected string _address;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the Address</para>
        /// </summary>
        public string Address
        {
            get { return this._address; }
            set
            {
                if (this._address != value)
                {
                    this.IsDirty = true;
                    this._address = value;
                    OnPropertyChanged(() => Address);
                    PropertyChangedCompleted(() => Address);
                }
            }
        }

        protected string _email;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the Email</para>
        /// </summary>
        public string Email
        {
            get { return this._email; }
            set
            {
                if (this._email != value)
                {
                    this.IsDirty = true;
                    this._email = value;
                    OnPropertyChanged(() => Email);
                    PropertyChangedCompleted(() => Email);
                }
            }
        }

        protected string _contactName;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the ContactName</para>
        /// </summary>
        public string ContactName
        {
            get { return this._contactName; }
            set
            {
                if (this._contactName != value)
                {
                    this.IsDirty = true;
                    this._contactName = value;
                    OnPropertyChanged(() => ContactName);
                    PropertyChangedCompleted(() => ContactName);
                }
            }
        }

        protected string _contactPhone;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the ContactPhone</para>
        /// </summary>
        public string ContactPhone
        {
            get { return this._contactPhone; }
            set
            {
                if (this._contactPhone != value)
                {
                    this.IsDirty = true;
                    this._contactPhone = value;
                    OnPropertyChanged(() => ContactPhone);
                    PropertyChangedCompleted(() => ContactPhone);
                }
            }
        }

        protected string _contactEmail;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the ContactEmail</para>
        /// </summary>
        public string ContactEmail
        {
            get { return this._contactEmail; }
            set
            {
                if (this._contactEmail != value)
                {
                    this.IsDirty = true;
                    this._contactEmail = value;
                    OnPropertyChanged(() => ContactEmail);
                    PropertyChangedCompleted(() => ContactEmail);
                }
            }
        }

        protected Nullable<short> _totalStore;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the TotalStore</para>
        /// </summary>
        public Nullable<short> TotalStore
        {
            get { return this._totalStore; }
            set
            {
                if (this._totalStore != value)
                {
                    this.IsDirty = true;
                    this._totalStore = value;
                    OnPropertyChanged(() => TotalStore);
                    PropertyChangedCompleted(() => TotalStore);
                }
            }
        }

        protected string _userCreated;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the UserCreated</para>
        /// </summary>
        public string UserCreated
        {
            get { return this._userCreated; }
            set
            {
                if (this._userCreated != value)
                {
                    this.IsDirty = true;
                    this._userCreated = value;
                    OnPropertyChanged(() => UserCreated);
                    PropertyChangedCompleted(() => UserCreated);
                }
            }
        }

        protected string _userUpdated;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the UserUpdated</para>
        /// </summary>
        public string UserUpdated
        {
            get { return this._userUpdated; }
            set
            {
                if (this._userUpdated != value)
                {
                    this.IsDirty = true;
                    this._userUpdated = value;
                    OnPropertyChanged(() => UserUpdated);
                    PropertyChangedCompleted(() => UserUpdated);
                }
            }
        }

        protected Nullable<System.DateTime> _dateCreated;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the DateCreated</para>
        /// </summary>
        public Nullable<System.DateTime> DateCreated
        {
            get { return this._dateCreated; }
            set
            {
                if (this._dateCreated != value)
                {
                    this.IsDirty = true;
                    this._dateCreated = value;
                    OnPropertyChanged(() => DateCreated);
                    PropertyChangedCompleted(() => DateCreated);
                }
            }
        }

        protected Nullable<System.DateTime> _dateUpdated;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the DateUpdated</para>
        /// </summary>
        public Nullable<System.DateTime> DateUpdated
        {
            get { return this._dateUpdated; }
            set
            {
                if (this._dateUpdated != value)
                {
                    this.IsDirty = true;
                    this._dateUpdated = value;
                    OnPropertyChanged(() => DateUpdated);
                    PropertyChangedCompleted(() => DateUpdated);
                }
            }
        }

        #endregion

        #region Public Methods

        /// <summary>
        /// <para>Public Method</para>
        /// Method for set IsNew & IsDirty = false;
        /// </summary>
        public void EndUpdate()
        {
            this.IsNew = false;
            this.IsDirty = false;
        }

        /// <summary>
        /// Public Method
        /// <para>Method for set PropertyModel to Entity</para>
        /// </summary>
        public void ToEntity()
        {
            if (IsNew)
                this.Customer.Id = this.Id;
            this.Customer.Company = this.Company;
            this.Customer.Phone = this.Phone;
            this.Customer.Fax = this.Fax;
            this.Customer.CellPhone = this.CellPhone;
            this.Customer.Address = this.Address;
            this.Customer.Email = this.Email;
            this.Customer.ContactName = this.ContactName;
            this.Customer.ContactPhone = this.ContactPhone;
            this.Customer.ContactEmail = this.ContactEmail;
            this.Customer.TotalStore = this.TotalStore;
            this.Customer.UserCreated = this.UserCreated;
            this.Customer.UserUpdated = this.UserUpdated;
            this.Customer.DateCreated = this.DateCreated;
            this.Customer.DateUpdated = this.DateUpdated;
        }

        /// <summary>
        /// Public Method
        /// <para>Method for set Entity to PropertyModel</para>
        /// </summary
        public void ToModel()
        {
            this._id = this.Customer.Id;
            this._company = this.Customer.Company;
            this._phone = this.Customer.Phone;
            this._fax = this.Customer.Fax;
            this._cellPhone = this.Customer.CellPhone;
            this._address = this.Customer.Address;
            this._email = this.Customer.Email;
            this._contactName = this.Customer.ContactName;
            this._contactPhone = this.Customer.ContactPhone;
            this._contactEmail = this.Customer.ContactEmail;
            this._totalStore = this.Customer.TotalStore;
            this._userCreated = this.Customer.UserCreated;
            this._userUpdated = this.Customer.UserUpdated;
            this._dateCreated = this.Customer.DateCreated;
            this._dateUpdated = this.Customer.DateUpdated;
        }

        /// <summary>
        /// Public Method
        /// <para>Method for set Entity to PropertyModel</para>
        /// </summary
        public void ToModelAndRaise()
        {
            this.Id = this.Customer.Id;
            this.Company = this.Customer.Company;
            this.Phone = this.Customer.Phone;
            this.Fax = this.Customer.Fax;
            this.CellPhone = this.Customer.CellPhone;
            this.Address = this.Customer.Address;
            this.Email = this.Customer.Email;
            this.ContactName = this.Customer.ContactName;
            this.ContactPhone = this.Customer.ContactPhone;
            this.ContactEmail = this.Customer.ContactEmail;
            this.TotalStore = this.Customer.TotalStore;
            this.UserCreated = this.Customer.UserCreated;
            this.UserUpdated = this.Customer.UserUpdated;
            this.DateCreated = this.Customer.DateCreated;
            this.DateUpdated = this.Customer.DateUpdated;
        }

        #endregion

        #region Custom Code

        #region Properties

        #region CustomerDetailCollection
        private ObservableCollection<CustomerDetailModel> _customerDetailCollection;
        /// <summary>
        /// Gets or sets the CustomerDetailCollection.
        /// </summary>
        public ObservableCollection<CustomerDetailModel> CustomerDetailCollection
        {
            get { return _customerDetailCollection; }
            set
            {
                if (_customerDetailCollection != value)
                {
                    _customerDetailCollection = value;
                    OnPropertyChanged(() => CustomerDetailCollection);
                }
            }
        }
        #endregion

        #endregion

        #endregion

        #region IDataErrorInfo Members

        public string Error
        {
            get
            {
                List<string> errors = new List<string>();
                PropertyDescriptorCollection props = TypeDescriptor.GetProperties(this);
                foreach (PropertyDescriptor prop in props)
                {
                    string msg = this[prop.Name];
                    if (!string.IsNullOrWhiteSpace(msg))
                    {
                        errors.Add(msg);
                    }
                }
                return string.Join(Environment.NewLine, errors);
            }
        }

        public string this[string columnName]
        {
            get
            {
                string message = string.Empty;

                switch (columnName)
                {
                    case "Id":
                        break;
                    case "Company":
                        if (string.IsNullOrWhiteSpace(Company))
                            message = "Company is required!";
                        break;
                    case "Phone":
                        break;
                    case "Fax":
                        break;
                    case "CellPhone":
                        break;
                    case "Address":
                        break;
                    case "Email":
                        break;
                    case "ContactName":
                        break;
                    case "ContactPhone":
                        break;
                    case "ContactEmail":
                        break;
                    case "TotalStore":
                        if (TotalStore == 0)
                            message = "TotalStore is required!";
                        break;
                    case "UserCreated":
                        break;
                    case "UserUpdated":
                        break;
                    case "DateCreated":
                        break;
                    case "DateUpdated":
                        break;
                }

                if (!string.IsNullOrWhiteSpace(message))
                    return message;
                return null;
            }
        }

        #endregion
    }
}

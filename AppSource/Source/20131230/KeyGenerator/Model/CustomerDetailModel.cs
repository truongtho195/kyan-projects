//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using KeyGenerator.Database;
using CPC.Toolkit.Base;

namespace KeyGenerator.Model
{
    /// <summary>
    /// Model for table CustomerDetail
    /// </summary>
    [Serializable]
    public partial class CustomerDetailModel : ModelBase, IDataErrorInfo
    {
        #region Constructor

        // Default constructor
        public CustomerDetailModel()
        {
            this.IsNew = true;
            this.CustomerDetail = new CustomerDetail();
        }

        // Default constructor that set entity to field
        public CustomerDetailModel(CustomerDetail customerdetail, bool isRaiseProperties = false)
        {
            this.CustomerDetail = customerdetail;
            if (!isRaiseProperties)
                this.ToModel();
            else
                this.ToModelAndRaise();
            this.IsDirty = false;
        }

        #endregion

        #region Entity Properties

        public CustomerDetail CustomerDetail { get; private set; }

        #endregion

        #region Primitive Properties

        protected long _id;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the Id</para>
        /// </summary>
        public long Id
        {
            get { return this._id; }
            set
            {
                if (this._id != value)
                {
                    this.IsDirty = true;
                    this._id = value;
                    OnPropertyChanged(() => Id);
                    PropertyChangedCompleted(() => Id);
                }
            }
        }

        protected string _applicationId;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the ApplicationId</para>
        /// </summary>
        public string ApplicationId
        {
            get { return this._applicationId; }
            set
            {
                if (this._applicationId != value)
                {
                    this.IsDirty = true;
                    this._applicationId = value;
                    OnPropertyChanged(() => ApplicationId);
                    PropertyChangedCompleted(() => ApplicationId);
                }
            }
        }

        protected Nullable<int> _storeCode;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the StoreCode</para>
        /// </summary>
        public Nullable<int> StoreCode
        {
            get { return this._storeCode; }
            set
            {
                if (this._storeCode != value)
                {
                    this.IsDirty = true;
                    this._storeCode = value;
                    OnPropertyChanged(() => StoreCode);
                    PropertyChangedCompleted(() => StoreCode);
                }
            }
        }

        protected string _licenceCode;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the LicenceCode</para>
        /// </summary>
        public string LicenceCode
        {
            get { return this._licenceCode; }
            set
            {
                if (this._licenceCode != value)
                {
                    this.IsDirty = true;
                    this._licenceCode = value;
                    OnPropertyChanged(() => LicenceCode);
                    PropertyChangedCompleted(() => LicenceCode);
                }
            }
        }

        protected Nullable<System.DateTime> _genDate;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the GenDate</para>
        /// </summary>
        public Nullable<System.DateTime> GenDate
        {
            get { return this._genDate; }
            set
            {
                if (this._genDate != value)
                {
                    this.IsDirty = true;
                    this._genDate = value;
                    OnPropertyChanged(() => GenDate);
                    PropertyChangedCompleted(() => GenDate);
                }
            }
        }

        protected Nullable<int> _period;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the Period</para>
        /// </summary>
        public Nullable<int> Period
        {
            get { return this._period; }
            set
            {
                if (this._period != value)
                {
                    this.IsDirty = true;
                    this._period = value;
                    OnPropertyChanged(() => Period);
                    PropertyChangedCompleted(() => Period);
                }
            }
        }

        protected Nullable<bool> _isLived;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the IsLived</para>
        /// </summary>
        public Nullable<bool> IsLived
        {
            get { return this._isLived; }
            set
            {
                if (this._isLived != value)
                {
                    this.IsDirty = true;
                    this._isLived = value;
                    OnPropertyChanged(() => IsLived);
                    PropertyChangedCompleted(() => IsLived);
                }
            }
        }

        protected string _pOSId;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the POSId</para>
        /// </summary>
        public string POSId
        {
            get { return this._pOSId; }
            set
            {
                if (this._pOSId != value)
                {
                    this.IsDirty = true;
                    this._pOSId = value;
                    OnPropertyChanged(() => POSId);
                    PropertyChangedCompleted(() => POSId);
                }
            }
        }

        protected string _requestBy;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the RequestBy</para>
        /// </summary>
        public string RequestBy
        {
            get { return this._requestBy; }
            set
            {
                if (this._requestBy != value)
                {
                    this.IsDirty = true;
                    this._requestBy = value;
                    OnPropertyChanged(() => RequestBy);
                    PropertyChangedCompleted(() => RequestBy);
                }
            }
        }

        protected Nullable<System.DateTime> _dateCreated;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the DateCreated</para>
        /// </summary>
        public Nullable<System.DateTime> DateCreated
        {
            get { return this._dateCreated; }
            set
            {
                if (this._dateCreated != value)
                {
                    this.IsDirty = true;
                    this._dateCreated = value;
                    OnPropertyChanged(() => DateCreated);
                    PropertyChangedCompleted(() => DateCreated);
                }
            }
        }

        protected Nullable<int> _expireDate;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the ExpireDate</para>
        /// </summary>
        public Nullable<int> ExpireDate
        {
            get { return this._expireDate; }
            set
            {
                if (this._expireDate != value)
                {
                    this.IsDirty = true;
                    this._expireDate = value;
                    OnPropertyChanged(() => ExpireDate);
                    PropertyChangedCompleted(() => ExpireDate);
                }
            }
        }

        #endregion

        #region Public Methods

        /// <summary>
        /// <para>Public Method</para>
        /// Method for set IsNew & IsDirty = false;
        /// </summary>
        public void EndUpdate()
        {
            this.IsNew = false;
            this.IsDirty = false;
        }

        /// <summary>
        /// Public Method
        /// <para>Method for set PropertyModel to Entity</para>
        /// </summary>
        public void ToEntity()
        {
            if (IsNew)
                this.CustomerDetail.Id = this.Id;
            this.CustomerDetail.ApplicationId = this.ApplicationId;
            this.CustomerDetail.StoreCode = this.StoreCode;
            this.CustomerDetail.LicenceCode = this.LicenceCode;
            this.CustomerDetail.GenDate = this.GenDate;
            this.CustomerDetail.Period = this.Period;
            this.CustomerDetail.IsLived = this.IsLived;
            this.CustomerDetail.POSId = this.POSId;
            this.CustomerDetail.RequestBy = this.RequestBy;
            this.CustomerDetail.DateCreated = this.DateCreated;
            this.CustomerDetail.ExpireDate = this.ExpireDate;
        }

        /// <summary>
        /// Public Method
        /// <para>Method for set Entity to PropertyModel</para>
        /// </summary
        public void ToModel()
        {
            this._id = this.CustomerDetail.Id;
            this._applicationId = this.CustomerDetail.ApplicationId;
            this._storeCode = this.CustomerDetail.StoreCode;
            this._licenceCode = this.CustomerDetail.LicenceCode;
            this._genDate = this.CustomerDetail.GenDate;
            this._period = this.CustomerDetail.Period;
            this._isLived = this.CustomerDetail.IsLived;
            this._pOSId = this.CustomerDetail.POSId;
            this._requestBy = this.CustomerDetail.RequestBy;
            this._dateCreated = this.CustomerDetail.DateCreated;
            this._expireDate = this.CustomerDetail.ExpireDate;
        }

        /// <summary>
        /// Public Method
        /// <para>Method for set Entity to PropertyModel</para>
        /// </summary
        public void ToModelAndRaise()
        {
            this.Id = this.CustomerDetail.Id;
            this.ApplicationId = this.CustomerDetail.ApplicationId;
            this.StoreCode = this.CustomerDetail.StoreCode;
            this.LicenceCode = this.CustomerDetail.LicenceCode;
            this.GenDate = this.CustomerDetail.GenDate;
            this.Period = this.CustomerDetail.Period;
            this.IsLived = this.CustomerDetail.IsLived;
            this.POSId = this.CustomerDetail.POSId;
            this.RequestBy = this.CustomerDetail.RequestBy;
            this.DateCreated = this.CustomerDetail.DateCreated;
            this.ExpireDate = this.CustomerDetail.ExpireDate;
        }

        #endregion

        #region Custom Code
        #region Properties

        #region ExpireDateDisplay

        /// <summary>
        /// Gets or sets the ExpireDateDisplay.
        /// </summary>
        public DateTime? ExpireDateDisplay
        {
            get
            {
                if (this.ExpireDate.HasValue && this.ExpireDate.Value > 0)
                    return DateTime.FromOADate(this.ExpireDate.Value);
                return null;
            }

        }
        #endregion


        #region IsGenerated
        /// <summary>
        /// Gets the IsGenerated.
        /// </summary>
        public bool IsGenerated
        {
            get
            {
                if (string.IsNullOrWhiteSpace(LicenceCode))
                    return false;
                return true;
            }
        }
        #endregion


        #endregion

        #region Methods
        public void ToModel(CustomerDetailModel customerDetailModel)
        {
            this.Id = customerDetailModel.Id;
            this.ApplicationId = customerDetailModel.ApplicationId;
            this.StoreCode = customerDetailModel.StoreCode;
            this.LicenceCode = customerDetailModel.LicenceCode;
            this.GenDate = customerDetailModel.GenDate;
            this.Period = customerDetailModel.Period;
            this.IsLived = customerDetailModel.IsLived;
            this.POSId = customerDetailModel.POSId;
            this.RequestBy = customerDetailModel.RequestBy;
            this.DateCreated = customerDetailModel.DateCreated;
            this.ExpireDate = customerDetailModel.ExpireDate;
        }
        #endregion

        #region Override Methods
        protected override void PropertyChangedCompleted(string propertyName)
        {
            switch (propertyName)
            {
                case "ExpireDate":
                    OnPropertyChanged(() => ExpireDateDisplay);
                    break;
                case "LicenceCode":
                    OnPropertyChanged(() => IsGenerated);
                    break;
            }
            base.PropertyChangedCompleted(propertyName);
        }
        #endregion

        #endregion

        #region IDataErrorInfo Members

        public string Error
        {
            get
            {
                //List<string> errors = new List<string>();
                //PropertyDescriptorCollection props = TypeDescriptor.GetProperties(this);
                //foreach (PropertyDescriptor prop in props)
                //{
                //    string msg = this[prop.Name];
                //    if (!string.IsNullOrWhiteSpace(msg))
                //    {
                //        errors.Add(msg);
                //    }
                //}
                //return string.Join(Environment.NewLine, errors);
                return string.Empty;
            }
        }

        public string this[string columnName]
        {
            get
            {
                string message = string.Empty;

                switch (columnName)
                {
                    case "Id":
                        break;
                    case "ApplicationId":
                        break;
                    case "StoreCode":
                        break;
                    case "LicenceCode":
                        break;
                    case "GenDate":
                        break;
                    case "Period":
                        break;
                    case "IsLived":
                        break;
                    case "POSId":
                        break;
                    case "CustomerId":
                        break;
                    case "RequestBy":
                        break;
                    case "DateCreated":
                        break;
                    case "ExpireDate":
                        break;
                }

                if (!string.IsNullOrWhiteSpace(message))
                    return message;
                return null;
            }
        }

        #endregion
    }
}

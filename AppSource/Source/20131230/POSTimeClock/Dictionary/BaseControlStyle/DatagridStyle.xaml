<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Luna"
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
                    mc:Ignorable="d">
    <Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}" TargetType="{x:Type Button}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<Border BorderBrush="{DynamicResource DatagridColumnHeaderBorder}" BorderThickness="0,0,1,1" HorizontalAlignment="Stretch" Width="Auto" Background="{DynamicResource DatagridColumnHeaderBackground}"/>
						<Polygon x:Name="Arrow" Fill="{DynamicResource DatagridColumnHeader_Arrow_Background}" HorizontalAlignment="Right" Margin="8,8,3,3" Opacity="1" Points="0,10 10,10 10,0" Stretch="Uniform" VerticalAlignment="Bottom"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True"/>
						<Trigger Property="IsPressed" Value="True"/>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Visibility" TargetName="Arrow" Value="Collapsed"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>	
    <Style TargetType="{x:Type DataGridColumnHeadersPresenter}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DataGridColumnHeadersPresenter}">
					<Grid>
						<DataGridColumnHeader IsHitTestVisible="False"/>
						<ItemsPresenter/>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
    <Style x:Key="DatagridWithRowHeader" TargetType="{x:Type DataGrid}" >
		<Setter Property="Background" Value="{DynamicResource DatagridBackground}"/>
		<Setter Property="Foreground" Value="{DynamicResource DatagridForeground}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource DatagridBorderBrush}"/>
		<Setter Property="BorderThickness" Value="1,1,1,1"/>
		<Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
		<Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DataGrid}">
					<Border SnapsToDevicePixels="True" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
						<ScrollViewer x:Name="DG_ScrollViewer" Focusable="False">
							<ScrollViewer.Template>
								<ControlTemplate TargetType="{x:Type ScrollViewer}">
									<Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto"/>
											<ColumnDefinition Width="*"/>
											<ColumnDefinition Width="Auto"/>
										</Grid.ColumnDefinitions>
										<Grid.RowDefinitions>
											<RowDefinition Height="Auto"/>
											<RowDefinition Height="*"/>
											<RowDefinition Height="Auto"/>
										</Grid.RowDefinitions>
										<Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
										<DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" >
											<DataGridColumnHeadersPresenter.Visibility>
												<Binding Path="HeadersVisibility" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}">
													<Binding.ConverterParameter>
														<DataGridHeadersVisibility>Column</DataGridHeadersVisibility>
													</Binding.ConverterParameter>
												</Binding>
											</DataGridColumnHeadersPresenter.Visibility>
										</DataGridColumnHeadersPresenter>
										<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.ColumnSpan="2" Grid.Row="1" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False"/>
										<Border x:Name="brdCornerVerticalScrollBarColumnHeader" BorderBrush="{DynamicResource DatagridColumnHeaderBorder}" BorderThickness="0,0,0,1" Grid.Column="2" HorizontalAlignment="Stretch" Height="Auto" Grid.Row="0" VerticalAlignment="Stretch" Width="Auto" Background="{DynamicResource DatagridColumnHeaderBackground}"/>
										<ScrollBar x:Name="PART_VerticalScrollBar" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Grid.Column="2" Grid.Row="1" Orientation="Vertical" ViewportSize="{TemplateBinding ViewportHeight}" Maximum="{TemplateBinding ScrollableHeight}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
										<Rectangle x:Name="CornerVerticalHorizontalScrollBar" Grid.Column="2" Fill="{DynamicResource ScrollBar_Background}" Height="Auto" Grid.Row="2" VerticalAlignment="Stretch" Width="Auto"/>
										<Grid Grid.Column="1" Grid.Row="2">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}}"/>
												<ColumnDefinition Width="*"/>
											</Grid.ColumnDefinitions>
											<ScrollBar x:Name="PART_HorizontalScrollBar" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Grid.Column="1" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}" Maximum="{TemplateBinding ScrollableWidth}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
										</Grid>
									</Grid>
								</ControlTemplate>
							</ScrollViewer.Template>
							<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						</ScrollViewer>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="AlternatingRowBackground" Value="{DynamicResource DatagridAlternatingRowbackground}"/>
		<Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource DatagridHorizontal_VerticalGridLinesBrush}"/>
		<Setter Property="VerticalGridLinesBrush" Value="{DynamicResource DatagridHorizontal_VerticalGridLinesBrush}"/>
		<Setter Property="RowHeaderWidth" Value="16"/>
		<Setter Property="RowHeight" Value="25"/>
		<Setter Property="GridLinesVisibility" Value="Horizontal"/>
		<Setter Property="ColumnHeaderHeight" Value="28"/>
		<Setter Property="FontSize" Value="11"/>
		<Setter Property="FontFamily" Value="Tahoma"/>
		<Style.Triggers>
			<Trigger Property="IsGrouping" Value="True">
				<Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
			</Trigger>
		</Style.Triggers>
	</Style>
    <Style  TargetType="{x:Type DataGridRowHeader}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type DataGridRowHeader}">
						<Grid>
							<Microsoft_Windows_Themes:DataGridHeaderBorder BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" IsPressed="{TemplateBinding IsPressed}" IsHovered="{TemplateBinding IsMouseOver}" IsSelected="{TemplateBinding IsRowSelected}" Orientation="Horizontal" Padding="{TemplateBinding Padding}" SeparatorBrush="{TemplateBinding SeparatorBrush}" SeparatorVisibility="{TemplateBinding SeparatorVisibility}" Cursor="Hand">
								<StackPanel Orientation="Horizontal">
									<ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
									<Control SnapsToDevicePixels="False" Template="{Binding ValidationErrorTemplate, RelativeSource={RelativeSource AncestorLevel=1, AncestorType={x:Type DataGridRow}, Mode=FindAncestor}}">
										<Control.Visibility>
											<Binding Path="(Validation.HasError)" RelativeSource="{RelativeSource AncestorLevel=1, AncestorType={x:Type DataGridRow}, Mode=FindAncestor}">
												<Binding.Converter>
													<BooleanToVisibilityConverter/>
												</Binding.Converter>
											</Binding>
										</Control.Visibility>
									</Control>
								</StackPanel>
							</Microsoft_Windows_Themes:DataGridHeaderBorder>
							<Thumb x:Name="PART_TopHeaderGripper" VerticalAlignment="Top">
								<Thumb.Style>
									<Style TargetType="{x:Type Thumb}">
										<Setter Property="Height" Value="8"/>
										<Setter Property="Background" Value="Transparent"/>
										<Setter Property="Cursor" Value="SizeNS"/>
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="{x:Type Thumb}">
													<Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</Thumb.Style>
							</Thumb>
							<Thumb x:Name="PART_BottomHeaderGripper" VerticalAlignment="Bottom">
								<Thumb.Style>
									<Style TargetType="{x:Type Thumb}">
										<Setter Property="Height" Value="8"/>
										<Setter Property="Background" Value="Transparent"/>
										<Setter Property="Cursor" Value="SizeNS"/>
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="{x:Type Thumb}">
													<Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</Thumb.Style>
							</Thumb>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="Background" Value="{DynamicResource DatagridColumnHeaderBackground}"/>
			<Setter Property="BorderThickness" Value="0,0,1,1"/>
			<Setter Property="BorderBrush" Value="{DynamicResource DatagridColumnHeaderBorder}"/>
		</Style>
    <Style TargetType="{x:Type DataGridColumnHeader}">
		<Setter Property="VerticalContentAlignment" Value="Center  "/>
		<Setter Property="BorderThickness" Value="0,0,0,1"/>
		<Setter Property="BorderBrush" Value="{DynamicResource DatagridColumnHeaderBorder}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
					<Grid x:Name="grid">
						<Microsoft_Windows_Themes:DataGridHeaderBorder BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" IsClickable="{TemplateBinding CanUserSort}" IsHovered="{TemplateBinding IsMouseOver}" IsPressed="{TemplateBinding IsPressed}" SeparatorBrush="{TemplateBinding SeparatorBrush}" SeparatorVisibility="{TemplateBinding SeparatorVisibility}" SortDirection="{TemplateBinding SortDirection}" x:Name="dataGridHeaderBorder" Background="{DynamicResource DatagridColumnHeaderBackground}">
							<ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" RenderTransformOrigin="0.5,0.5">
								<ContentPresenter.RenderTransform>
									<TransformGroup>
										<ScaleTransform/>
										<SkewTransform/>
										<RotateTransform/>
										<TranslateTransform/>
									</TransformGroup>
								</ContentPresenter.RenderTransform>
							</ContentPresenter>
						</Microsoft_Windows_Themes:DataGridHeaderBorder>
						<Thumb HorizontalAlignment="Left" x:Name="PART_LeftHeaderGripper">
							<Thumb.Style>
								<Style TargetType="{x:Type Thumb}">
									<Setter Property="Width" Value="8"/>
									<Setter Property="Background" Value="#00FFFFFF"/>
									<Setter Property="Cursor" Value="SizeWE"/>
									<Setter Property="Template">
										<Setter.Value>
											<ControlTemplate TargetType="{x:Type Thumb}">
												<Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</Style>
							</Thumb.Style>
						</Thumb>
						<Thumb HorizontalAlignment="Right" x:Name="PART_RightHeaderGripper" Width="1">
							<Thumb.Style>
								<Style TargetType="{x:Type Thumb}">
									<Setter Property="Width" Value="8"/>
									<Setter Property="Background" Value="#00FFFFFF"/>
									<Setter Property="Cursor" Value="SizeWE"/>
									<Setter Property="Template">
										<Setter.Value>
											<ControlTemplate TargetType="{x:Type Thumb}">
												<Border Padding="{TemplateBinding Padding}" Background="{DynamicResource PART_RightHeaderGripperBackground}"/>
											</ControlTemplate>
										</Setter.Value>
									</Setter>
								</Style>
							</Thumb.Style>
						</Thumb>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Cursor" TargetName="grid" Value="Hand"/>
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="RenderTransform" TargetName="contentPresenter">
								<Setter.Value>
									<TransformGroup>
										<ScaleTransform/>
										<SkewTransform/>
										<RotateTransform/>
										<TranslateTransform X="1" Y="1"/>
									</TransformGroup>
								</Setter.Value>
							</Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="Background" Value="{DynamicResource DatagridColumnHeaderBackground}"/>
	</Style>
    <Style TargetType="{x:Type DataGridRow}">
			<Style.Triggers>
				<Trigger Property="ItemsControl.AlternationIndex" Value="0"/>
				<Trigger Property="ItemsControl.AlternationIndex" Value="1">
					<Setter Property="Background" Value="{DynamicResource DatagridAlternatingRowbackground}"/>
				</Trigger>
			</Style.Triggers>
			<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
			<Setter Property="SnapsToDevicePixels" Value="true"/>
			<Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
			<Setter Property="ValidationErrorTemplate">
				<Setter.Value>
					<ControlTemplate>
						<TextBlock Foreground="Red" Margin="2,0,0,0" Text="!" VerticalAlignment="Center"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type DataGridRow}">
						<Border x:Name="DGR_Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" Background="{TemplateBinding Background}">
							<SelectiveScrollingGrid>
								<SelectiveScrollingGrid.ColumnDefinitions>
									<ColumnDefinition Width="Auto"/>
									<ColumnDefinition Width="*"/>
								</SelectiveScrollingGrid.ColumnDefinitions>
								<SelectiveScrollingGrid.RowDefinitions>
									<RowDefinition Height="*"/>
									<RowDefinition Height="Auto"/>
								</SelectiveScrollingGrid.RowDefinitions>
								<DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
								<DataGridDetailsPresenter Grid.Column="1" Grid.Row="1" SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Visibility="{TemplateBinding DetailsVisibility}"/>
								<DataGridRowHeader Grid.RowSpan="2" SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
							</SelectiveScrollingGrid>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Background" TargetName="DGR_Border" Value="{DynamicResource DatagridRow_IsMouseOver_Background}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
    <Style 
		TargetType="{x:Type DataGridCell}">
		<Setter Property="Background"
			Value="Transparent" />
		<Setter Property="BorderBrush"
			Value="Transparent" />
		<Setter Property="BorderThickness"
			Value="0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DataGridCell}">
					<Border SnapsToDevicePixels="True"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}">
						<ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
							Content="{TemplateBinding Content}"
							ContentStringFormat="{TemplateBinding ContentStringFormat}"
							ContentTemplate="{TemplateBinding ContentTemplate}"
							VerticalAlignment="Center" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="HorizontalAlignment"
			Value="Stretch" />
		<Style.Triggers>
			<Trigger Property="IsSelected"
				Value="True">
				<Setter Property="Background"
					Value="{DynamicResource DatagridCell_IsSelected_Background}" />
				<Setter Property="BorderThickness" Value="0"/>
				<Setter Property="Foreground" Value="{DynamicResource DatagridCell_IsSelected_Foreground}"/>
			</Trigger>
			<Trigger Property="IsKeyboardFocusWithin"
				Value="True">
				<Setter Property="BorderBrush"
					Value="{DynamicResource {ComponentResourceKey ResourceId=FocusBorderBrushKey, TypeInTargetAssembly={x:Type DataGrid}}}" />
			</Trigger>
		</Style.Triggers>
	</Style>
    <Style x:Key="DatagridWithoutRowHeader" TargetType="{x:Type DataGrid}" >
		<Setter Property="Background" Value="{DynamicResource DatagridBackground}"/>
		<Setter Property="Foreground" Value="{DynamicResource DatagridForeground}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource DatagridBorderBrush}"/>
		<Setter Property="BorderThickness" Value="1,1,1,1"/>
		<Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
		<Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DataGrid}">
					<Border SnapsToDevicePixels="True" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}">
						<ScrollViewer x:Name="DG_ScrollViewer" Focusable="False">
							<ScrollViewer.Template>
								<ControlTemplate TargetType="{x:Type ScrollViewer}">
									<Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto"/>
											<ColumnDefinition Width="*"/>
											<ColumnDefinition Width="Auto"/>
										</Grid.ColumnDefinitions>
										<Grid.RowDefinitions>
											<RowDefinition Height="Auto"/>
											<RowDefinition Height="*"/>
											<RowDefinition Height="Auto"/>
										</Grid.RowDefinitions>
										<Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
										<DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" >
											<DataGridColumnHeadersPresenter.Visibility>
												<Binding Path="HeadersVisibility" RelativeSource="{RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}">
													<Binding.ConverterParameter>
														<DataGridHeadersVisibility>Column</DataGridHeadersVisibility>
													</Binding.ConverterParameter>
												</Binding>
											</DataGridColumnHeadersPresenter.Visibility>
										</DataGridColumnHeadersPresenter>
										<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.ColumnSpan="2" Grid.Row="1" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False"/>
										<Border x:Name="brdCornerVerticalScrollBarColumnHeader" BorderBrush="{DynamicResource DatagridColumnHeaderBorder}" BorderThickness="0,0,0,1" Grid.Column="2" HorizontalAlignment="Stretch" Height="Auto" Grid.Row="0" VerticalAlignment="Stretch" Width="Auto" Background="{DynamicResource DatagridColumnHeaderBackground}"/>
										<ScrollBar x:Name="PART_VerticalScrollBar" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"  Grid.Column="2" Grid.Row="1" Orientation="Vertical" ViewportSize="{TemplateBinding ViewportHeight}" Maximum="{TemplateBinding ScrollableHeight}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
										<Rectangle x:Name="CornerVerticalHorizontalScrollBar" Grid.Column="2" Fill="{DynamicResource ScrollBar_Background}" Height="Auto" Grid.Row="2" VerticalAlignment="Stretch" Width="Auto"/>
										<Grid Grid.Column="1" Grid.Row="2">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type DataGrid}}}"/>
												<ColumnDefinition Width="*"/>
											</Grid.ColumnDefinitions>
											<ScrollBar x:Name="PART_HorizontalScrollBar" 
Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Grid.Column="1" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}" Maximum="{TemplateBinding ScrollableWidth}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"/>
										</Grid>
									</Grid>
								</ControlTemplate>
							</ScrollViewer.Template>
							<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						</ScrollViewer>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="AlternatingRowBackground" Value="{DynamicResource DatagridAlternatingRowbackground}"/>
		<Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource DatagridHorizontal_VerticalGridLinesBrush}"/>
		<Setter Property="VerticalGridLinesBrush" Value="{DynamicResource DatagridHorizontal_VerticalGridLinesBrush}"/>
		<Setter Property="RowHeaderWidth" Value="0"/>
		<Setter Property="RowHeight" Value="25"/>
		<Setter Property="GridLinesVisibility" Value="Horizontal"/>
		<Setter Property="ColumnHeaderHeight" Value="28"/>
		<Style.Triggers>
			<Trigger Property="IsGrouping" Value="True">
				<Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
			</Trigger>
		</Style.Triggers>
	</Style>
</ResourceDictionary>
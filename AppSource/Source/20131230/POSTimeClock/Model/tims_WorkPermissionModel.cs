//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Linq;
using System.Linq.Expressions;
using CPC.Helper;
using CPC.Toolkit.Base;
using CPC.TimeClock.Database;

namespace CPC.TimeClock.Model
{
    /// <summary>
    /// Model for table tims_WorkPermission
    /// </summary>
    [Serializable]
    public partial class tims_WorkPermissionModel : ModelBase, IDataErrorInfo
    {
        #region Constructor

        // Default constructor
        public tims_WorkPermissionModel()
        {
            this.IsNew = true;
            this.tims_WorkPermission = new tims_WorkPermission();
        }

        // Default constructor that set entity to field
        public tims_WorkPermissionModel(tims_WorkPermission tims_workpermission, bool isRaiseProperties = false)
        {
            this.tims_WorkPermission = tims_workpermission;
            if (!isRaiseProperties)
                this.ToModel();
            else
                this.ToModelAndRaise();
            this.IsDirty = false;
        }

        #endregion

        #region Entity Properties

        public tims_WorkPermission tims_WorkPermission { get; private set; }

        #endregion

        #region Primitive Properties

        protected int _id;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Id</param>
        /// </summary>
        public int Id
        {
            get { return this._id; }
            set
            {
                if (this._id != value)
                {
                    this.IsDirty = true;
                    this._id = value;
                    OnPropertyChanged(() => Id);
                    PropertyChangedCompleted(() => Id);
                }
            }
        }

        protected long _employeeId;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the EmployeeId</param>
        /// </summary>
        public long EmployeeId
        {
            get { return this._employeeId; }
            set
            {
                if (this._employeeId != value)
                {
                    this.IsDirty = true;
                    this._employeeId = value;
                    OnPropertyChanged(() => EmployeeId);
                    PropertyChangedCompleted(() => EmployeeId);
                }
            }
        }

        protected int _permissionType;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the PermissionType</param>
        /// </summary>
        public int PermissionType
        {
            get { return this._permissionType; }
            set
            {
                if (this._permissionType != value)
                {
                    this.IsDirty = true;
                    this._permissionType = value;
                    OnPropertyChanged(() => PermissionType);
                    PropertyChangedCompleted(() => PermissionType);
                }
            }
        }

        protected System.DateTime _fromDate;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the FromDate</param>
        /// </summary>
        public System.DateTime FromDate
        {
            get { return this._fromDate; }
            set
            {
                if (this._fromDate != value)
                {
                    this.IsDirty = true;
                    this._fromDate = value;
                    OnPropertyChanged(() => FromDate);
                    PropertyChangedCompleted(() => FromDate);
                }
            }
        }

        protected System.DateTime _toDate;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the ToDate</param>
        /// </summary>
        public System.DateTime ToDate
        {
            get { return this._toDate; }
            set
            {
                if (this._toDate != value)
                {
                    this.IsDirty = true;
                    this._toDate = value;
                    OnPropertyChanged(() => ToDate);
                    PropertyChangedCompleted(() => ToDate);
                }
            }
        }

        protected string _note;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Note</param>
        /// </summary>
        public string Note
        {
            get { return this._note; }
            set
            {
                if (this._note != value)
                {
                    this.IsDirty = true;
                    this._note = value;
                    OnPropertyChanged(() => Note);
                    PropertyChangedCompleted(() => Note);
                }
            }
        }

        protected short _noOfDays;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the NoOfDays</param>
        /// </summary>
        public short NoOfDays
        {
            get { return this._noOfDays; }
            set
            {
                if (this._noOfDays != value)
                {
                    this.IsDirty = true;
                    this._noOfDays = value;
                    OnPropertyChanged(() => NoOfDays);
                    PropertyChangedCompleted(() => NoOfDays);
                }
            }
        }

        protected float _hourPerDay;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the HourPerDay</param>
        /// </summary>
        public float HourPerDay
        {
            get { return this._hourPerDay; }
            set
            {
                if (this._hourPerDay != value)
                {
                    this.IsDirty = true;
                    this._hourPerDay = value;
                    OnPropertyChanged(() => HourPerDay);
                    PropertyChangedCompleted(() => HourPerDay);
                }
            }
        }

        protected bool _paidFlag;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the PaidFlag</param>
        /// </summary>
        public bool PaidFlag
        {
            get { return this._paidFlag; }
            set
            {
                if (this._paidFlag != value)
                {
                    this.IsDirty = true;
                    this._paidFlag = value;
                    OnPropertyChanged(() => PaidFlag);
                    PropertyChangedCompleted(() => PaidFlag);
                }
            }
        }

        protected bool _activeFlag;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the ActiveFlag</param>
        /// </summary>
        public bool ActiveFlag
        {
            get { return this._activeFlag; }
            set
            {
                if (this._activeFlag != value)
                {
                    this.IsDirty = true;
                    this._activeFlag = value;
                    OnPropertyChanged(() => ActiveFlag);
                    PropertyChangedCompleted(() => ActiveFlag);
                }
            }
        }

        protected System.DateTime _createdDate;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the CreatedDate</param>
        /// </summary>
        public System.DateTime CreatedDate
        {
            get { return this._createdDate; }
            set
            {
                if (this._createdDate != value)
                {
                    this.IsDirty = true;
                    this._createdDate = value;
                    OnPropertyChanged(() => CreatedDate);
                    PropertyChangedCompleted(() => CreatedDate);
                }
            }
        }

        protected int _createdById;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the CreatedById</param>
        /// </summary>
        public int CreatedById
        {
            get { return this._createdById; }
            set
            {
                if (this._createdById != value)
                {
                    this.IsDirty = true;
                    this._createdById = value;
                    OnPropertyChanged(() => CreatedById);
                    PropertyChangedCompleted(() => CreatedById);
                }
            }
        }

        protected Nullable<System.DateTime> _modifiedDate;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the ModifiedDate</param>
        /// </summary>
        public Nullable<System.DateTime> ModifiedDate
        {
            get { return this._modifiedDate; }
            set
            {
                if (this._modifiedDate != value)
                {
                    this.IsDirty = true;
                    this._modifiedDate = value;
                    OnPropertyChanged(() => ModifiedDate);
                    PropertyChangedCompleted(() => ModifiedDate);
                }
            }
        }

        protected Nullable<int> _modifiedById;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the ModifiedById</param>
        /// </summary>
        public Nullable<int> ModifiedById
        {
            get { return this._modifiedById; }
            set
            {
                if (this._modifiedById != value)
                {
                    this.IsDirty = true;
                    this._modifiedById = value;
                    OnPropertyChanged(() => ModifiedById);
                    PropertyChangedCompleted(() => ModifiedById);
                }
            }
        }

        protected int _overtimeOptions;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the OvertimeOptions</param>
        /// </summary>
        public int OvertimeOptions
        {
            get { return this._overtimeOptions; }
            set
            {
                if (this._overtimeOptions != value)
                {
                    this.IsDirty = true;
                    this._overtimeOptions = value;
                    OnPropertyChanged(() => OvertimeOptions);
                    PropertyChangedCompleted(() => OvertimeOptions);
                }
            }
        }

        #endregion

        #region Public Methods

        /// <summary>
        /// <param>Public Method</param>
        /// Method for set IsNew & IsDirty = false;
        /// </summary>
        public void EndUpdate()
        {
            this.IsNew = false;
            this.IsDirty = false;
        }

        /// <summary>
        /// Public Method
        /// <param>Method for set PropertyModel to Entity</param>
        /// </summary>
        public void ToEntity()
        {
            if (IsNew)
                this.tims_WorkPermission.Id = this.Id;
            this.tims_WorkPermission.EmployeeId = this.EmployeeId;
            this.tims_WorkPermission.PermissionType = this.PermissionType;
            this.tims_WorkPermission.FromDate = this.FromDate;
            this.tims_WorkPermission.ToDate = this.ToDate;
            if (this.Note != null)
                this.tims_WorkPermission.Note = this.Note.Trim();
            this.tims_WorkPermission.NoOfDays = this.NoOfDays;
            this.tims_WorkPermission.HourPerDay = this.HourPerDay;
            this.tims_WorkPermission.PaidFlag = this.PaidFlag;
            this.tims_WorkPermission.ActiveFlag = this.ActiveFlag;
            this.tims_WorkPermission.CreatedDate = this.CreatedDate;
            this.tims_WorkPermission.CreatedById = this.CreatedById;
            this.tims_WorkPermission.ModifiedDate = this.ModifiedDate;
            this.tims_WorkPermission.ModifiedById = this.ModifiedById;
            this.tims_WorkPermission.OvertimeOptions = this.OvertimeOptions;
        }

        /// <summary>
        /// Public Method
        /// <param>Method for set Entity to PropertyModel</param>
        /// </summary
        public void ToModel()
        {
            this._id = this.tims_WorkPermission.Id;
            this._employeeId = this.tims_WorkPermission.EmployeeId;
            this._permissionType = this.tims_WorkPermission.PermissionType;
            this._fromDate = this.tims_WorkPermission.FromDate;
            this._toDate = this.tims_WorkPermission.ToDate;
            this._note = this.tims_WorkPermission.Note;
            this._noOfDays = this.tims_WorkPermission.NoOfDays;
            this._hourPerDay = this.tims_WorkPermission.HourPerDay;
            this._paidFlag = this.tims_WorkPermission.PaidFlag;
            this._activeFlag = this.tims_WorkPermission.ActiveFlag;
            this._createdDate = this.tims_WorkPermission.CreatedDate;
            this._createdById = this.tims_WorkPermission.CreatedById;
            this._modifiedDate = this.tims_WorkPermission.ModifiedDate;
            this._modifiedById = this.tims_WorkPermission.ModifiedById;
            this._overtimeOptions = this.tims_WorkPermission.OvertimeOptions;
        }

        /// <summary>
        /// Public Method
        /// <param>Method for set Entity to PropertyModel</param>
        /// </summary
        public void ToModelAndRaise()
        {
            this.Id = this.tims_WorkPermission.Id;
            this.EmployeeId = this.tims_WorkPermission.EmployeeId;
            this.PermissionType = this.tims_WorkPermission.PermissionType;
            this.FromDate = this.tims_WorkPermission.FromDate;
            this.ToDate = this.tims_WorkPermission.ToDate;
            this.Note = this.tims_WorkPermission.Note;
            this.NoOfDays = this.tims_WorkPermission.NoOfDays;
            this.HourPerDay = this.tims_WorkPermission.HourPerDay;
            this.PaidFlag = this.tims_WorkPermission.PaidFlag;
            this.ActiveFlag = this.tims_WorkPermission.ActiveFlag;
            this.CreatedDate = this.tims_WorkPermission.CreatedDate;
            this.CreatedById = this.tims_WorkPermission.CreatedById;
            this.ModifiedDate = this.tims_WorkPermission.ModifiedDate;
            this.ModifiedById = this.tims_WorkPermission.ModifiedById;
            this.OvertimeOptions = this.tims_WorkPermission.OvertimeOptions;
        }

        #endregion

        #region Custom Code


        #endregion

        #region IDataErrorInfo Members

        public string Error
        {
            get { throw new NotImplementedException(); }
        }

        public string this[string columnName]
        {
            get
            {
                string message = string.Empty;

                switch (columnName)
                {
                    case "Id":
                        break;
                    case "EmployeeId":
                        break;
                    case "PermissionType":
                        break;
                    case "FromDate":
                        break;
                    case "ToDate":
                        break;
                    case "Note":
                        break;
                    case "NoOfDays":
                        break;
                    case "HourPerDay":
                        break;
                    case "PaidFlag":
                        break;
                    case "ActiveFlag":
                        break;
                    case "CreatedDate":
                        break;
                    case "CreatedById":
                        break;
                    case "ModifiedDate":
                        break;
                    case "ModifiedById":
                        break;
                    case "OvertimeOptions":
                        break;
                }

                if (!string.IsNullOrWhiteSpace(message))
                    return message;
                return null;
            }
        }

        #endregion
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Linq;
using System.Linq.Expressions;
using CPC.Helper;
using CPC.Toolkit.Base;
using CPC.TimeClock.Database;

namespace CPC.TimeClock.Model
{
    /// <summary>
    /// Model for table base_ResourceAccount
    /// </summary>
    [Serializable]
    public partial class base_ResourceAccountModel : ModelBase, IDataErrorInfo
    {
        #region Constructor

        // Default constructor
        public base_ResourceAccountModel()
        {
            this.IsNew = true;
            this.base_ResourceAccount = new base_ResourceAccount();
        }

        // Default constructor that set entity to field
        public base_ResourceAccountModel(base_ResourceAccount base_resourceaccount, bool isRaiseProperties = false)
        {
            this.base_ResourceAccount = base_resourceaccount;
            if (!isRaiseProperties)
                this.ToModel();
            else
                this.ToModelAndRaise();
            this.IsDirty = false;
        }

        #endregion

        #region Entity Properties

        public base_ResourceAccount base_ResourceAccount { get; private set; }

        #endregion

        #region Primitive Properties

        protected long _id;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Id</param>
        /// </summary>
        public long Id
        {
            get { return this._id; }
            set
            {
                if (this._id != value)
                {
                    this.IsDirty = true;
                    this._id = value;
                    OnPropertyChanged(() => Id);
                    PropertyChangedCompleted(() => Id);
                }
            }
        }

        protected System.Guid _resource;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Resource</param>
        /// </summary>
        public System.Guid Resource
        {
            get { return this._resource; }
            set
            {
                if (this._resource != value)
                {
                    this.IsDirty = true;
                    this._resource = value;
                    OnPropertyChanged(() => Resource);
                    PropertyChangedCompleted(() => Resource);
                }
            }
        }

        protected string _userResource;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the UserResource</param>
        /// </summary>
        public string UserResource
        {
            get { return this._userResource; }
            set
            {
                if (this._userResource != value)
                {
                    this.IsDirty = true;
                    this._userResource = value;
                    OnPropertyChanged(() => UserResource);
                    PropertyChangedCompleted(() => UserResource);
                }
            }
        }

        protected string _loginName;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the LoginName</param>
        /// </summary>
        public string LoginName
        {
            get { return this._loginName; }
            set
            {
                if (this._loginName != value)
                {
                    this.IsDirty = true;
                    this._loginName = value;
                    OnPropertyChanged(() => LoginName);
                    PropertyChangedCompleted(() => LoginName);
                }
            }
        }

        protected string _password;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Password</param>
        /// </summary>
        public string Password
        {
            get { return this._password; }
            set
            {
                if (this._password != value)
                {
                    this.IsDirty = true;
                    this._password = value;
                    OnPropertyChanged(() => Password);
                    PropertyChangedCompleted(() => Password);
                }
            }
        }

        protected Nullable<System.DateTime> _expiredDate;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the ExpiredDate</param>
        /// </summary>
        public Nullable<System.DateTime> ExpiredDate
        {
            get { return this._expiredDate; }
            set
            {
                if (this._expiredDate != value)
                {
                    this.IsDirty = true;
                    this._expiredDate = value;
                    OnPropertyChanged(() => ExpiredDate);
                    PropertyChangedCompleted(() => ExpiredDate);
                }
            }
        }

        protected Nullable<bool> _isLocked;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the IsLocked</param>
        /// </summary>
        public Nullable<bool> IsLocked
        {
            get { return this._isLocked; }
            set
            {
                if (this._isLocked != value)
                {
                    this.IsDirty = true;
                    this._isLocked = value;
                    OnPropertyChanged(() => IsLocked);
                    PropertyChangedCompleted(() => IsLocked);
                }
            }
        }

        protected Nullable<bool> _isExpired;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the IsExpired</param>
        /// </summary>
        public Nullable<bool> IsExpired
        {
            get { return this._isExpired; }
            set
            {
                if (this._isExpired != value)
                {
                    this.IsDirty = true;
                    this._isExpired = value;
                    OnPropertyChanged(() => IsExpired);
                    PropertyChangedCompleted(() => IsExpired);
                }
            }
        }

        #endregion

        #region Public Methods

        /// <summary>
        /// <param>Public Method</param>
        /// Method for set IsNew & IsDirty = false;
        /// </summary>
        public void EndUpdate()
        {
            this.IsNew = false;
            this.IsDirty = false;
        }

        /// <summary>
        /// Public Method
        /// <param>Method for set PropertyModel to Entity</param>
        /// </summary>
        public void ToEntity()
        {
            if (IsNew)
            {
                this.base_ResourceAccount.Id = this.Id;
                this.base_ResourceAccount.Resource = this.Resource;
            }
            if (this.UserResource != null)
                this.base_ResourceAccount.UserResource = this.UserResource.Trim();
            if (this.LoginName != null)
                this.base_ResourceAccount.LoginName = this.LoginName.Trim();
            if (this.Password != null)
                this.base_ResourceAccount.Password = this.Password.Trim();
            this.base_ResourceAccount.ExpiredDate = this.ExpiredDate;
            this.base_ResourceAccount.IsLocked = this.IsLocked;
            this.base_ResourceAccount.IsExpired = this.IsExpired;
        }

        /// <summary>
        /// Public Method
        /// <param>Method for set Entity to PropertyModel</param>
        /// </summary
        public void ToModel()
        {
            this._id = this.base_ResourceAccount.Id;
            this._resource = this.base_ResourceAccount.Resource;
            this._userResource = this.base_ResourceAccount.UserResource;
            this._loginName = this.base_ResourceAccount.LoginName;
            this._password = this.base_ResourceAccount.Password;
            this._expiredDate = this.base_ResourceAccount.ExpiredDate;
            this._isLocked = this.base_ResourceAccount.IsLocked;
            this._isExpired = this.base_ResourceAccount.IsExpired;
        }

        /// <summary>
        /// Public Method
        /// <param>Method for set Entity to PropertyModel</param>
        /// </summary
        public void ToModelAndRaise()
        {
            this.Id = this.base_ResourceAccount.Id;
            this.Resource = this.base_ResourceAccount.Resource;
            this.UserResource = this.base_ResourceAccount.UserResource;
            this.LoginName = this.base_ResourceAccount.LoginName;
            this.Password = this.base_ResourceAccount.Password;
            this.ExpiredDate = this.base_ResourceAccount.ExpiredDate;
            this.IsLocked = this.base_ResourceAccount.IsLocked;
            this.IsExpired = this.base_ResourceAccount.IsExpired;
        }

        #endregion

        #region Custom Code


        #endregion

        #region IDataErrorInfo Members

        public string Error
        {
            get { throw new NotImplementedException(); }
        }

        public string this[string columnName]
        {
            get
            {
                string message = string.Empty;

                switch (columnName)
                {
                    case "Id":
                        break;
                    case "Resource":
                        break;
                    case "UserResource":
                        break;
                    case "LoginName":
                        break;
                    case "Password":
                        break;
                    case "ExpiredDate":
                        break;
                    case "IsLocked":
                        break;
                    case "IsExpired":
                        break;
                }

                if (!string.IsNullOrWhiteSpace(message))
                    return message;
                return null;
            }
        }

        #endregion
    }
}

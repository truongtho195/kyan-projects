//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Linq;
using System.Linq.Expressions;
using CPC.Helper;
using CPC.Toolkit.Base;
using CPC.TimeClock.Database;

namespace CPC.TimeClock.Model
{
    /// <summary>
    /// Model for table base_Department
    /// </summary>
    [Serializable]
    public partial class base_DepartmentModel : ModelBase, IDataErrorInfo
    {
        #region Constructor

        // Default constructor
        public base_DepartmentModel()
        {
            this.IsNew = true;
            this.base_Department = new base_Department();
        }

        // Default constructor that set entity to field
        public base_DepartmentModel(base_Department base_department, bool isRaiseProperties = false)
        {
            this.base_Department = base_department;
            if (!isRaiseProperties)
                this.ToModel();
            else
                this.ToModelAndRaise();
            this.IsDirty = false;
        }

        #endregion

        #region Entity Properties

        public base_Department base_Department { get; private set; }

        #endregion

        #region Primitive Properties

        protected int _id;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Id</param>
        /// </summary>
        public int Id
        {
            get { return this._id; }
            set
            {
                if (this._id != value)
                {
                    this.IsDirty = true;
                    this._id = value;
                    OnPropertyChanged(() => Id);
                    PropertyChangedCompleted(() => Id);
                }
            }
        }

        protected string _name;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Name</param>
        /// </summary>
        public string Name
        {
            get { return this._name; }
            set
            {
                if (this._name != value)
                {
                    this.IsDirty = true;
                    this._name = value;
                    OnPropertyChanged(() => Name);
                    PropertyChangedCompleted(() => Name);
                }
            }
        }

        protected Nullable<int> _parentId;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the ParentId</param>
        /// </summary>
        public Nullable<int> ParentId
        {
            get { return this._parentId; }
            set
            {
                if (this._parentId != value)
                {
                    this.IsDirty = true;
                    this._parentId = value;
                    OnPropertyChanged(() => ParentId);
                    PropertyChangedCompleted(() => ParentId);
                }
            }
        }

        protected string _taxCodeId;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the TaxCodeId</param>
        /// </summary>
        public string TaxCodeId
        {
            get { return this._taxCodeId; }
            set
            {
                if (this._taxCodeId != value)
                {
                    this.IsDirty = true;
                    this._taxCodeId = value;
                    OnPropertyChanged(() => TaxCodeId);
                    PropertyChangedCompleted(() => TaxCodeId);
                }
            }
        }

        protected decimal _margin;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Margin</param>
        /// </summary>
        public decimal Margin
        {
            get { return this._margin; }
            set
            {
                if (this._margin != value)
                {
                    this.IsDirty = true;
                    this._margin = value;
                    OnPropertyChanged(() => Margin);
                    PropertyChangedCompleted(() => Margin);
                }
            }
        }

        protected decimal _markUp;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the MarkUp</param>
        /// </summary>
        public decimal MarkUp
        {
            get { return this._markUp; }
            set
            {
                if (this._markUp != value)
                {
                    this.IsDirty = true;
                    this._markUp = value;
                    OnPropertyChanged(() => MarkUp);
                    PropertyChangedCompleted(() => MarkUp);
                }
            }
        }

        protected short _levelId;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the LevelId</param>
        /// </summary>
        public short LevelId
        {
            get { return this._levelId; }
            set
            {
                if (this._levelId != value)
                {
                    this.IsDirty = true;
                    this._levelId = value;
                    OnPropertyChanged(() => LevelId);
                    PropertyChangedCompleted(() => LevelId);
                }
            }
        }

        protected Nullable<bool> _isActived;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the IsActived</param>
        /// </summary>
        public Nullable<bool> IsActived
        {
            get { return this._isActived; }
            set
            {
                if (this._isActived != value)
                {
                    this.IsDirty = true;
                    this._isActived = value;
                    OnPropertyChanged(() => IsActived);
                    PropertyChangedCompleted(() => IsActived);
                }
            }
        }

        protected string _userCreated;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the UserCreated</param>
        /// </summary>
        public string UserCreated
        {
            get { return this._userCreated; }
            set
            {
                if (this._userCreated != value)
                {
                    this.IsDirty = true;
                    this._userCreated = value;
                    OnPropertyChanged(() => UserCreated);
                    PropertyChangedCompleted(() => UserCreated);
                }
            }
        }

        protected string _userUpdated;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the UserUpdated</param>
        /// </summary>
        public string UserUpdated
        {
            get { return this._userUpdated; }
            set
            {
                if (this._userUpdated != value)
                {
                    this.IsDirty = true;
                    this._userUpdated = value;
                    OnPropertyChanged(() => UserUpdated);
                    PropertyChangedCompleted(() => UserUpdated);
                }
            }
        }

        protected Nullable<System.DateTime> _dateCreated;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the DateCreated</param>
        /// </summary>
        public Nullable<System.DateTime> DateCreated
        {
            get { return this._dateCreated; }
            set
            {
                if (this._dateCreated != value)
                {
                    this.IsDirty = true;
                    this._dateCreated = value;
                    OnPropertyChanged(() => DateCreated);
                    PropertyChangedCompleted(() => DateCreated);
                }
            }
        }

        protected Nullable<System.DateTime> _dateUpdated;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the DateUpdated</param>
        /// </summary>
        public Nullable<System.DateTime> DateUpdated
        {
            get { return this._dateUpdated; }
            set
            {
                if (this._dateUpdated != value)
                {
                    this.IsDirty = true;
                    this._dateUpdated = value;
                    OnPropertyChanged(() => DateUpdated);
                    PropertyChangedCompleted(() => DateUpdated);
                }
            }
        }

        protected string _resource;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Resource</param>
        /// </summary>
        public string Resource
        {
            get { return this._resource; }
            set
            {
                if (this._resource != value)
                {
                    this.IsDirty = true;
                    this._resource = value;
                    OnPropertyChanged(() => Resource);
                    PropertyChangedCompleted(() => Resource);
                }
            }
        }

        #endregion

        #region Public Methods

        /// <summary>
        /// <param>Public Method</param>
        /// Method for set IsNew & IsDirty = false;
        /// </summary>
        public void EndUpdate()
        {
            this.IsNew = false;
            this.IsDirty = false;
        }

        /// <summary>
        /// Public Method
        /// <param>Method for set PropertyModel to Entity</param>
        /// </summary>
        public void ToEntity()
        {
            if (IsNew)
                this.base_Department.Id = this.Id;
            if (this.Name != null)
                this.base_Department.Name = this.Name.Trim();
            this.base_Department.ParentId = this.ParentId;
            if (this.TaxCodeId != null)
                this.base_Department.TaxCodeId = this.TaxCodeId.Trim();
            this.base_Department.Margin = this.Margin;
            this.base_Department.MarkUp = this.MarkUp;
            this.base_Department.LevelId = this.LevelId;
            this.base_Department.IsActived = this.IsActived;
            if (this.UserCreated != null)
                this.base_Department.UserCreated = this.UserCreated.Trim();
            if (this.UserUpdated != null)
                this.base_Department.UserUpdated = this.UserUpdated.Trim();
            this.base_Department.DateCreated = this.DateCreated;
            this.base_Department.DateUpdated = this.DateUpdated;
            if (this.Resource != null)
                this.base_Department.Resource = this.Resource.Trim();
        }

        /// <summary>
        /// Public Method
        /// <param>Method for set Entity to PropertyModel</param>
        /// </summary
        public void ToModel()
        {
            this._id = this.base_Department.Id;
            this._name = this.base_Department.Name;
            this._parentId = this.base_Department.ParentId;
            this._taxCodeId = this.base_Department.TaxCodeId;
            this._margin = this.base_Department.Margin;
            this._markUp = this.base_Department.MarkUp;
            this._levelId = this.base_Department.LevelId;
            this._isActived = this.base_Department.IsActived;
            this._userCreated = this.base_Department.UserCreated;
            this._userUpdated = this.base_Department.UserUpdated;
            this._dateCreated = this.base_Department.DateCreated;
            this._dateUpdated = this.base_Department.DateUpdated;
            this._resource = this.base_Department.Resource;
        }

        /// <summary>
        /// Public Method
        /// <param>Method for set Entity to PropertyModel</param>
        /// </summary
        public void ToModelAndRaise()
        {
            this.Id = this.base_Department.Id;
            this.Name = this.base_Department.Name;
            this.ParentId = this.base_Department.ParentId;
            this.TaxCodeId = this.base_Department.TaxCodeId;
            this.Margin = this.base_Department.Margin;
            this.MarkUp = this.base_Department.MarkUp;
            this.LevelId = this.base_Department.LevelId;
            this.IsActived = this.base_Department.IsActived;
            this.UserCreated = this.base_Department.UserCreated;
            this.UserUpdated = this.base_Department.UserUpdated;
            this.DateCreated = this.base_Department.DateCreated;
            this.DateUpdated = this.base_Department.DateUpdated;
            this.Resource = this.base_Department.Resource;
        }

        #endregion

        #region Custom Code


        #endregion

        #region IDataErrorInfo Members

        public string Error
        {
            get { throw new NotImplementedException(); }
        }

        public string this[string columnName]
        {
            get
            {
                string message = string.Empty;

                switch (columnName)
                {
                    case "Id":
                        break;
                    case "Name":
                        break;
                    case "ParentId":
                        break;
                    case "TaxCodeId":
                        break;
                    case "Margin":
                        break;
                    case "MarkUp":
                        break;
                    case "LevelId":
                        break;
                    case "IsActived":
                        break;
                    case "UserCreated":
                        break;
                    case "UserUpdated":
                        break;
                    case "DateCreated":
                        break;
                    case "DateUpdated":
                        break;
                }

                if (!string.IsNullOrWhiteSpace(message))
                    return message;
                return null;
            }
        }

        #endregion
    }
}

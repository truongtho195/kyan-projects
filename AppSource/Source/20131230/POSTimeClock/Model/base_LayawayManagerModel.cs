//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Linq;
using System.Linq.Expressions;
using CPC.Helper;
using CPC.Toolkit.Base;
using CPC.TimeClock.Database;

namespace CPC.TimeClock.Model
{
    /// <summary>
    /// Model for table base_LayawayManager
    /// </summary>
    [Serializable]
    public partial class base_LayawayManagerModel : ModelBase, IDataErrorInfo
    {
        #region Constructor

        // Default constructor
        public base_LayawayManagerModel()
        {
            this.IsNew = true;
            this.base_LayawayManager = new base_LayawayManager();
        }

        // Default constructor that set entity to field
        public base_LayawayManagerModel(base_LayawayManager base_layawaymanager, bool isRaiseProperties = false)
        {
            this.base_LayawayManager = base_layawaymanager;
            if (!isRaiseProperties)
                this.ToModel();
            else
                this.ToModelAndRaise();
            this.IsDirty = false;
        }

        #endregion

        #region Entity Properties

        public base_LayawayManager base_LayawayManager { get; private set; }

        #endregion

        #region Primitive Properties

        protected int _id;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Id</param>
        /// </summary>
        public int Id
        {
            get { return this._id; }
            set
            {
                if (this._id != value)
                {
                    this.IsDirty = true;
                    this._id = value;
                    OnPropertyChanged(() => Id);
                    PropertyChangedCompleted(() => Id);
                }
            }
        }

        protected string _name;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Name</param>
        /// </summary>
        public string Name
        {
            get { return this._name; }
            set
            {
                if (this._name != value)
                {
                    this.IsDirty = true;
                    this._name = value;
                    OnPropertyChanged(() => Name);
                    PropertyChangedCompleted(() => Name);
                }
            }
        }

        protected short _status;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Status</param>
        /// </summary>
        public short Status
        {
            get { return this._status; }
            set
            {
                if (this._status != value)
                {
                    this.IsDirty = true;
                    this._status = value;
                    OnPropertyChanged(() => Status);
                    PropertyChangedCompleted(() => Status);
                }
            }
        }

        protected System.DateTime _startDate;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the StartDate</param>
        /// </summary>
        public System.DateTime StartDate
        {
            get { return this._startDate; }
            set
            {
                if (this._startDate != value)
                {
                    this.IsDirty = true;
                    this._startDate = value;
                    OnPropertyChanged(() => StartDate);
                    PropertyChangedCompleted(() => StartDate);
                }
            }
        }

        protected System.DateTime _endDate;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the EndDate</param>
        /// </summary>
        public System.DateTime EndDate
        {
            get { return this._endDate; }
            set
            {
                if (this._endDate != value)
                {
                    this.IsDirty = true;
                    this._endDate = value;
                    OnPropertyChanged(() => EndDate);
                    PropertyChangedCompleted(() => EndDate);
                }
            }
        }

        protected decimal _openACFee;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the OpenACFee</param>
        /// </summary>
        public decimal OpenACFee
        {
            get { return this._openACFee; }
            set
            {
                if (this._openACFee != value)
                {
                    this.IsDirty = true;
                    this._openACFee = value;
                    OnPropertyChanged(() => OpenACFee);
                    PropertyChangedCompleted(() => OpenACFee);
                }
            }
        }

        protected decimal _minimumPurchase;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the MinimumPurchase</param>
        /// </summary>
        public decimal MinimumPurchase
        {
            get { return this._minimumPurchase; }
            set
            {
                if (this._minimumPurchase != value)
                {
                    this.IsDirty = true;
                    this._minimumPurchase = value;
                    OnPropertyChanged(() => MinimumPurchase);
                    PropertyChangedCompleted(() => MinimumPurchase);
                }
            }
        }

        protected bool _isPayOff;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the IsPayOff</param>
        /// </summary>
        public bool IsPayOff
        {
            get { return this._isPayOff; }
            set
            {
                if (this._isPayOff != value)
                {
                    this.IsDirty = true;
                    this._isPayOff = value;
                    OnPropertyChanged(() => IsPayOff);
                    PropertyChangedCompleted(() => IsPayOff);
                }
            }
        }

        protected Nullable<System.DateTime> _payOffBy;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the PayOffBy</param>
        /// </summary>
        public Nullable<System.DateTime> PayOffBy
        {
            get { return this._payOffBy; }
            set
            {
                if (this._payOffBy != value)
                {
                    this.IsDirty = true;
                    this._payOffBy = value;
                    OnPropertyChanged(() => PayOffBy);
                    PropertyChangedCompleted(() => PayOffBy);
                }
            }
        }

        protected bool _isPickup;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the IsPickup</param>
        /// </summary>
        public bool IsPickup
        {
            get { return this._isPickup; }
            set
            {
                if (this._isPickup != value)
                {
                    this.IsDirty = true;
                    this._isPickup = value;
                    OnPropertyChanged(() => IsPickup);
                    PropertyChangedCompleted(() => IsPickup);
                }
            }
        }

        protected Nullable<System.DateTime> _pickupBy;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the PickupBy</param>
        /// </summary>
        public Nullable<System.DateTime> PickupBy
        {
            get { return this._pickupBy; }
            set
            {
                if (this._pickupBy != value)
                {
                    this.IsDirty = true;
                    this._pickupBy = value;
                    OnPropertyChanged(() => PickupBy);
                    PropertyChangedCompleted(() => PickupBy);
                }
            }
        }

        protected decimal _depositAmount;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the DepositAmount</param>
        /// </summary>
        public decimal DepositAmount
        {
            get { return this._depositAmount; }
            set
            {
                if (this._depositAmount != value)
                {
                    this.IsDirty = true;
                    this._depositAmount = value;
                    OnPropertyChanged(() => DepositAmount);
                    PropertyChangedCompleted(() => DepositAmount);
                }
            }
        }

        protected decimal _depositPercent;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the DepositPercent</param>
        /// </summary>
        public decimal DepositPercent
        {
            get { return this._depositPercent; }
            set
            {
                if (this._depositPercent != value)
                {
                    this.IsDirty = true;
                    this._depositPercent = value;
                    OnPropertyChanged(() => DepositPercent);
                    PropertyChangedCompleted(() => DepositPercent);
                }
            }
        }

        protected decimal _layawayFee;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the LayawayFee</param>
        /// </summary>
        public decimal LayawayFee
        {
            get { return this._layawayFee; }
            set
            {
                if (this._layawayFee != value)
                {
                    this.IsDirty = true;
                    this._layawayFee = value;
                    OnPropertyChanged(() => LayawayFee);
                    PropertyChangedCompleted(() => LayawayFee);
                }
            }
        }

        protected short _layawayFeeUnit;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the LayawayFeeUnit</param>
        /// </summary>
        public short LayawayFeeUnit
        {
            get { return this._layawayFeeUnit; }
            set
            {
                if (this._layawayFeeUnit != value)
                {
                    this.IsDirty = true;
                    this._layawayFeeUnit = value;
                    OnPropertyChanged(() => LayawayFeeUnit);
                    PropertyChangedCompleted(() => LayawayFeeUnit);
                }
            }
        }

        protected decimal _otherFee;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the OtherFee</param>
        /// </summary>
        public decimal OtherFee
        {
            get { return this._otherFee; }
            set
            {
                if (this._otherFee != value)
                {
                    this.IsDirty = true;
                    this._otherFee = value;
                    OnPropertyChanged(() => OtherFee);
                    PropertyChangedCompleted(() => OtherFee);
                }
            }
        }

        protected short _otherFeeUnit;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the OtherFeeUnit</param>
        /// </summary>
        public short OtherFeeUnit
        {
            get { return this._otherFeeUnit; }
            set
            {
                if (this._otherFeeUnit != value)
                {
                    this.IsDirty = true;
                    this._otherFeeUnit = value;
                    OnPropertyChanged(() => OtherFeeUnit);
                    PropertyChangedCompleted(() => OtherFeeUnit);
                }
            }
        }

        protected decimal _cancellationFee;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the CancellationFee</param>
        /// </summary>
        public decimal CancellationFee
        {
            get { return this._cancellationFee; }
            set
            {
                if (this._cancellationFee != value)
                {
                    this.IsDirty = true;
                    this._cancellationFee = value;
                    OnPropertyChanged(() => CancellationFee);
                    PropertyChangedCompleted(() => CancellationFee);
                }
            }
        }

        protected short _cancellationUnit;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the CancellationUnit</param>
        /// </summary>
        public short CancellationUnit
        {
            get { return this._cancellationUnit; }
            set
            {
                if (this._cancellationUnit != value)
                {
                    this.IsDirty = true;
                    this._cancellationUnit = value;
                    OnPropertyChanged(() => CancellationUnit);
                    PropertyChangedCompleted(() => CancellationUnit);
                }
            }
        }

        protected bool _isNoCancelFee;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the IsNoCancelFee</param>
        /// </summary>
        public bool IsNoCancelFee
        {
            get { return this._isNoCancelFee; }
            set
            {
                if (this._isNoCancelFee != value)
                {
                    this.IsDirty = true;
                    this._isNoCancelFee = value;
                    OnPropertyChanged(() => IsNoCancelFee);
                    PropertyChangedCompleted(() => IsNoCancelFee);
                }
            }
        }

        protected short _cancelWithinDay;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the CancelWithinDay</param>
        /// </summary>
        public short CancelWithinDay
        {
            get { return this._cancelWithinDay; }
            set
            {
                if (this._cancelWithinDay != value)
                {
                    this.IsDirty = true;
                    this._cancelWithinDay = value;
                    OnPropertyChanged(() => CancelWithinDay);
                    PropertyChangedCompleted(() => CancelWithinDay);
                }
            }
        }

        protected short _paymentTerm;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the PaymentTerm</param>
        /// </summary>
        public short PaymentTerm
        {
            get { return this._paymentTerm; }
            set
            {
                if (this._paymentTerm != value)
                {
                    this.IsDirty = true;
                    this._paymentTerm = value;
                    OnPropertyChanged(() => PaymentTerm);
                    PropertyChangedCompleted(() => PaymentTerm);
                }
            }
        }

        protected Nullable<short> _paymentPeriod;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the PaymentPeriod</param>
        /// </summary>
        public Nullable<short> PaymentPeriod
        {
            get { return this._paymentPeriod; }
            set
            {
                if (this._paymentPeriod != value)
                {
                    this.IsDirty = true;
                    this._paymentPeriod = value;
                    OnPropertyChanged(() => PaymentPeriod);
                    PropertyChangedCompleted(() => PaymentPeriod);
                }
            }
        }

        protected System.DateTime _dateCreated;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the DateCreated</param>
        /// </summary>
        public System.DateTime DateCreated
        {
            get { return this._dateCreated; }
            set
            {
                if (this._dateCreated != value)
                {
                    this.IsDirty = true;
                    this._dateCreated = value;
                    OnPropertyChanged(() => DateCreated);
                    PropertyChangedCompleted(() => DateCreated);
                }
            }
        }

        protected string _userCreated;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the UserCreated</param>
        /// </summary>
        public string UserCreated
        {
            get { return this._userCreated; }
            set
            {
                if (this._userCreated != value)
                {
                    this.IsDirty = true;
                    this._userCreated = value;
                    OnPropertyChanged(() => UserCreated);
                    PropertyChangedCompleted(() => UserCreated);
                }
            }
        }

        protected System.DateTime _dateUpdated;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the DateUpdated</param>
        /// </summary>
        public System.DateTime DateUpdated
        {
            get { return this._dateUpdated; }
            set
            {
                if (this._dateUpdated != value)
                {
                    this.IsDirty = true;
                    this._dateUpdated = value;
                    OnPropertyChanged(() => DateUpdated);
                    PropertyChangedCompleted(() => DateUpdated);
                }
            }
        }

        protected string _userUpdated;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the UserUpdated</param>
        /// </summary>
        public string UserUpdated
        {
            get { return this._userUpdated; }
            set
            {
                if (this._userUpdated != value)
                {
                    this.IsDirty = true;
                    this._userUpdated = value;
                    OnPropertyChanged(() => UserUpdated);
                    PropertyChangedCompleted(() => UserUpdated);
                }
            }
        }

        protected System.Guid _resource;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the Resource</param>
        /// </summary>
        public System.Guid Resource
        {
            get { return this._resource; }
            set
            {
                if (this._resource != value)
                {
                    this.IsDirty = true;
                    this._resource = value;
                    OnPropertyChanged(() => Resource);
                    PropertyChangedCompleted(() => Resource);
                }
            }
        }

        protected string _reasonReActive;
        /// <summary>
        /// Property Model
        /// <param>Gets or sets the ReasonReActive</param>
        /// </summary>
        public string ReasonReActive
        {
            get { return this._reasonReActive; }
            set
            {
                if (this._reasonReActive != value)
                {
                    this.IsDirty = true;
                    this._reasonReActive = value;
                    OnPropertyChanged(() => ReasonReActive);
                    PropertyChangedCompleted(() => ReasonReActive);
                }
            }
        }

        #endregion

        #region Public Methods

        /// <summary>
        /// <param>Public Method</param>
        /// Method for set IsNew & IsDirty = false;
        /// </summary>
        public void EndUpdate()
        {
            this.IsNew = false;
            this.IsDirty = false;
        }

        /// <summary>
        /// Public Method
        /// <param>Method for set PropertyModel to Entity</param>
        /// </summary>
        public void ToEntity()
        {
            if (IsNew)
                this.base_LayawayManager.Id = this.Id;
            if (this.Name != null)
                this.base_LayawayManager.Name = this.Name.Trim();
            this.base_LayawayManager.Status = this.Status;
            this.base_LayawayManager.StartDate = this.StartDate;
            this.base_LayawayManager.EndDate = this.EndDate;
            this.base_LayawayManager.OpenACFee = this.OpenACFee;
            this.base_LayawayManager.MinimumPurchase = this.MinimumPurchase;
            this.base_LayawayManager.IsPayOff = this.IsPayOff;
            this.base_LayawayManager.PayOffBy = this.PayOffBy;
            this.base_LayawayManager.IsPickup = this.IsPickup;
            this.base_LayawayManager.PickupBy = this.PickupBy;
            this.base_LayawayManager.DepositAmount = this.DepositAmount;
            this.base_LayawayManager.DepositPercent = this.DepositPercent;
            this.base_LayawayManager.LayawayFee = this.LayawayFee;
            this.base_LayawayManager.LayawayFeeUnit = this.LayawayFeeUnit;
            this.base_LayawayManager.OtherFee = this.OtherFee;
            this.base_LayawayManager.OtherFeeUnit = this.OtherFeeUnit;
            this.base_LayawayManager.CancellationFee = this.CancellationFee;
            this.base_LayawayManager.CancellationUnit = this.CancellationUnit;
            this.base_LayawayManager.IsNoCancelFee = this.IsNoCancelFee;
            this.base_LayawayManager.CancelWithinDay = this.CancelWithinDay;
            this.base_LayawayManager.PaymentTerm = this.PaymentTerm;
            this.base_LayawayManager.PaymentPeriod = this.PaymentPeriod;
            this.base_LayawayManager.DateCreated = this.DateCreated;
            if (this.UserCreated != null)
                this.base_LayawayManager.UserCreated = this.UserCreated.Trim();
            this.base_LayawayManager.DateUpdated = this.DateUpdated;
            if (this.UserUpdated != null)
                this.base_LayawayManager.UserUpdated = this.UserUpdated.Trim();
            this.base_LayawayManager.Resource = this.Resource;
            if (this.ReasonReActive != null)
                this.base_LayawayManager.ReasonReActive = this.ReasonReActive.Trim();
        }

        /// <summary>
        /// Public Method
        /// <param>Method for set Entity to PropertyModel</param>
        /// </summary
        public void ToModel()
        {
            this._id = this.base_LayawayManager.Id;
            this._name = this.base_LayawayManager.Name;
            this._status = this.base_LayawayManager.Status;
            this._startDate = this.base_LayawayManager.StartDate;
            this._endDate = this.base_LayawayManager.EndDate;
            this._openACFee = this.base_LayawayManager.OpenACFee;
            this._minimumPurchase = this.base_LayawayManager.MinimumPurchase;
            this._isPayOff = this.base_LayawayManager.IsPayOff;
            this._payOffBy = this.base_LayawayManager.PayOffBy;
            this._isPickup = this.base_LayawayManager.IsPickup;
            this._pickupBy = this.base_LayawayManager.PickupBy;
            this._depositAmount = this.base_LayawayManager.DepositAmount;
            this._depositPercent = this.base_LayawayManager.DepositPercent;
            this._layawayFee = this.base_LayawayManager.LayawayFee;
            this._layawayFeeUnit = this.base_LayawayManager.LayawayFeeUnit;
            this._otherFee = this.base_LayawayManager.OtherFee;
            this._otherFeeUnit = this.base_LayawayManager.OtherFeeUnit;
            this._cancellationFee = this.base_LayawayManager.CancellationFee;
            this._cancellationUnit = this.base_LayawayManager.CancellationUnit;
            this._isNoCancelFee = this.base_LayawayManager.IsNoCancelFee;
            this._cancelWithinDay = this.base_LayawayManager.CancelWithinDay;
            this._paymentTerm = this.base_LayawayManager.PaymentTerm;
            this._paymentPeriod = this.base_LayawayManager.PaymentPeriod;
            this._dateCreated = this.base_LayawayManager.DateCreated;
            this._userCreated = this.base_LayawayManager.UserCreated;
            this._dateUpdated = this.base_LayawayManager.DateUpdated;
            this._userUpdated = this.base_LayawayManager.UserUpdated;
            this._resource = this.base_LayawayManager.Resource;
            this._reasonReActive = this.base_LayawayManager.ReasonReActive;
        }

        /// <summary>
        /// Public Method
        /// <param>Method for set Entity to PropertyModel</param>
        /// </summary
        public void ToModelAndRaise()
        {
            this.Id = this.base_LayawayManager.Id;
            this.Name = this.base_LayawayManager.Name;
            this.Status = this.base_LayawayManager.Status;
            this.StartDate = this.base_LayawayManager.StartDate;
            this.EndDate = this.base_LayawayManager.EndDate;
            this.OpenACFee = this.base_LayawayManager.OpenACFee;
            this.MinimumPurchase = this.base_LayawayManager.MinimumPurchase;
            this.IsPayOff = this.base_LayawayManager.IsPayOff;
            this.PayOffBy = this.base_LayawayManager.PayOffBy;
            this.IsPickup = this.base_LayawayManager.IsPickup;
            this.PickupBy = this.base_LayawayManager.PickupBy;
            this.DepositAmount = this.base_LayawayManager.DepositAmount;
            this.DepositPercent = this.base_LayawayManager.DepositPercent;
            this.LayawayFee = this.base_LayawayManager.LayawayFee;
            this.LayawayFeeUnit = this.base_LayawayManager.LayawayFeeUnit;
            this.OtherFee = this.base_LayawayManager.OtherFee;
            this.OtherFeeUnit = this.base_LayawayManager.OtherFeeUnit;
            this.CancellationFee = this.base_LayawayManager.CancellationFee;
            this.CancellationUnit = this.base_LayawayManager.CancellationUnit;
            this.IsNoCancelFee = this.base_LayawayManager.IsNoCancelFee;
            this.CancelWithinDay = this.base_LayawayManager.CancelWithinDay;
            this.PaymentTerm = this.base_LayawayManager.PaymentTerm;
            this.PaymentPeriod = this.base_LayawayManager.PaymentPeriod;
            this.DateCreated = this.base_LayawayManager.DateCreated;
            this.UserCreated = this.base_LayawayManager.UserCreated;
            this.DateUpdated = this.base_LayawayManager.DateUpdated;
            this.UserUpdated = this.base_LayawayManager.UserUpdated;
            this.Resource = this.base_LayawayManager.Resource;
            this.ReasonReActive = this.base_LayawayManager.ReasonReActive;
        }

        #endregion

        #region Custom Code


        #endregion

        #region IDataErrorInfo Members

        public string Error
        {
            get { throw new NotImplementedException(); }
        }

        public string this[string columnName]
        {
            get
            {
                string message = string.Empty;

                switch (columnName)
                {
                    case "Id":
                        break;
                    case "Name":
                        break;
                    case "Status":
                        break;
                    case "StartDate":
                        break;
                    case "EndDate":
                        break;
                    case "OpenACFee":
                        break;
                    case "MinimumPurchase":
                        break;
                    case "IsPayOff":
                        break;
                    case "PayOffBy":
                        break;
                    case "IsPickup":
                        break;
                    case "PickupBy":
                        break;
                    case "DepositAmount":
                        break;
                    case "DepositPercent":
                        break;
                    case "LayawayFee":
                        break;
                    case "LayawayFeeUnit":
                        break;
                    case "OtherFee":
                        break;
                    case "OtherFeeUnit":
                        break;
                    case "CancellationFee":
                        break;
                    case "CancellationUnit":
                        break;
                    case "IsNoCancelFee":
                        break;
                    case "CancelWithinDay":
                        break;
                    case "PaymentPeriod":
                        break;
                    case "DateCreated":
                        break;
                    case "UserCreated":
                        break;
                    case "DateUpdated":
                        break;
                    case "UserUpdated":
                        break;
                    case "Resource":
                        break;
                    case "ReasonReActive":
                        break;
                }

                if (!string.IsNullOrWhiteSpace(message))
                    return message;
                return null;
            }
        }

        #endregion
    }
}

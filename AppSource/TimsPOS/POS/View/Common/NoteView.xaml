<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Luna" x:Class="CPC.POS.View.NoteView"
             x:Name="UserControl"
             mc:Ignorable="d">
    <UserControl.Resources>
    	<DrawingBrush x:Key="ColorPicker"
    		Viewbox="0,0,50,50"
    		ViewboxUnits="Absolute">
    		<DrawingBrush.Drawing>
    			<DrawingGroup>
    				<DrawingGroup.Transform>
    					<MatrixTransform Matrix="1,0,0,1,5,5" />
    				</DrawingGroup.Transform>
    				<DrawingGroup>
    					<DrawingGroup.Transform>
    						<MatrixTransform Matrix="1,0,0,1,32,32" />
    					</DrawingGroup.Transform>
    					<GeometryDrawing Brush="#FF1F1FEA"
    						Geometry="M8,8 L0,8 0,0 8,0 z" />
    				</DrawingGroup>
    				<DrawingGroup>
    					<DrawingGroup.Transform>
    						<MatrixTransform Matrix="1,0,0,1,16,32" />
    					</DrawingGroup.Transform>
    					<GeometryDrawing Brush="#FF1F8AEA"
    						Geometry="M8,8 L0,8 0,0 8,0 z" />
    				</DrawingGroup>
    				<DrawingGroup>
    					<DrawingGroup.Transform>
    						<MatrixTransform Matrix="1,0,0,1,0,32" />
    					</DrawingGroup.Transform>
    					<GeometryDrawing Brush="#FF1FEAEA"
    						Geometry="M8,8 L0,8 0,0 8,0 z" />
    				</DrawingGroup>
    				<DrawingGroup>
    					<DrawingGroup.Transform>
    						<MatrixTransform Matrix="1,0,0,1,32,16" />
    					</DrawingGroup.Transform>
    					<GeometryDrawing Brush="#FF1FEA84"
    						Geometry="M8,8 L0,8 0,0 8,0 z" />
    				</DrawingGroup>
    				<DrawingGroup>
    					<DrawingGroup.Transform>
    						<MatrixTransform Matrix="1,0,0,1,16,16" />
    					</DrawingGroup.Transform>
    					<GeometryDrawing Brush="#FF1FEA1F"
    						Geometry="M8,8 L0,8 0,0 8,0 z" />
    				</DrawingGroup>
    				<DrawingGroup>
    					<DrawingGroup.Transform>
    						<MatrixTransform Matrix="1,0,0,1,0,16" />
    					</DrawingGroup.Transform>
    					<GeometryDrawing Brush="#FF88EA1F"
    						Geometry="M8,8 L0,8 0,0 8,0 z" />
    				</DrawingGroup>
    				<DrawingGroup>
    					<DrawingGroup.Transform>
    						<MatrixTransform Matrix="1,0,0,1,32,0" />
    					</DrawingGroup.Transform>
    					<GeometryDrawing Brush="#FFEAEA1F"
    						Geometry="M8,8 L0,8 0,0 8,0 z" />
    				</DrawingGroup>
    				<DrawingGroup>
    					<DrawingGroup.Transform>
    						<MatrixTransform Matrix="1,0,0,1,16,0" />
    					</DrawingGroup.Transform>
    					<GeometryDrawing Brush="#FFEA841F"
    						Geometry="M8,8 L0,8 0,0 8,0 z" />
    				</DrawingGroup>
    				<GeometryDrawing Brush="#FFEC1C24"
    					Geometry="M8,8 L0,8 0,0 8,0 z" />
    			</DrawingGroup>
    		</DrawingBrush.Drawing>
    	</DrawingBrush>
    	<Style x:Key="ColorPickerStyle" TargetType="{x:Type xctk:ColorPicker}">
    		<Setter Property="BorderBrush">
    			<Setter.Value>
    				<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    					<GradientStop Color="#FFA3AEB9" Offset="0"/>
    					<GradientStop Color="#FF8399A9" Offset="0.375"/>
    					<GradientStop Color="#FF718597" Offset="0.375"/>
    					<GradientStop Color="#FF617584" Offset="1"/>
    				</LinearGradientBrush>
    			</Setter.Value>
    		</Setter>
    		<Setter Property="BorderThickness" Value="1"/>
    		<Setter Property="ButtonStyle">
    			<Setter.Value>
    				<Style TargetType="{x:Type ToggleButton}">
    					<Setter Property="Template">
    						<Setter.Value>
    							<ControlTemplate TargetType="{x:Type ToggleButton}">
    								<Grid SnapsToDevicePixels="True">
    									<Grid>
    										<Grid.ColumnDefinitions>
    											<ColumnDefinition Width="*"/>
    											<ColumnDefinition Width="Auto"/>
    										</Grid.ColumnDefinitions>
    										<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
    											<ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
    										</Border>
    										<ToggleButton Content="ToggleButton" d:LayoutOverrides="Height" Grid.Column="1" Visibility="Visible" Width="17" Style="{DynamicResource ToggleButtonStyle}"/>
    										<xctk:ButtonChrome x:Name="ToggleButtonChrome" Grid.Column="1" 
    											RenderMouseOver="{TemplateBinding IsMouseOver}" 
    											RenderPressed="{TemplateBinding IsPressed}" 
    											RenderChecked="{Binding IsOpen, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type xctk:ColorPicker}}}" 
    											RenderEnabled="{Binding IsEnabled, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type xctk:ColorPicker}}}" 
    											Background="{DynamicResource ColorPicker}" 
    											BorderBrush="White" Visibility="Visible">
    											<Grid x:Name="arrowGlyph" Grid.Column="1" IsHitTestVisible="False" Margin="5">
    												<Path x:Name="Arrow" Data="M0,1C0,1 0,0 0,0 0,0 3,0 3,0 3,0 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 7,0 7,0 7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1z" Fill="Black" Height="4" Width="7" Opacity="0"/>
    											</Grid>
    										</xctk:ButtonChrome>
    									</Grid>
    								</Grid>
    								<ControlTemplate.Triggers>
    									<Trigger Property="IsEnabled" Value="False">
    										<Setter Property="Fill" TargetName="Arrow" Value="#FFAFAFAF"/>
    									</Trigger>
    								</ControlTemplate.Triggers>
    							</ControlTemplate>
    						</Setter.Value>
    					</Setter>
    				</Style>
    			</Setter.Value>
    		</Setter>
    		<Setter Property="Focusable" Value="False"/>
    		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
    		<Setter Property="VerticalContentAlignment" Value="Center"/>
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type xctk:ColorPicker}">
    					<Grid>
    						<ToggleButton x:Name="PART_ColorPickerToggleButton" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsTabStop="True" IsChecked="{Binding IsOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" MinHeight="22" Padding="{TemplateBinding Padding}" Style="{TemplateBinding ButtonStyle}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
    							<ToggleButton.IsHitTestVisible>
    								<Binding Path="IsOpen" RelativeSource="{RelativeSource TemplatedParent}">
    									<Binding.Converter>
    										<xctk:InverseBoolConverter/>
    									</Binding.Converter>
    								</Binding>
    							</ToggleButton.IsHitTestVisible>
    							<Grid Margin="2">
    								<Border x:Name="ColorOnly" Visibility="Collapsed">
    									<Border.Style>
    										<Style TargetType="{x:Type Border}">
    											<Setter Property="Background">
    												<Setter.Value>
    													<Binding Path="SelectedColor" RelativeSource="{RelativeSource TemplatedParent}">
    														<Binding.Converter>
    															<xctk:ColorToSolidColorBrushConverter/>
    														</Binding.Converter>
    													</Binding>
    												</Setter.Value>
    											</Setter>
    											<Style.Triggers>
    												<DataTrigger Binding="{Binding SelectedColor, RelativeSource={RelativeSource TemplatedParent}}" Value="Transparent">
    													<Setter Property="Background">
    														<Setter.Value>
    															<DrawingBrush TileMode="Tile" Viewport="0,0,10,10" ViewportUnits="Absolute">
    																<DrawingBrush.Drawing>
    																	<DrawingGroup>
    																		<GeometryDrawing Brush="White">
    																			<GeometryDrawing.Geometry>
    																				<RectangleGeometry Rect="0,0,100,100"/>
    																			</GeometryDrawing.Geometry>
    																		</GeometryDrawing>
    																		<GeometryDrawing Brush="LightGray">
    																			<GeometryDrawing.Geometry>
    																				<GeometryGroup>
    																					<RectangleGeometry Rect="0,0,50,50"/>
    																					<RectangleGeometry Rect="50,50,50,50"/>
    																				</GeometryGroup>
    																			</GeometryDrawing.Geometry>
    																		</GeometryDrawing>
    																	</DrawingGroup>
    																</DrawingBrush.Drawing>
    															</DrawingBrush>
    														</Setter.Value>
    													</Setter>
    												</DataTrigger>
    											</Style.Triggers>
    										</Style>
    									</Border.Style>
    								</Border>
    								<Border x:Name="ColorAndName" Background="White" Visibility="Hidden">
    									<StackPanel Orientation="Horizontal">
    										<Border BorderBrush="#FFC9CACA" BorderThickness="1" HorizontalAlignment="Left" Margin="2,1,4,1" Width="20">
    											<Border.Style>
    												<Style TargetType="{x:Type Border}">
    													<Setter Property="Background">
    														<Setter.Value>
    															<Binding Path="SelectedColor" RelativeSource="{RelativeSource TemplatedParent}">
    																<Binding.Converter>
    																	<xctk:ColorToSolidColorBrushConverter/>
    																</Binding.Converter>
    															</Binding>
    														</Setter.Value>
    													</Setter>
    													<Style.Triggers>
    														<DataTrigger Binding="{Binding SelectedColor, RelativeSource={RelativeSource TemplatedParent}}" Value="Transparent">
    															<Setter Property="Background">
    																<Setter.Value>
    																	<DrawingBrush TileMode="Tile" Viewport="0,0,10,10" ViewportUnits="Absolute">
    																		<DrawingBrush.Drawing>
    																			<DrawingGroup>
    																				<GeometryDrawing Brush="White">
    																					<GeometryDrawing.Geometry>
    																						<RectangleGeometry Rect="0,0,100,100"/>
    																					</GeometryDrawing.Geometry>
    																				</GeometryDrawing>
    																				<GeometryDrawing Brush="LightGray">
    																					<GeometryDrawing.Geometry>
    																						<GeometryGroup>
    																							<RectangleGeometry Rect="0,0,50,50"/>
    																							<RectangleGeometry Rect="50,50,50,50"/>
    																						</GeometryGroup>
    																					</GeometryDrawing.Geometry>
    																				</GeometryDrawing>
    																			</DrawingGroup>
    																		</DrawingBrush.Drawing>
    																	</DrawingBrush>
    																</Setter.Value>
    															</Setter>
    														</DataTrigger>
    													</Style.Triggers>
    												</Style>
    											</Border.Style>
    										</Border>
    										<TextBlock Text="{Binding SelectedColorText, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center"/>
    									</StackPanel>
    								</Border>
    							</Grid>
    						</ToggleButton>
    						<Popup x:Name="PART_ColorPickerPalettePopup" AllowsTransparency="True" Focusable="False" HorizontalOffset="1" IsOpen="{Binding IsChecked, ElementName=PART_ColorPickerToggleButton}" PopupAnimation="Slide" StaysOpen="False" VerticalOffset="1" VerticalAlignment="Bottom">
    							<Border BorderThickness="1" Padding="3">
    								<Border.BorderBrush>
    									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
    										<GradientStop Color="#FFA3AEB9" Offset="0"/>
    										<GradientStop Color="#FF8399A9" Offset="0.375"/>
    										<GradientStop Color="#FF718597" Offset="0.375"/>
    										<GradientStop Color="#FF617584" Offset="1"/>
    									</LinearGradientBrush>
    								</Border.BorderBrush>
    								<Border.Background>
    									<LinearGradientBrush EndPoint="0,1" StartPoint="0,0">
    										<GradientStop Color="White" Offset="0"/>
    										<GradientStop Color="#FFE8EBED" Offset="1"/>
    									</LinearGradientBrush>
    								</Border.Background>
    								<Grid>
    									<Grid.RowDefinitions>
    										<RowDefinition Height="Auto"/>
    										<RowDefinition/>
    										<RowDefinition Height="Auto"/>
    									</Grid.RowDefinitions>
    									<Grid x:Name="_gridStandardColorsHost" Margin="4">
    										<Grid.RowDefinitions>
    											<RowDefinition Height="Auto"/>
    											<RowDefinition Height="Auto"/>
    											<RowDefinition Height="Auto"/>
    											<RowDefinition Height="Auto"/>
    										</Grid.RowDefinitions>
    										<Grid Grid.Row="1">
    											<Grid.Visibility>
    												<TemplateBinding Property="ShowAvailableColors">
    													<TemplateBinding.Converter>
    														<BooleanToVisibilityConverter/>
    													</TemplateBinding.Converter>
    												</TemplateBinding>
    											</Grid.Visibility>
    											<Grid>
    												<Grid.RowDefinitions>
    													<RowDefinition Height="Auto"/>
    													<RowDefinition/>
    												</Grid.RowDefinitions>
    												<TextBlock Background="AliceBlue" Margin="0,0,0,1" Padding="2" Text="{TemplateBinding AvailableColorsHeader}"/>
    												<ListBox x:Name="PART_AvailableColors" Grid.Row="1">
    													<ListBox.Style>
    														<Style TargetType="{x:Type ListBox}">
    															<Setter Property="Background" Value="Transparent"/>
    															<Setter Property="BorderThickness" Value="0"/>
    															<Setter Property="ItemsPanel">
    																<Setter.Value>
    																	<ItemsPanelTemplate>
    																		<WrapPanel IsItemsHost="True" Width="200"/>
    																	</ItemsPanelTemplate>
    																</Setter.Value>
    															</Setter>
    															<Setter Property="ItemContainerStyle">
    																<Setter.Value>
    																	<Style TargetType="{x:Type ListBoxItem}">
    																		<Setter Property="ToolTip" Value="{Binding Name}"/>
    																		<Setter Property="Template">
    																			<Setter.Value>
    																				<ControlTemplate TargetType="{x:Type ListBoxItem}">
    																					<Grid ToolTip="{Binding Name}">
    																						<ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
    																						<Border x:Name="_outerBorder" BorderBrush="Transparent" BorderThickness="1" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
    																							<Border x:Name="_innerBorder" BorderBrush="Transparent" BorderThickness="1" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
    																						</Border>
    																					</Grid>
    																					<ControlTemplate.Triggers>
    																						<Trigger Property="IsMouseOver" Value="True">
    																							<Setter Property="BorderBrush" TargetName="_outerBorder" Value="Red"/>
    																							<Setter Property="BorderBrush" TargetName="_innerBorder" Value="Yellow"/>
    																						</Trigger>
    																						<Trigger Property="IsSelected" Value="True">
    																							<Setter Property="BorderBrush" TargetName="_outerBorder" Value="Red"/>
    																							<Setter Property="BorderBrush" TargetName="_innerBorder" Value="Yellow"/>
    																						</Trigger>
    																					</ControlTemplate.Triggers>
    																				</ControlTemplate>
    																			</Setter.Value>
    																		</Setter>
    																	</Style>
    																</Setter.Value>
    															</Setter>
    															<Setter Property="ItemTemplate">
    																<Setter.Value>
    																	<DataTemplate>
    																		<Grid>
    																			<Border BorderBrush="#FFC9CACA" BorderThickness="1" Margin="2">
    																				<Rectangle Height="14" Width="14">
    																					<Rectangle.Style>
    																						<Style TargetType="{x:Type Rectangle}">
    																							<Setter Property="Fill">
    																								<Setter.Value>
    																									<Binding Path="Color">
    																										<Binding.Converter>
    																											<xctk:ColorToSolidColorBrushConverter/>
    																										</Binding.Converter>
    																									</Binding>
    																								</Setter.Value>
    																							</Setter>
    																							<Style.Triggers>
    																								<DataTrigger Binding="{Binding Name}" Value="Transparent">
    																									<Setter Property="Fill">
    																										<Setter.Value>
    																											<DrawingBrush TileMode="Tile" Viewport="0,0,10,10" ViewportUnits="Absolute">
    																												<DrawingBrush.Drawing>
    																													<DrawingGroup>
    																														<GeometryDrawing Brush="White">
    																															<GeometryDrawing.Geometry>
    																																<RectangleGeometry Rect="0,0,100,100"/>
    																															</GeometryDrawing.Geometry>
    																														</GeometryDrawing>
    																														<GeometryDrawing Brush="LightGray">
    																															<GeometryDrawing.Geometry>
    																																<GeometryGroup>
    																																	<RectangleGeometry Rect="0,0,50,50"/>
    																																	<RectangleGeometry Rect="50,50,50,50"/>
    																																</GeometryGroup>
    																															</GeometryDrawing.Geometry>
    																														</GeometryDrawing>
    																													</DrawingGroup>
    																												</DrawingBrush.Drawing>
    																											</DrawingBrush>
    																										</Setter.Value>
    																									</Setter>
    																								</DataTrigger>
    																							</Style.Triggers>
    																						</Style>
    																					</Rectangle.Style>
    																				</Rectangle>
    																			</Border>
    																		</Grid>
    																	</DataTemplate>
    																</Setter.Value>
    															</Setter>
    															<Setter Property="SelectionMode" Value="Single"/>
    														</Style>
    													</ListBox.Style>
    												</ListBox>
    											</Grid>
    										</Grid>
    										<Grid Grid.Row="2">
    											<Grid.Visibility>
    												<TemplateBinding Property="ShowStandardColors">
    													<TemplateBinding.Converter>
    														<BooleanToVisibilityConverter/>
    													</TemplateBinding.Converter>
    												</TemplateBinding>
    											</Grid.Visibility>
    											<Grid>
    												<Grid.RowDefinitions>
    													<RowDefinition Height="Auto"/>
    													<RowDefinition Height="Auto"/>
    												</Grid.RowDefinitions>
    												<TextBlock Background="AliceBlue" Margin="0,1" Padding="2" Text="{TemplateBinding StandardColorsHeader}"/>
    												<ListBox x:Name="PART_StandardColors" Grid.Row="1">
    													<ListBox.Style>
    														<Style TargetType="{x:Type ListBox}">
    															<Setter Property="Background" Value="Transparent"/>
    															<Setter Property="BorderThickness" Value="0"/>
    															<Setter Property="ItemsPanel">
    																<Setter.Value>
    																	<ItemsPanelTemplate>
    																		<WrapPanel IsItemsHost="True" Width="200"/>
    																	</ItemsPanelTemplate>
    																</Setter.Value>
    															</Setter>
    															<Setter Property="ItemContainerStyle">
    																<Setter.Value>
    																	<Style TargetType="{x:Type ListBoxItem}">
    																		<Setter Property="ToolTip" Value="{Binding Name}"/>
    																		<Setter Property="Template">
    																			<Setter.Value>
    																				<ControlTemplate TargetType="{x:Type ListBoxItem}">
    																					<Grid ToolTip="{Binding Name}">
    																						<ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
    																						<Border x:Name="_outerBorder" BorderBrush="Transparent" BorderThickness="1" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
    																							<Border x:Name="_innerBorder" BorderBrush="Transparent" BorderThickness="1" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
    																						</Border>
    																					</Grid>
    																					<ControlTemplate.Triggers>
    																						<Trigger Property="IsMouseOver" Value="True">
    																							<Setter Property="BorderBrush" TargetName="_outerBorder" Value="Red"/>
    																							<Setter Property="BorderBrush" TargetName="_innerBorder" Value="Yellow"/>
    																						</Trigger>
    																						<Trigger Property="IsSelected" Value="True">
    																							<Setter Property="BorderBrush" TargetName="_outerBorder" Value="Red"/>
    																							<Setter Property="BorderBrush" TargetName="_innerBorder" Value="Yellow"/>
    																						</Trigger>
    																					</ControlTemplate.Triggers>
    																				</ControlTemplate>
    																			</Setter.Value>
    																		</Setter>
    																	</Style>
    																</Setter.Value>
    															</Setter>
    															<Setter Property="ItemTemplate">
    																<Setter.Value>
    																	<DataTemplate>
    																		<Grid>
    																			<Border BorderBrush="#FFC9CACA" BorderThickness="1" Margin="2">
    																				<Rectangle Height="14" Width="14">
    																					<Rectangle.Style>
    																						<Style TargetType="{x:Type Rectangle}">
    																							<Setter Property="Fill">
    																								<Setter.Value>
    																									<Binding Path="Color">
    																										<Binding.Converter>
    																											<xctk:ColorToSolidColorBrushConverter/>
    																										</Binding.Converter>
    																									</Binding>
    																								</Setter.Value>
    																							</Setter>
    																							<Style.Triggers>
    																								<DataTrigger Binding="{Binding Name}" Value="Transparent">
    																									<Setter Property="Fill">
    																										<Setter.Value>
    																											<DrawingBrush TileMode="Tile" Viewport="0,0,10,10" ViewportUnits="Absolute">
    																												<DrawingBrush.Drawing>
    																													<DrawingGroup>
    																														<GeometryDrawing Brush="White">
    																															<GeometryDrawing.Geometry>
    																																<RectangleGeometry Rect="0,0,100,100"/>
    																															</GeometryDrawing.Geometry>
    																														</GeometryDrawing>
    																														<GeometryDrawing Brush="LightGray">
    																															<GeometryDrawing.Geometry>
    																																<GeometryGroup>
    																																	<RectangleGeometry Rect="0,0,50,50"/>
    																																	<RectangleGeometry Rect="50,50,50,50"/>
    																																</GeometryGroup>
    																															</GeometryDrawing.Geometry>
    																														</GeometryDrawing>
    																													</DrawingGroup>
    																												</DrawingBrush.Drawing>
    																											</DrawingBrush>
    																										</Setter.Value>
    																									</Setter>
    																								</DataTrigger>
    																							</Style.Triggers>
    																						</Style>
    																					</Rectangle.Style>
    																				</Rectangle>
    																			</Border>
    																		</Grid>
    																	</DataTemplate>
    																</Setter.Value>
    															</Setter>
    															<Setter Property="SelectionMode" Value="Single"/>
    														</Style>
    													</ListBox.Style>
    												</ListBox>
    											</Grid>
    										</Grid>
    										<Grid Margin="0,1" Grid.Row="3">
    											<Grid.Visibility>
    												<TemplateBinding Property="ShowRecentColors">
    													<TemplateBinding.Converter>
    														<BooleanToVisibilityConverter/>
    													</TemplateBinding.Converter>
    												</TemplateBinding>
    											</Grid.Visibility>
    											<Grid>
    												<Grid.RowDefinitions>
    													<RowDefinition Height="Auto"/>
    													<RowDefinition Height="Auto"/>
    												</Grid.RowDefinitions>
    												<TextBlock Background="AliceBlue" Margin="0,1" Padding="2" Text="{TemplateBinding RecentColorsHeader}"/>
    												<ListBox x:Name="PART_RecentColors" Grid.Row="1">
    													<ListBox.Style>
    														<Style TargetType="{x:Type ListBox}">
    															<Setter Property="Background" Value="Transparent"/>
    															<Setter Property="BorderThickness" Value="0"/>
    															<Setter Property="ItemsPanel">
    																<Setter.Value>
    																	<ItemsPanelTemplate>
    																		<WrapPanel IsItemsHost="True" Width="200"/>
    																	</ItemsPanelTemplate>
    																</Setter.Value>
    															</Setter>
    															<Setter Property="ItemContainerStyle">
    																<Setter.Value>
    																	<Style TargetType="{x:Type ListBoxItem}">
    																		<Setter Property="ToolTip" Value="{Binding Name}"/>
    																		<Setter Property="Template">
    																			<Setter.Value>
    																				<ControlTemplate TargetType="{x:Type ListBoxItem}">
    																					<Grid ToolTip="{Binding Name}">
    																						<ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
    																						<Border x:Name="_outerBorder" BorderBrush="Transparent" BorderThickness="1" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
    																							<Border x:Name="_innerBorder" BorderBrush="Transparent" BorderThickness="1" Background="Transparent" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
    																						</Border>
    																					</Grid>
    																					<ControlTemplate.Triggers>
    																						<Trigger Property="IsMouseOver" Value="True">
    																							<Setter Property="BorderBrush" TargetName="_outerBorder" Value="Red"/>
    																							<Setter Property="BorderBrush" TargetName="_innerBorder" Value="Yellow"/>
    																						</Trigger>
    																						<Trigger Property="IsSelected" Value="True">
    																							<Setter Property="BorderBrush" TargetName="_outerBorder" Value="Red"/>
    																							<Setter Property="BorderBrush" TargetName="_innerBorder" Value="Yellow"/>
    																						</Trigger>
    																					</ControlTemplate.Triggers>
    																				</ControlTemplate>
    																			</Setter.Value>
    																		</Setter>
    																	</Style>
    																</Setter.Value>
    															</Setter>
    															<Setter Property="ItemTemplate">
    																<Setter.Value>
    																	<DataTemplate>
    																		<Grid>
    																			<Border BorderBrush="#FFC9CACA" BorderThickness="1" Margin="2">
    																				<Rectangle Height="14" Width="14">
    																					<Rectangle.Style>
    																						<Style TargetType="{x:Type Rectangle}">
    																							<Setter Property="Fill">
    																								<Setter.Value>
    																									<Binding Path="Color">
    																										<Binding.Converter>
    																											<xctk:ColorToSolidColorBrushConverter/>
    																										</Binding.Converter>
    																									</Binding>
    																								</Setter.Value>
    																							</Setter>
    																							<Style.Triggers>
    																								<DataTrigger Binding="{Binding Name}" Value="Transparent">
    																									<Setter Property="Fill">
    																										<Setter.Value>
    																											<DrawingBrush TileMode="Tile" Viewport="0,0,10,10" ViewportUnits="Absolute">
    																												<DrawingBrush.Drawing>
    																													<DrawingGroup>
    																														<GeometryDrawing Brush="White">
    																															<GeometryDrawing.Geometry>
    																																<RectangleGeometry Rect="0,0,100,100"/>
    																															</GeometryDrawing.Geometry>
    																														</GeometryDrawing>
    																														<GeometryDrawing Brush="LightGray">
    																															<GeometryDrawing.Geometry>
    																																<GeometryGroup>
    																																	<RectangleGeometry Rect="0,0,50,50"/>
    																																	<RectangleGeometry Rect="50,50,50,50"/>
    																																</GeometryGroup>
    																															</GeometryDrawing.Geometry>
    																														</GeometryDrawing>
    																													</DrawingGroup>
    																												</DrawingBrush.Drawing>
    																											</DrawingBrush>
    																										</Setter.Value>
    																									</Setter>
    																								</DataTrigger>
    																							</Style.Triggers>
    																						</Style>
    																					</Rectangle.Style>
    																				</Rectangle>
    																			</Border>
    																		</Grid>
    																	</DataTemplate>
    																</Setter.Value>
    															</Setter>
    															<Setter Property="SelectionMode" Value="Single"/>
    														</Style>
    													</ListBox.Style>
    												</ListBox>
    											</Grid>
    										</Grid>
    									</Grid>
    									<Grid x:Name="_colorCanvasHost" Visibility="Collapsed">
    										<xctk:ColorCanvas x:Name="PART_ColorCanvas" BorderThickness="0" Background="Transparent" SelectedColor="{Binding SelectedColor, RelativeSource={RelativeSource TemplatedParent}}" UsingAlphaChannel="{Binding UsingAlphaChannel, RelativeSource={RelativeSource TemplatedParent}}"/>
    									</Grid>
    									<Separator HorizontalAlignment="Stretch" Margin="5,0" Grid.Row="1"/>
    									<ToggleButton x:Name="_colorMode" Content="Advanced" Margin="5" Grid.Row="2">
    										<ToggleButton.Visibility>
    											<TemplateBinding Property="ShowAdvancedButton">
    												<TemplateBinding.Converter>
    													<BooleanToVisibilityConverter/>
    												</TemplateBinding.Converter>
    											</TemplateBinding>
    										</ToggleButton.Visibility>
    									</ToggleButton>
    								</Grid>
    							</Border>
    						</Popup>
    					</Grid>
    					<ControlTemplate.Triggers>
    						<Trigger Property="DisplayColorAndName" Value="True">
    							<Setter Property="Visibility" TargetName="ColorOnly" Value="Collapsed"/>
    							<Setter Property="Visibility" TargetName="ColorAndName" Value="Visible"/>
    						</Trigger>
    						<Trigger Property="IsChecked" SourceName="_colorMode" Value="True">
    							<Setter Property="Content" TargetName="_colorMode" Value="Standard"/>
    							<Setter Property="Visibility" TargetName="_colorCanvasHost" Value="Visible"/>
    							<Setter Property="Visibility" TargetName="_gridStandardColorsHost" Value="Collapsed"/>
    						</Trigger>
    					</ControlTemplate.Triggers>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    		<Setter Property="Background" Value="{x:Null}"/>
    	</Style>
    	<LinearGradientBrush x:Key="ButtonNormalBackgroundFill" EndPoint="0.5,1" StartPoint="0.5,0">
    		<GradientStop Color="#FFFFFFFF" Offset="0"/>
    		<GradientStop Color="#FFF0F0EA" Offset="0.9"/>
    	</LinearGradientBrush>
    	<SolidColorBrush x:Key="ButtonBorder" Color="#FF003C74"/>
    	<Style x:Key="ToggleButtonStyle" TargetType="{x:Type ToggleButton}">
    		<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
    		<Setter Property="Background" Value="{StaticResource ButtonNormalBackgroundFill}"/>
    		<Setter Property="BorderBrush" Value="{StaticResource ButtonBorder}"/>
    		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
    		<Setter Property="HorizontalContentAlignment" Value="Center"/>
    		<Setter Property="VerticalContentAlignment" Value="Center"/>
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type ToggleButton}">
    					<Grid Background="{DynamicResource ColorPicker}" >
    						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Collapsed"/>
    					</Grid>
    					<ControlTemplate.Triggers>
    						<Trigger Property="IsKeyboardFocused" Value="true"/>
    						<Trigger Property="IsChecked" Value="true"/>
    						<Trigger Property="IsEnabled" Value="false">
    							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
    						</Trigger>
    					</ControlTemplate.Triggers>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    		<Setter Property="IsChecked" Value="{Binding IsOpen, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type xctk:ColorPicker}}}"/>
    	</Style>
    	<Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
    		<Setter Property="FocusVisualStyle"
    			Value="{StaticResource ComboBoxFocusVisual}" />
    		<Setter Property="Foreground"
    			Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
    		<Setter Property="Background"
    			Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
    		<Setter Property="BorderBrush"
    			Value="Black" />
    		<Setter Property="BorderThickness"
    			Value="1" />
    		<Setter Property="Padding"
    			Value="1" />
    		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
    			Value="Auto" />
    		<Setter Property="ScrollViewer.VerticalScrollBarVisibility"
    			Value="Auto" />
    		<Setter Property="ScrollViewer.CanContentScroll"
    			Value="true" />
    		<Setter Property="ScrollViewer.PanningMode"
    			Value="Both" />
    		<Setter Property="Stylus.IsFlicksEnabled"
    			Value="False" />
    		<Setter Property="VerticalContentAlignment"
    			Value="Center" />
    		<Setter Property="Template">
    			<Setter.Value>
    				<ControlTemplate TargetType="{x:Type ComboBox}">
    					<Grid SnapsToDevicePixels="true">
    						<Border x:Name="Bd"
    							BorderBrush="{TemplateBinding BorderBrush}"
    							BorderThickness="{TemplateBinding BorderThickness}"
    							Background="{TemplateBinding Background}"
    							Padding="1">
    							<Grid Grid.IsSharedSizeScope="true">
    								<Grid.ColumnDefinitions>
    									<ColumnDefinition Width="1" />
    									<ColumnDefinition Width="*" />
    									<ColumnDefinition SharedSizeGroup="ComboBoxButton"
    										Width="Auto" />
    								</Grid.ColumnDefinitions>
    								<Border x:Name="SelectedItemBorder"
    									Grid.ColumnSpan="2"
    									Margin="{TemplateBinding Padding}" />
    								<ContentPresenter ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
    									ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
    									Content="{TemplateBinding SelectionBoxItem}"
    									Grid.Column="1"
    									ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
    									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
    									Margin="{TemplateBinding Padding}"
    									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
    									VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
    								<ToggleButton Grid.ColumnSpan="3"
    									IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
    									Style="{StaticResource ComboBoxTransparentButtonStyle}" />
    							</Grid>
    						</Border>
    					</Grid>
    					<ControlTemplate.Triggers>
    						<MultiTrigger>
    							<MultiTrigger.Conditions>
    								<Condition Property="IsSelectionBoxHighlighted"
    									Value="true" />
    								<Condition Property="IsDropDownOpen"
    									Value="false" />
    							</MultiTrigger.Conditions>
    							<Setter Property="Foreground"
    								Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
    						</MultiTrigger>
    						<Trigger Property="IsSelectionBoxHighlighted"
    							Value="true">
    							<Setter Property="Background"
    								TargetName="SelectedItemBorder"
    								Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
    						</Trigger>
    						<Trigger Property="HasItems"
    							Value="false"/>
    						<Trigger Property="IsEnabled"
    							Value="false">
    							<Setter Property="Foreground"
    								Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
    							<Setter Property="Background"
    								TargetName="Bd"
    								Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
    						</Trigger>
    						<Trigger Property="IsGrouping"
    							Value="true">
    							<Setter Property="ScrollViewer.CanContentScroll"
    								Value="false" />
    						</Trigger>
    						<Trigger Property="IsFocused"
    							Value="True">
    							<Setter Property="Background"
    								Value="#FFFFF500" />
    						</Trigger>
    						<Trigger Property="Validation.HasError"
    							Value="True">
    							<Setter Property="BorderBrush"
    								TargetName="Bd"
    								Value="#FFFF0000" /> <!--#FFFF0000-->
    						</Trigger>
    					</ControlTemplate.Triggers>
    				</ControlTemplate>
    			</Setter.Value>
    		</Setter>
    		<Setter Property="FontSize"
    			Value="11" />
    		<Setter Property="Validation.ErrorTemplate"
    			Value="{x:Null}" />
    		<Style.Triggers>
    			<Trigger Property="IsEditable"
    				Value="true">
    				<Setter Property="IsTabStop"
    					Value="false" />
    				<Setter Property="Padding"
    					Value="0,1" />
    				<Setter Property="Template"
    					Value="{StaticResource ComboBoxEditableTemplate}" />
    			</Trigger>
    			<Trigger Property="IsVisible"
    				Value="false">
    				<Setter Property="Validation.ErrorTemplate"
    					Value="{x:Null}" />
    			</Trigger>
    			<Trigger Property="IsVisible"
    				Value="true">
    				<Setter Property="Validation.ErrorTemplate"
    					Value="{DynamicResource DataErrorTemplate}" />
    			</Trigger>
    		</Style.Triggers>
    	</Style>
    </UserControl.Resources>
    <Border x:Name="brdNote"
            Background="{Binding SelectedNote.Color}"
            BorderBrush="#FF646400"
            BorderThickness="1">
    	<Grid x:Name="grdNote">
    		<Grid.RowDefinitions>
    			<RowDefinition Height="20" />
    			<RowDefinition />
    			<RowDefinition Height="26" />
    		</Grid.RowDefinitions>
    		<Rectangle x:Name="Line"
    			Height="1"
    			VerticalAlignment="Bottom"
    			Fill="{DynamicResource Spilter_Line_Background}" />
    		<Rectangle x:Name="Line1"
    			Grid.Row="1"
    			Height="1"
    			VerticalAlignment="Bottom"
    			Fill="{DynamicResource Spilter_Line_Background}" />
    		<Button x:Name="btnAdd"
    			Command="{Binding NewCommand}"
    			Width="15"
    			Height="15"
    			Margin="5,0,0,0"
    			HorizontalAlignment="Left"
    			VerticalAlignment="Center"
    			Style="{DynamicResource ButtonMiniClose}">
    			<Grid x:Name="grdAdd">
    				<Path Width="10"
    					Height="10"
    					HorizontalAlignment="Center"
    					VerticalAlignment="Center"
    					Data="M5.75,0.25 L9.25,0.25 9.25,5.7499999 14.75,5.7499999 14.75,9.25 9.25,9.25 9.25,14.75 5.75,14.75 5.75,9.25 0.25,9.25 0.25,5.7499999 5.75,5.7499999 z"
    					Fill="{DynamicResource TitleBar_ButtonClose_Arrow}"
    					RenderTransformOrigin="0.5,0.5"
    					Stretch="Fill"
    					StrokeThickness="0.5" />
    			</Grid>
    		</Button>
    		<Button x:Name="btnClose"
    			Command="{Binding DeleteCommand}"
    			Width="15"
    			Height="15"
    			Margin="0,0,5,0"
    			HorizontalAlignment="Right"
    			VerticalAlignment="Center"
    			Style="{DynamicResource ButtonMiniClose}">
    			<Grid x:Name="grdClose">
    				<Path Width="10"
    					Height="10"
    					HorizontalAlignment="Center"
    					VerticalAlignment="Center"
    					Data="M5.75,0.25 L9.25,0.25 9.25,5.7499999 14.75,5.7499999 14.75,9.25 9.25,9.25 9.25,14.75 5.75,14.75 5.75,9.25 0.25,9.25 0.25,5.7499999 5.75,5.7499999 z"
    					Fill="{DynamicResource TitleBar_ButtonClose_Arrow}"
    					RenderTransformOrigin="0.5,0.5"
    					Stretch="Fill"
    					StrokeThickness="0.5">
    					<Path.RenderTransform>
    						<TransformGroup>
    							<ScaleTransform ScaleX="1"
    								ScaleY="1" />
    							<SkewTransform AngleX="0"
    								AngleY="0" />
    							<RotateTransform Angle="-45" />
    							<TranslateTransform X="0"
    								Y="0" />
    						</TransformGroup>
    					</Path.RenderTransform>
    				</Path>
    			</Grid>
    		</Button>
    		<TextBox Grid.Row="1"
    			Margin="5"
    			VerticalContentAlignment="Top"
    			Background="{x:Null}"
    			BorderBrush="{x:Null}"
    			MaxLength="300"
    			Text="{Binding SelectedNote.Note, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
    			TextWrapping="Wrap"
    			d:LayoutOverrides="Height" />
    		<Button x:Name="btnYellow"
    			Grid.Row="2"
    			Width="15"
    			Height="15"
    			Margin="5,0,0,0"
    			HorizontalAlignment="Left"
    			Background="{DynamicResource ColorPicker}"
    			BorderBrush="{x:Null}"
    			BorderThickness="1"
    			Style="{DynamicResource ButtonColor}" Visibility="Collapsed" />
    		<xctk:ColorPicker x:Name="cpkBackground"
    			Grid.Row="2"
    			SelectedColor="{Binding SelectedNote.Color}"
    			ShowAdvancedButton="False"  BorderBrush="{x:Null}" Width="36" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0"/>
    	</Grid>
    </Border>
</UserControl>

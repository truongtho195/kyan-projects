//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using CPC.POS.Database;
using CPC.Toolkit.Base;
using System.Text;

namespace CPC.POS.Model
{
    /// <summary>
    /// Model for table base_RewardManager
    /// </summary>
    [Serializable]
    public partial class base_RewardManagerModel : ModelBase, IDataErrorInfo
    {
        #region Constructor

        // Default constructor
        public base_RewardManagerModel()
        {
            this.IsNew = true;
            this.base_RewardManager = new base_RewardManager();
        }

        // Default constructor that set entity to field
        public base_RewardManagerModel(base_RewardManager base_rewardmanager, bool isRaiseProperties = false)
        {
            this.base_RewardManager = base_rewardmanager;
            if (!isRaiseProperties)
                this.ToModel();
            else
                this.ToModelAndRaise();
            this.IsDirty = false;
        }

        #endregion

        #region Entity Properties

        public base_RewardManager base_RewardManager { get; private set; }

        #endregion

        #region Primitive Properties

        protected int _id;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the Id</para>
        /// </summary>
        public int Id
        {
            get { return this._id; }
            set
            {
                if (this._id != value)
                {
                    this.IsDirty = true;
                    this._id = value;
                    OnPropertyChanged(() => Id);
                    PropertyChangedCompleted(() => Id);
                }
            }
        }

        protected string _storeCode;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the StoreCode</para>
        /// </summary>
        public string StoreCode
        {
            get { return this._storeCode; }
            set
            {
                if (this._storeCode != value)
                {
                    this.IsDirty = true;
                    this._storeCode = value;
                    OnPropertyChanged(() => StoreCode);
                    PropertyChangedCompleted(() => StoreCode);
                }
            }
        }

        protected decimal _purchaseThreshold;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the PurchaseThreshold</para>
        /// </summary>
        public decimal PurchaseThreshold
        {
            get { return this._purchaseThreshold; }
            set
            {
                if (this._purchaseThreshold != value)
                {
                    this.IsDirty = true;
                    this._purchaseThreshold = value;
                    OnPropertyChanged(() => PurchaseThreshold);
                    PropertyChangedCompleted(() => PurchaseThreshold);
                }
            }
        }

        protected decimal _rewardAmount;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the RewardAmount</para>
        /// </summary>
        public decimal RewardAmount
        {
            get { return this._rewardAmount; }
            set
            {
                if (this._rewardAmount != value)
                {
                    this.IsDirty = true;
                    this._rewardAmount = value;
                    OnPropertyChanged(() => RewardAmount);
                    PropertyChangedCompleted(() => RewardAmount);
                }
            }
        }

        protected int _rewardAmtType;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the RewardAmtType</para>
        /// </summary>
        public int RewardAmtType
        {
            get { return this._rewardAmtType; }
            set
            {
                if (this._rewardAmtType != value)
                {
                    this.IsDirty = true;
                    this._rewardAmtType = value;
                    OnPropertyChanged(() => RewardAmtType);
                    PropertyChangedCompleted(() => RewardAmtType);
                }
            }
        }

        protected int _rewardExpiration;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the RewardExpiration</para>
        /// </summary>
        public int RewardExpiration
        {
            get { return this._rewardExpiration; }
            set
            {
                if (this._rewardExpiration != value)
                {
                    this.IsDirty = true;
                    this._rewardExpiration = value;
                    OnPropertyChanged(() => RewardExpiration);
                    PropertyChangedCompleted(() => RewardExpiration);
                }
            }
        }

        protected bool _isAutoEnroll;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the IsAutoEnroll</para>
        /// </summary>
        public bool IsAutoEnroll
        {
            get { return this._isAutoEnroll; }
            set
            {
                if (this._isAutoEnroll != value)
                {
                    this.IsDirty = true;
                    this._isAutoEnroll = value;
                    OnPropertyChanged(() => IsAutoEnroll);
                    PropertyChangedCompleted(() => IsAutoEnroll);
                }
            }
        }

        protected bool _isPromptEnroll;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the IsPromptEnroll</para>
        /// </summary>
        public bool IsPromptEnroll
        {
            get { return this._isPromptEnroll; }
            set
            {
                if (this._isPromptEnroll != value)
                {
                    this.IsDirty = true;
                    this._isPromptEnroll = value;
                    OnPropertyChanged(() => IsPromptEnroll);
                    PropertyChangedCompleted(() => IsPromptEnroll);
                }
            }
        }

        protected bool _isInformCashier;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the IsInformCashier</para>
        /// </summary>
        public bool IsInformCashier
        {
            get { return this._isInformCashier; }
            set
            {
                if (this._isInformCashier != value)
                {
                    this.IsDirty = true;
                    this._isInformCashier = value;
                    OnPropertyChanged(() => IsInformCashier);
                    PropertyChangedCompleted(() => IsInformCashier);
                }
            }
        }

        protected bool _isRedemptionLimit;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the IsRedemptionLimit</para>
        /// </summary>
        public bool IsRedemptionLimit
        {
            get { return this._isRedemptionLimit; }
            set
            {
                if (this._isRedemptionLimit != value)
                {
                    this.IsDirty = true;
                    this._isRedemptionLimit = value;
                    OnPropertyChanged(() => IsRedemptionLimit);
                    PropertyChangedCompleted(() => IsRedemptionLimit);
                }
            }
        }

        protected decimal _redemptionLimitAmount;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the RedemptionLimitAmount</para>
        /// </summary>
        public decimal RedemptionLimitAmount
        {
            get { return this._redemptionLimitAmount; }
            set
            {
                if (this._redemptionLimitAmount != value)
                {
                    this.IsDirty = true;
                    this._redemptionLimitAmount = value;
                    OnPropertyChanged(() => RedemptionLimitAmount);
                    PropertyChangedCompleted(() => RedemptionLimitAmount);
                }
            }
        }

        protected bool _isBlockRedemption;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the IsBlockRedemption</para>
        /// </summary>
        public bool IsBlockRedemption
        {
            get { return this._isBlockRedemption; }
            set
            {
                if (this._isBlockRedemption != value)
                {
                    this.IsDirty = true;
                    this._isBlockRedemption = value;
                    OnPropertyChanged(() => IsBlockRedemption);
                    PropertyChangedCompleted(() => IsBlockRedemption);
                }
            }
        }

        protected int _redemptionAfterDays;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the RedemptionAfterDays</para>
        /// </summary>
        public int RedemptionAfterDays
        {
            get { return this._redemptionAfterDays; }
            set
            {
                if (this._redemptionAfterDays != value)
                {
                    this.IsDirty = true;
                    this._redemptionAfterDays = value;
                    OnPropertyChanged(() => RedemptionAfterDays);
                    PropertyChangedCompleted(() => RedemptionAfterDays);
                }
            }
        }

        protected bool _isBlockPurchaseRedeem;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the IsBlockPurchaseRedeem</para>
        /// </summary>
        public bool IsBlockPurchaseRedeem
        {
            get { return this._isBlockPurchaseRedeem; }
            set
            {
                if (this._isBlockPurchaseRedeem != value)
                {
                    this.IsDirty = true;
                    this._isBlockPurchaseRedeem = value;
                    OnPropertyChanged(() => IsBlockPurchaseRedeem);
                    PropertyChangedCompleted(() => IsBlockPurchaseRedeem);
                }
            }
        }

        protected bool _isTrackingPeriod;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the IsTrackingPeriod</para>
        /// </summary>
        public bool IsTrackingPeriod
        {
            get { return this._isTrackingPeriod; }
            set
            {
                if (this._isTrackingPeriod != value)
                {
                    this.IsDirty = true;
                    this._isTrackingPeriod = value;
                    OnPropertyChanged(() => IsTrackingPeriod);
                    PropertyChangedCompleted(() => IsTrackingPeriod);
                }
            }
        }

        protected Nullable<System.DateTime> _startDate;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the StartDate</para>
        /// </summary>
        public Nullable<System.DateTime> StartDate
        {
            get { return this._startDate; }
            set
            {
                if (this._startDate != value)
                {
                    this.IsDirty = true;
                    this._startDate = value;
                    OnPropertyChanged(() => StartDate);
                    PropertyChangedCompleted(() => StartDate);
                }
            }
        }

        protected Nullable<System.DateTime> _endDate;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the EndDate</para>
        /// </summary>
        public Nullable<System.DateTime> EndDate
        {
            get { return this._endDate; }
            set
            {
                if (this._endDate != value)
                {
                    this.IsDirty = true;
                    this._endDate = value;
                    OnPropertyChanged(() => EndDate);
                    PropertyChangedCompleted(() => EndDate);
                }
            }
        }

        protected bool _isNoEndDay;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the IsNoEndDay</para>
        /// </summary>
        public bool IsNoEndDay
        {
            get { return this._isNoEndDay; }
            set
            {
                if (this._isNoEndDay != value)
                {
                    this.IsDirty = true;
                    this._isNoEndDay = value;
                    OnPropertyChanged(() => IsNoEndDay);
                    PropertyChangedCompleted(() => IsNoEndDay);
                }
            }
        }

        protected decimal _totalRewardRedeemed;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the TotalRewardRedeemed</para>
        /// </summary>
        public decimal TotalRewardRedeemed
        {
            get { return this._totalRewardRedeemed; }
            set
            {
                if (this._totalRewardRedeemed != value)
                {
                    this.IsDirty = true;
                    this._totalRewardRedeemed = value;
                    OnPropertyChanged(() => TotalRewardRedeemed);
                    PropertyChangedCompleted(() => TotalRewardRedeemed);
                }
            }
        }

        protected bool _isActived;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the IsActived</para>
        /// </summary>
        public bool IsActived
        {
            get { return this._isActived; }
            set
            {
                if (this._isActived != value)
                {
                    this.IsDirty = true;
                    this._isActived = value;
                    OnPropertyChanged(() => IsActived);
                    PropertyChangedCompleted(() => IsActived);
                }
            }
        }

        protected string _reasonReActive;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the ReasonReActive</para>
        /// </summary>
        public string ReasonReActive
        {
            get { return this._reasonReActive; }
            set
            {
                if (this._reasonReActive != value)
                {
                    this.IsDirty = true;
                    this._reasonReActive = value;
                    OnPropertyChanged(() => ReasonReActive);
                    PropertyChangedCompleted(() => ReasonReActive);
                }
            }
        }

        protected Nullable<System.DateTime> _dateCreated;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the DateCreated</para>
        /// </summary>
        public Nullable<System.DateTime> DateCreated
        {
            get { return this._dateCreated; }
            set
            {
                if (this._dateCreated != value)
                {
                    this.IsDirty = true;
                    this._dateCreated = value;
                    OnPropertyChanged(() => DateCreated);
                    PropertyChangedCompleted(() => DateCreated);
                }
            }
        }

        #endregion

        #region Public Methods

        /// <summary>
        /// <para>Public Method</para>
        /// Method for set IsNew & IsDirty = false;
        /// </summary>
        public void EndUpdate()
        {
            this.IsNew = false;
            this.IsDirty = false;
        }

        /// <summary>
        /// Public Method
        /// <para>Method for set PropertyModel to Entity</para>
        /// </summary>
        public void ToEntity()
        {
            if (IsNew)
                this.base_RewardManager.Id = this.Id;
            this.base_RewardManager.StoreCode = this.StoreCode;
            this.base_RewardManager.PurchaseThreshold = this.PurchaseThreshold;
            this.base_RewardManager.RewardAmount = this.RewardAmount;
            this.base_RewardManager.RewardAmtType = this.RewardAmtType;
            this.base_RewardManager.RewardExpiration = this.RewardExpiration;
            this.base_RewardManager.IsAutoEnroll = this.IsAutoEnroll;
            this.base_RewardManager.IsPromptEnroll = this.IsPromptEnroll;
            this.base_RewardManager.IsInformCashier = this.IsInformCashier;
            this.base_RewardManager.IsRedemptionLimit = this.IsRedemptionLimit;
            this.base_RewardManager.RedemptionLimitAmount = this.RedemptionLimitAmount;
            this.base_RewardManager.IsBlockRedemption = this.IsBlockRedemption;
            this.base_RewardManager.RedemptionAfterDays = this.RedemptionAfterDays;
            this.base_RewardManager.IsBlockPurchaseRedeem = this.IsBlockPurchaseRedeem;
            this.base_RewardManager.IsTrackingPeriod = this.IsTrackingPeriod;
            this.base_RewardManager.StartDate = this.StartDate;
            this.base_RewardManager.EndDate = this.EndDate;
            this.base_RewardManager.IsNoEndDay = this.IsNoEndDay;
            this.base_RewardManager.TotalRewardRedeemed = this.TotalRewardRedeemed;
            this.base_RewardManager.IsActived = this.IsActived;
            this.base_RewardManager.ReasonReActive = this.ReasonReActive;
            this.base_RewardManager.DateCreated = this.DateCreated;
        }

        /// <summary>
        /// Public Method
        /// <para>Method for set Entity to PropertyModel</para>
        /// </summary
        public void ToModel()
        {
            this._id = this.base_RewardManager.Id;
            this._storeCode = this.base_RewardManager.StoreCode;
            this._purchaseThreshold = this.base_RewardManager.PurchaseThreshold;
            this._rewardAmount = this.base_RewardManager.RewardAmount;
            this._rewardAmtType = this.base_RewardManager.RewardAmtType;
            this._rewardExpiration = this.base_RewardManager.RewardExpiration;
            this._isAutoEnroll = this.base_RewardManager.IsAutoEnroll;
            this._isPromptEnroll = this.base_RewardManager.IsPromptEnroll;
            this._isInformCashier = this.base_RewardManager.IsInformCashier;
            this._isRedemptionLimit = this.base_RewardManager.IsRedemptionLimit;
            this._redemptionLimitAmount = this.base_RewardManager.RedemptionLimitAmount;
            this._isBlockRedemption = this.base_RewardManager.IsBlockRedemption;
            this._redemptionAfterDays = this.base_RewardManager.RedemptionAfterDays;
            this._isBlockPurchaseRedeem = this.base_RewardManager.IsBlockPurchaseRedeem;
            this._isTrackingPeriod = this.base_RewardManager.IsTrackingPeriod;
            this._startDate = this.base_RewardManager.StartDate;
            this._endDate = this.base_RewardManager.EndDate;
            this._isNoEndDay = this.base_RewardManager.IsNoEndDay;
            this._totalRewardRedeemed = this.base_RewardManager.TotalRewardRedeemed;
            this._isActived = this.base_RewardManager.IsActived;
            this._reasonReActive = this.base_RewardManager.ReasonReActive;
            this._dateCreated = this.base_RewardManager.DateCreated;
        }

        /// <summary>
        /// Public Method
        /// <para>Method for set Entity to PropertyModel</para>
        /// </summary
        public void ToModelAndRaise()
        {
            this.Id = this.base_RewardManager.Id;
            this.StoreCode = this.base_RewardManager.StoreCode;
            this.PurchaseThreshold = this.base_RewardManager.PurchaseThreshold;
            this.RewardAmount = this.base_RewardManager.RewardAmount;
            this.RewardAmtType = this.base_RewardManager.RewardAmtType;
            this.RewardExpiration = this.base_RewardManager.RewardExpiration;
            this.IsAutoEnroll = this.base_RewardManager.IsAutoEnroll;
            this.IsPromptEnroll = this.base_RewardManager.IsPromptEnroll;
            this.IsInformCashier = this.base_RewardManager.IsInformCashier;
            this.IsRedemptionLimit = this.base_RewardManager.IsRedemptionLimit;
            this.RedemptionLimitAmount = this.base_RewardManager.RedemptionLimitAmount;
            this.IsBlockRedemption = this.base_RewardManager.IsBlockRedemption;
            this.RedemptionAfterDays = this.base_RewardManager.RedemptionAfterDays;
            this.IsBlockPurchaseRedeem = this.base_RewardManager.IsBlockPurchaseRedeem;
            this.IsTrackingPeriod = this.base_RewardManager.IsTrackingPeriod;
            this.StartDate = this.base_RewardManager.StartDate;
            this.EndDate = this.base_RewardManager.EndDate;
            this.IsNoEndDay = this.base_RewardManager.IsNoEndDay;
            this.TotalRewardRedeemed = this.base_RewardManager.TotalRewardRedeemed;
            this.IsActived = this.base_RewardManager.IsActived;
            this.ReasonReActive = this.base_RewardManager.ReasonReActive;
            this.DateCreated = this.base_RewardManager.DateCreated;
        }

        #endregion

        #region Custom Code

        #region Properties
        #region RewardProgramText
        //private string _rewardProgramText;
        /// <summary>
        /// Gets or sets the RewardProgramText.
        /// </summary>
        public string RewardProgramText
        {
            get
            {
                if (this.RewardAmtType.Equals((int)RewardType.Money))
                    return string.Format(Define.ConverterCulture, Define.CurrencyFormat, this.RewardAmount);
                return string.Format("{0} %", this.RewardAmount);
            }
        }
        #endregion

        #region RewardInfo
        private string _rewardInfo;
        /// <summary>
        /// Gets or sets the PropertyName.
        /// </summary>
        public string RewardInfo
        {
            get { return _rewardInfo; }
            set
            {
                if (_rewardInfo != value)
                {
                    _rewardInfo = value;
                    OnPropertyChanged(() => RewardInfo);
                }
            }
        }
        #endregion

        #endregion

        #region Methods

        public string SetRewardInfo()
        {
           
            StringBuilder sb = new StringBuilder();
            if (this.RewardAmtType.Equals((int)RewardType.Money))
                sb.Append(string.Format(Define.ConverterCulture, Define.CurrencyFormat, this.RewardAmount));
            else
                sb.AppendFormat("{0} %", this.RewardAmount);

            sb.AppendFormat(" off reward are earned for every {0} ", string.Format(Define.ConverterCulture, Define.CurrencyFormat, PurchaseThreshold));

            if (IsTrackingPeriod)
            {
                sb.Append("from ");
                sb.Append(this.StartDate.Value.ToString(Define.DateFormat));
                if (!IsNoEndDay)
                {
                    sb.Append(" to ");
                    sb.Append(this.EndDate.Value.ToString(Define.DateFormat));
                }
            }
            return sb.ToString();
        }

        public override string ToString()
        {
            return SetRewardInfo();
        }
        #endregion

        #region PropertyChanged
        protected override void PropertyChangedCompleted(string propertyName)
        {
            switch (propertyName)
            {
                #region Change properties.
                case "StartDate":
                    // To change property EndDate.
                    OnPropertyChanged(() => EndDate);
                    break;
                case "EndDate":
                    // To change property StartDate.
                    OnPropertyChanged(() => StartDate);
                    break;
                case "IsNoEndDay":
                    // To change property StartDate.
                    OnPropertyChanged(() => EndDate);
                    break;
                case "IsTrackingPeriod":
                    // To change property StartDate.
                    OnPropertyChanged(() => StartDate);
                    OnPropertyChanged(() => EndDate);
                    break;
                case "RewardAmount":
                case "RewardAmtType":
                    OnPropertyChanged(() => RewardProgramText);
                    break;

                #endregion
            }
        } 
        #endregion
        #endregion

        #region IDataErrorInfo Members

        public string Error
        {
            get { throw new NotImplementedException(); }
        }

        public string this[string columnName]
        {
            get
            {
                string message = string.Empty;

                switch (columnName)
                {
                    case "Id":
                        break;
                    case "StoreId":
                        break;
                    case "PurchaseThreshold":
                        break;
                    case "RewardAmount":
                        break;
                    case "RewardAmtType":
                        break;
                    case "RewardExpiration":
                        break;
                    case "StartDate":
                        if(this.IsTrackingPeriod && this.EndDate.HasValue && !this.StartDate.HasValue)
                            message = "Start date is required.";
                        break;
                    case "EndDate":
                        if (!this.IsNoEndDay && this.IsTrackingPeriod)
                        {
                            if (this.StartDate.HasValue && !this.EndDate.HasValue)
                                message = "End Date is required.";
                            else if (this.StartDate.HasValue && this.EndDate.HasValue && this.EndDate.Value < this.StartDate.Value.AddDays(1))
                                message = "End Date must be greater than Start date.";
                        }
                        break;
                    case "IsAutoEnroll":
                        break;
                    case "IsPromptEnroll":
                        break;
                    case "IsInformCashier":
                        break;
                    case "IsRedemptionLimit":
                        break;
                    case "RedemptionLimitAmount":
                        break;
                    case "IsBlockRedemption":
                        break;
                    case "RedemptionAfterDays":
                        break;
                    case "IsBlockPurchaseRedeem":
                        break;
                    case "IsActived":
                        break;
                }

                if (!string.IsNullOrWhiteSpace(message))
                    return message;
                return null;
            }
        }

        #endregion
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using CPC.POS.Database;
using CPC.Toolkit.Base;
using CPC.POS.Interfaces;

namespace CPC.POS.Model
{
    /// <summary>
    /// Model for table base_Attachment
    /// </summary>
    [Serializable]
    public partial class base_AttachmentModel : ModelBase, IDataErrorInfo, IEditableObject
    {
        #region Constructor

        // Default constructor
        public base_AttachmentModel()
        {
            this.IsNew = true;
            this.base_Attachment = new base_Attachment();
        }

        // Default constructor that set entity to field
        public base_AttachmentModel(base_Attachment base_attachment, bool isRaiseProperties = false)
        {
            this.base_Attachment = base_attachment;
            if (!isRaiseProperties)
                this.ToModel();
            else
                this.ToModelAndRaise();
            this.IsDirty = false;
        }

        #endregion

        #region Entity Properties

        public base_Attachment base_Attachment
        {
            get;
            private set;
        }

        #endregion

        #region Primitive Properties

        protected long _id;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the Id</para>
        /// </summary>
        public long Id
        {
            get
            {
                return this._id;
            }
            set
            {
                if (this._id != value)
                {
                    this.IsDirty = true;
                    this._id = value;
                    OnPropertyChanged(() => Id);
                    PropertyChangedCompleted(() => Id);
                }
            }
        }

        protected string _fileOriginalName;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the FileOriginalName</para>
        /// </summary>
        public string FileOriginalName
        {
            get
            {
                return this._fileOriginalName;
            }
            set
            {
                if (this._fileOriginalName != value)
                {
                    this.IsDirty = true;
                    this._fileOriginalName = value;
                    OnPropertyChanged(() => FileOriginalName);
                    PropertyChangedCompleted(() => FileOriginalName);
                }
            }
        }

        protected string _fileName;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the FileName</para>
        /// </summary>
        public string FileName
        {
            get
            {
                return this._fileName;
            }
            set
            {
                if (this._fileName != value)
                {
                    this.IsDirty = true;
                    this._fileName = value;
                    OnPropertyChanged(() => FileName);
                    PropertyChangedCompleted(() => FileName);
                }
            }
        }

        protected string _fileExtension;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the FileExtension</para>
        /// </summary>
        public string FileExtension
        {
            get
            {
                return this._fileExtension;
            }
            set
            {
                if (this._fileExtension != value)
                {
                    this.IsDirty = true;
                    this._fileExtension = value;
                    OnPropertyChanged(() => FileExtension);
                    PropertyChangedCompleted(() => FileExtension);
                }
            }
        }

        protected int _virtualFolderId;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the VirtualFolderId</para>
        /// </summary>
        public int VirtualFolderId
        {
            get
            {
                return this._virtualFolderId;
            }
            set
            {
                if (this._virtualFolderId != value)
                {
                    this.IsDirty = true;
                    this._virtualFolderId = value;
                    OnPropertyChanged(() => VirtualFolderId);
                    PropertyChangedCompleted(() => VirtualFolderId);
                }
            }
        }

        protected bool _isActived;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the IsActived</para>
        /// </summary>
        public bool IsActived
        {
            get
            {
                return this._isActived;
            }
            set
            {
                if (this._isActived != value)
                {
                    this.IsDirty = true;
                    this._isActived = value;
                    OnPropertyChanged(() => IsActived);
                    PropertyChangedCompleted(() => IsActived);
                }
            }
        }

        protected Nullable<System.DateTime> _dateCreated;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the DateCreated</para>
        /// </summary>
        public Nullable<System.DateTime> DateCreated
        {
            get
            {
                return this._dateCreated;
            }
            set
            {
                if (this._dateCreated != value)
                {
                    this.IsDirty = true;
                    this._dateCreated = value;
                    OnPropertyChanged(() => DateCreated);
                    PropertyChangedCompleted(() => DateCreated);
                }
            }
        }

        protected string _userCreated;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the UserCreated</para>
        /// </summary>
        public string UserCreated
        {
            get
            {
                return this._userCreated;
            }
            set
            {
                if (this._userCreated != value)
                {
                    this.IsDirty = true;
                    this._userCreated = value;
                    OnPropertyChanged(() => UserCreated);
                    PropertyChangedCompleted(() => UserCreated);
                }
            }
        }

        protected Nullable<System.DateTime> _dateUpdated;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the DateUpdated</para>
        /// </summary>
        public Nullable<System.DateTime> DateUpdated
        {
            get
            {
                return this._dateUpdated;
            }
            set
            {
                if (this._dateUpdated != value)
                {
                    this.IsDirty = true;
                    this._dateUpdated = value;
                    OnPropertyChanged(() => DateUpdated);
                    PropertyChangedCompleted(() => DateUpdated);
                }
            }
        }

        protected string _userUpdated;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the UserUpdated</para>
        /// </summary>
        public string UserUpdated
        {
            get
            {
                return this._userUpdated;
            }
            set
            {
                if (this._userUpdated != value)
                {
                    this.IsDirty = true;
                    this._userUpdated = value;
                    OnPropertyChanged(() => UserUpdated);
                    PropertyChangedCompleted(() => UserUpdated);
                }
            }
        }

        protected short _counter;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the Counter</para>
        /// </summary>
        public short Counter
        {
            get
            {
                return this._counter;
            }
            set
            {
                if (this._counter != value)
                {
                    this.IsDirty = true;
                    this._counter = value;
                    OnPropertyChanged(() => Counter);
                    PropertyChangedCompleted(() => Counter);
                }
            }
        }

        #endregion

        #region Public Methods

        /// <summary>
        /// <para>Public Method</para>
        /// Method for set IsNew & IsDirty = false;
        /// </summary>
        public void EndUpdate()
        {
            this.IsNew = false;
            this.IsDirty = false;
        }

        /// <summary>
        /// Public Method
        /// <para>Method for set PropertyModel to Entity</para>
        /// </summary>
        public void ToEntity()
        {
            if (IsNew)
                this.base_Attachment.Id = this.Id;
            this.base_Attachment.FileOriginalName = this.FileOriginalName;
            this.base_Attachment.FileName = this.FileName;
            this.base_Attachment.FileExtension = this.FileExtension;
            this.base_Attachment.VirtualFolderId = this.VirtualFolderId;
            this.base_Attachment.IsActived = this.IsActived;
            this.base_Attachment.DateCreated = this.DateCreated;
            this.base_Attachment.UserCreated = this.UserCreated;
            this.base_Attachment.DateUpdated = this.DateUpdated;
            this.base_Attachment.UserUpdated = this.UserUpdated;
            this.base_Attachment.Counter = this.Counter;
        }

        /// <summary>
        /// Public Method
        /// <para>Method for set Entity to PropertyModel</para>
        /// </summary
        public void ToModel()
        {
            this._id = this.base_Attachment.Id;
            this._fileOriginalName = this.base_Attachment.FileOriginalName;
            this._fileName = this.base_Attachment.FileName;
            this._fileExtension = this.base_Attachment.FileExtension;
            this._virtualFolderId = this.base_Attachment.VirtualFolderId;
            this._isActived = this.base_Attachment.IsActived;
            this._dateCreated = this.base_Attachment.DateCreated;
            this._userCreated = this.base_Attachment.UserCreated;
            this._dateUpdated = this.base_Attachment.DateUpdated;
            this._userUpdated = this.base_Attachment.UserUpdated;
            this._counter = this.base_Attachment.Counter;
        }

        /// <summary>
        /// Public Method
        /// <para>Method for set Entity to PropertyModel</para>
        /// </summary
        public void ToModelAndRaise()
        {
            this.Id = this.base_Attachment.Id;
            this.FileOriginalName = this.base_Attachment.FileOriginalName;
            this.FileName = this.base_Attachment.FileName;
            this.FileExtension = this.base_Attachment.FileExtension;
            this.VirtualFolderId = this.base_Attachment.VirtualFolderId;
            this.IsActived = this.base_Attachment.IsActived;
            this.DateCreated = this.base_Attachment.DateCreated;
            this.UserCreated = this.base_Attachment.UserCreated;
            this.DateUpdated = this.base_Attachment.DateUpdated;
            this.UserUpdated = this.base_Attachment.UserUpdated;
            this.Counter = this.base_Attachment.Counter;
        }

        #endregion

        #region Custom Code

        #region Navigation Properties

        #region ParentFolder

        private base_VirtualFolderModel _parentFolder;
        /// <summary>
        /// Gets or sets parent folder.
        /// </summary>
        public base_VirtualFolderModel ParentFolder
        {
            get
            {
                return _parentFolder;
            }
            set
            {
                if (_parentFolder != value)
                {
                    _isDirty = true;
                    _parentFolder = value;
                    OnPropertyChanged(() => ParentFolder);
                }
            }
        }

        #endregion

        #endregion

        #region Properties

        #region EditAttachmentProvider

        private IEditableAttachment _editAttachmentProvider;
        /// <summary>
        /// Used for update attachment.
        /// </summary>
        public IEditableAttachment EditAttachmentProvider
        {
            get
            {
                return _editAttachmentProvider;
            }
            set
            {
                if (_editAttachmentProvider != value)
                {
                    _editAttachmentProvider = value;
                    OnPropertyChanged(() => EditAttachmentProvider);
                }
            }
        }

        #endregion

        #endregion

        #region Methods

        #region Checked

        /// <summary>
        /// Checks file.
        /// </summary>
        public void Checked()
        {
            if (!_isChecked)
            {
                _isChecked = true;
                OnPropertyChanged(() => IsChecked);
            }
        }

        #endregion

        #region Unchecked

        /// <summary>
        /// Unchecks file.
        /// </summary>
        public void Unchecked()
        {
            if (_isChecked)
            {
                _isChecked = false;
                OnPropertyChanged(() => IsChecked);
            }
        }

        #endregion

        #endregion

        #region Override Methods

        #region OnIsCheckedChanged

        protected override void OnIsCheckedChanged()
        {
            if (_parentFolder != null)
            {
                _parentFolder.DetermineIsCheckedAllFiles();
            }
        }

        #endregion

        #endregion

        #region IDataErrorInfo Members

        public string Error
        {
            get
            {
                return null;
            }
        }

        public string this[string columnName]
        {
            get
            {
                return null;
            }
        }

        #endregion

        #region IEditableObject Members

        public void BeginEdit()
        {

        }

        public void CancelEdit()
        {

        }

        public void EndEdit()
        {
            // Update attachment.
            if (_isDirty)
            {
                if (_editAttachmentProvider != null)
                {
                    _editAttachmentProvider.Update(this);
                }
            }
        }

        #endregion

        #endregion
    }
}


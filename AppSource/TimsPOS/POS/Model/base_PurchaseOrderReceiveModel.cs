//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using CPC.POS.Database;
using CPC.Toolkit.Base;
using System.Linq;

namespace CPC.POS.Model
{
    /// <summary>
    /// Model for table base_PurchaseOrderReceive
    /// </summary>
    [Serializable]
    public partial class base_PurchaseOrderReceiveModel : ModelBase, IDataErrorInfo, IEditableObject
    {
        #region Constructor

        // Default constructor
        public base_PurchaseOrderReceiveModel()
        {
            this.IsNew = true;
            this.base_PurchaseOrderReceive = new base_PurchaseOrderReceive();
        }

        // Default constructor that set entity to field
        public base_PurchaseOrderReceiveModel(base_PurchaseOrderReceive base_purchaseorderreceive, bool isRaiseProperties = false)
        {
            this.base_PurchaseOrderReceive = base_purchaseorderreceive;
            if (!isRaiseProperties)
                this.ToModel();
            else
                this.ToModelAndRaise();
            this.IsDirty = false;
        }

        #endregion

        #region Entity Properties

        public base_PurchaseOrderReceive base_PurchaseOrderReceive
        {
            get;
            private set;
        }

        #endregion

        #region Primitive Properties

        protected long _id;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the Id</para>
        /// </summary>
        public long Id
        {
            get
            {
                return this._id;
            }
            set
            {
                if (this._id != value)
                {
                    this.IsDirty = true;
                    this._id = value;
                    OnPropertyChanged(() => Id);
                    PropertyChangedCompleted(() => Id);
                }
            }
        }

        protected long _purchaseOrderDetailId;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the PurchaseOrderDetailId</para>
        /// </summary>
        public long PurchaseOrderDetailId
        {
            get
            {
                return this._purchaseOrderDetailId;
            }
            set
            {
                if (this._purchaseOrderDetailId != value)
                {
                    this.IsDirty = true;
                    this._purchaseOrderDetailId = value;
                    OnPropertyChanged(() => PurchaseOrderDetailId);
                    PropertyChangedCompleted(() => PurchaseOrderDetailId);
                }
            }
        }

        protected string _pOResource;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the POResource</para>
        /// </summary>
        public string POResource
        {
            get
            {
                return this._pOResource;
            }
            set
            {
                if (this._pOResource != value)
                {
                    this.IsDirty = true;
                    this._pOResource = value;
                    OnPropertyChanged(() => POResource);
                    PropertyChangedCompleted(() => POResource);
                }
            }
        }

        protected string _productResource;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the ProductResource</para>
        /// </summary>
        public string ProductResource
        {
            get
            {
                return this._productResource;
            }
            set
            {
                if (this._productResource != value)
                {
                    this.IsDirty = true;
                    this._productResource = value;
                    OnPropertyChanged(() => ProductResource);
                    PropertyChangedCompleted(() => ProductResource);
                }
            }
        }

        protected string _itemCode;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the ItemCode</para>
        /// </summary>
        public string ItemCode
        {
            get
            {
                return this._itemCode;
            }
            set
            {
                if (this._itemCode != value)
                {
                    this.IsDirty = true;
                    this._itemCode = value;
                    OnPropertyChanged(() => ItemCode);
                    PropertyChangedCompleted(() => ItemCode);
                }
            }
        }

        protected string _itemName;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the ItemName</para>
        /// </summary>
        public string ItemName
        {
            get
            {
                return this._itemName;
            }
            set
            {
                if (this._itemName != value)
                {
                    this.IsDirty = true;
                    this._itemName = value;
                    OnPropertyChanged(() => ItemName);
                    PropertyChangedCompleted(() => ItemName);
                }
            }
        }

        protected string _itemAtribute;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the ItemAtribute</para>
        /// </summary>
        public string ItemAtribute
        {
            get
            {
                return this._itemAtribute;
            }
            set
            {
                if (this._itemAtribute != value)
                {
                    this.IsDirty = true;
                    this._itemAtribute = value;
                    OnPropertyChanged(() => ItemAtribute);
                    PropertyChangedCompleted(() => ItemAtribute);
                }
            }
        }

        protected string _itemSize;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the ItemSize</para>
        /// </summary>
        public string ItemSize
        {
            get
            {
                return this._itemSize;
            }
            set
            {
                if (this._itemSize != value)
                {
                    this.IsDirty = true;
                    this._itemSize = value;
                    OnPropertyChanged(() => ItemSize);
                    PropertyChangedCompleted(() => ItemSize);
                }
            }
        }

        protected int _recQty;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the RecQty</para>
        /// </summary>
        public int RecQty
        {
            get
            {
                return this._recQty;
            }
            set
            {
                if (this._recQty != value)
                {
                    this.IsDirty = true;
                    this._recQty = value;
                    OnPropertyChanged(() => RecQty);
                    PropertyChangedCompleted(() => RecQty);
                }
            }
        }

        protected bool _isReceived;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the IsReceived</para>
        /// </summary>
        public bool IsReceived
        {
            get
            {
                return this._isReceived;
            }
            set
            {
                if (this._isReceived != value)
                {
                    this.IsDirty = true;
                    this._isReceived = value;
                    OnPropertyChanged(() => IsReceived);
                    PropertyChangedCompleted(() => IsReceived);
                }
            }
        }

        protected System.DateTime _receiveDate;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the ReceiveDate</para>
        /// </summary>
        public System.DateTime ReceiveDate
        {
            get
            {
                return this._receiveDate;
            }
            set
            {
                if (this._receiveDate != value)
                {
                    this.IsDirty = true;
                    this._receiveDate = value;
                    OnPropertyChanged(() => ReceiveDate);
                    PropertyChangedCompleted(() => ReceiveDate);
                }
            }
        }

        protected System.Guid _resource;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the Resource</para>
        /// </summary>
        public System.Guid Resource
        {
            get
            {
                return this._resource;
            }
            set
            {
                if (this._resource != value)
                {
                    this.IsDirty = true;
                    this._resource = value;
                    OnPropertyChanged(() => Resource);
                    PropertyChangedCompleted(() => Resource);
                }
            }
        }

        protected decimal _price;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the Price</para>
        /// </summary>
        public decimal Price
        {
            get
            {
                return this._price;
            }
            set
            {
                if (this._price != value)
                {
                    this.IsDirty = true;
                    this._price = value;
                    OnPropertyChanged(() => Price);
                    PropertyChangedCompleted(() => Price);
                }
            }
        }

        #endregion

        #region Public Methods

        /// <summary>
        /// <para>Public Method</para>
        /// Method for set IsNew & IsDirty = false;
        /// </summary>
        public void EndUpdate()
        {
            this.IsNew = false;
            this.IsDirty = false;
        }

        /// <summary>
        /// Public Method
        /// <para>Method for set PropertyModel to Entity</para>
        /// </summary>
        public void ToEntity()
        {
            if (IsNew)
                this.base_PurchaseOrderReceive.Id = this.Id;
            this.base_PurchaseOrderReceive.PurchaseOrderDetailId = this.PurchaseOrderDetailId;
            this.base_PurchaseOrderReceive.POResource = this.POResource;
            this.base_PurchaseOrderReceive.ProductResource = this.ProductResource;
            this.base_PurchaseOrderReceive.ItemCode = this.ItemCode;
            this.base_PurchaseOrderReceive.ItemName = this.ItemName;
            this.base_PurchaseOrderReceive.ItemAtribute = this.ItemAtribute;
            this.base_PurchaseOrderReceive.ItemSize = this.ItemSize;
            this.base_PurchaseOrderReceive.RecQty = this.RecQty;
            this.base_PurchaseOrderReceive.IsReceived = this.IsReceived;
            this.base_PurchaseOrderReceive.ReceiveDate = this.ReceiveDate;
            this.base_PurchaseOrderReceive.Resource = this.Resource;
            this.base_PurchaseOrderReceive.Price = this.Price;
        }

        /// <summary>
        /// Public Method
        /// <para>Method for set Entity to PropertyModel</para>
        /// </summary
        public void ToModel()
        {
            this._id = this.base_PurchaseOrderReceive.Id;
            this._purchaseOrderDetailId = this.base_PurchaseOrderReceive.PurchaseOrderDetailId;
            this._pOResource = this.base_PurchaseOrderReceive.POResource;
            this._productResource = this.base_PurchaseOrderReceive.ProductResource;
            this._itemCode = this.base_PurchaseOrderReceive.ItemCode;
            this._itemName = this.base_PurchaseOrderReceive.ItemName;
            this._itemAtribute = this.base_PurchaseOrderReceive.ItemAtribute;
            this._itemSize = this.base_PurchaseOrderReceive.ItemSize;
            this._recQty = this.base_PurchaseOrderReceive.RecQty;
            this._isReceived = this.base_PurchaseOrderReceive.IsReceived;
            this._receiveDate = this.base_PurchaseOrderReceive.ReceiveDate;
            this._resource = this.base_PurchaseOrderReceive.Resource;
            this._price = this.base_PurchaseOrderReceive.Price;
        }

        /// <summary>
        /// Public Method
        /// <para>Method for set Entity to PropertyModel</para>
        /// </summary
        public void ToModelAndRaise()
        {
            this.Id = this.base_PurchaseOrderReceive.Id;
            this.PurchaseOrderDetailId = this.base_PurchaseOrderReceive.PurchaseOrderDetailId;
            this.POResource = this.base_PurchaseOrderReceive.POResource;
            this.ProductResource = this.base_PurchaseOrderReceive.ProductResource;
            this.ItemCode = this.base_PurchaseOrderReceive.ItemCode;
            this.ItemName = this.base_PurchaseOrderReceive.ItemName;
            this.ItemAtribute = this.base_PurchaseOrderReceive.ItemAtribute;
            this.ItemSize = this.base_PurchaseOrderReceive.ItemSize;
            this.RecQty = this.base_PurchaseOrderReceive.RecQty;
            this.IsReceived = this.base_PurchaseOrderReceive.IsReceived;
            this.ReceiveDate = this.base_PurchaseOrderReceive.ReceiveDate;
            this.Resource = this.base_PurchaseOrderReceive.Resource;
            this.Price = this.base_PurchaseOrderReceive.Price;
        }

        #endregion

        #region Custom Code

        #region Fields

        /// <summary>
        /// Holds backup of this object.
        /// </summary>
        private base_PurchaseOrderReceiveModel _backup;

        private short _oldStatus;

        #endregion

        #region Navigation Properties

        #region PurchaseOrder

        private base_PurchaseOrderModel _purchaseOrder;
        /// <summary>
        /// Gets or sets PurchaseOrder.
        /// </summary>
        public base_PurchaseOrderModel PurchaseOrder
        {
            get
            {
                return _purchaseOrder;
            }
            set
            {
                if (_purchaseOrder != value)
                {
                    _purchaseOrder = value;
                    OnPropertyChanged(() => PurchaseOrder);
                }
            }
        }

        #endregion

        #region PurchaseOrderDetail

        private base_PurchaseOrderDetailModel _purchaseOrderDetail;
        /// <summary>
        /// Gets or sets PurchaseOrderDetail.
        /// </summary>
        public base_PurchaseOrderDetailModel PurchaseOrderDetail
        {
            get
            {
                return _purchaseOrderDetail;
            }
            set
            {
                if (_purchaseOrderDetail != value)
                {
                    _purchaseOrderDetail = value;
                    OnPropertyChanged(() => PurchaseOrderDetail);
                }
            }
        }

        #endregion

        #endregion

        #region Properties

        #region PODResource

        private string _PODResource;
        /// <summary>
        /// Gets or sets PurchaseOrderDetail's resource.
        /// </summary>
        public string PODResource
        {
            get
            {
                return _PODResource;
            }
            set
            {
                if (_PODResource != value)
                {
                    _isDirty = true;
                    _PODResource = value;
                    OnPropertyChanged(() => PODResource);
                }
            }
        }

        #endregion

        #region HasError

        /// <summary>
        /// Gets value indicate that this object has error or not.
        /// </summary>
        public bool HasError
        {
            get
            {
                return !string.IsNullOrWhiteSpace(Error);
            }
        }

        #endregion

        #region Amount

        private decimal _amount;
        /// <summary>
        /// Gets or sets the Amount
        /// </summary>
        public decimal Amount
        {
            get
            {
                return this._amount;
            }
            set
            {
                if (this._amount != value)
                {
                    _isDirty = true;
                    _amount = value;
                    OnPropertyChanged(() => Amount);
                }
            }
        }

        #endregion

        #region UnitName

        private string _unitName;
        /// <summary>
        /// Gets or sets unit's name that this object is holding.
        /// </summary>
        public string UnitName
        {
            get
            {
                return _unitName;
            }
            set
            {
                if (_unitName != value)
                {
                    _isDirty = true;
                    _unitName = value;
                    OnPropertyChanged(() => UnitName);
                }
            }
        }

        #endregion

        #region Discount

        private decimal _discount;
        /// <summary>
        /// Gets or sets the Discount.
        /// </summary>
        public decimal Discount
        {
            get
            {
                return _discount;
            }
            set
            {
                if (_discount != value)
                {
                    _isDirty = true;
                    _discount = value;
                    OnPropertyChanged(() => Discount);
                }
            }
        }

        #endregion

        #endregion

        #region Methods

        #region ShallowClone

        /// <summary>
        /// Creates a shallow copy of this object.
        /// </summary>
        /// <returns>A shallow copy of this object.</returns>
        public base_PurchaseOrderReceiveModel ShallowClone()
        {
            return (base_PurchaseOrderReceiveModel)this.MemberwiseClone();
        }

        #endregion

        #endregion

        #region Override Methods

        #endregion

        #region IDataErrorInfo Members

        public string Error
        {
            get
            {
                List<string> errors = new List<string>();
                PropertyDescriptorCollection props = TypeDescriptor.GetProperties(this);
                foreach (PropertyDescriptor prop in props)
                {
                    string msg = this[prop.Name];
                    if (!string.IsNullOrWhiteSpace(msg))
                    {
                        errors.Add(msg);
                    }
                }

                return string.Join(Environment.NewLine, errors);
            }
        }

        public string this[string columnName]
        {
            get
            {
                string message = null;

                switch (columnName)
                {
                    case "PurchaseOrderDetail":

                        if (_purchaseOrderDetail == null)
                        {
                            message = "Please select an item.";
                        }

                        break;

                    case "RecQty":

                        if (_recQty <= 0)
                        {
                            message = "Received quantity > 0";
                        }
                        else if (_purchaseOrder != null &&
                            _purchaseOrderDetail != null &&
                            _purchaseOrder.PurchaseOrderReceiveCollection != null &&
                            !string.IsNullOrWhiteSpace(_PODResource) &&
                            Define.CONFIGURATION.IsAllowRGO != true)
                        {
                            int sumReceivedQty = _purchaseOrder.PurchaseOrderReceiveCollection.Where(x => x.PODResource == _PODResource).Sum(x => x.RecQty);
                            int orderQty = _purchaseOrderDetail.Quantity;
                            if (orderQty < sumReceivedQty)
                            {
                                message = "Quantity >= ReceivedQty";
                            }
                        }

                        break;
                }

                return message;
            }
        }

        #endregion

        #region IEditableObject Members

        void IEditableObject.BeginEdit()
        {
            if (_backup == null)
            {
                _backup = ShallowClone();
                if (_backup.PurchaseOrder != null)
                {
                    _oldStatus = _backup.PurchaseOrder.Status;
                }
            }
        }

        void IEditableObject.CancelEdit()
        {
            if (_backup != null)
            {
                Id = _backup.Id;
                PurchaseOrderDetail = _backup.PurchaseOrderDetail;
                PurchaseOrderDetailId = _backup.PurchaseOrderDetailId;
                POResource = _backup.POResource;
                PODResource = _backup.PODResource;
                ProductResource = _backup.ProductResource;
                ItemCode = _backup.ItemCode;
                ItemName = _backup.ItemName;
                ItemAtribute = _backup.ItemAtribute;
                ItemSize = _backup.ItemSize;
                RecQty = _backup.RecQty;
                IsReceived = _backup.IsReceived;
                ReceiveDate = _backup.ReceiveDate;
                Resource = _backup.Resource;
                IsTemporary = _backup.IsTemporary;
                IsChecked = _backup.IsChecked;
                IsDeleted = _backup.IsDeleted;
                IsNew = _backup.IsNew;
                IsDirty = _backup.IsDirty;
                _backup = null;

                if (_purchaseOrder != null)
                {
                    _purchaseOrder.Status = _oldStatus;
                }
            }
        }

        void IEditableObject.EndEdit()
        {
            if (_backup != null)
            {
                _backup = null;
                IsTemporary = false;
            }
        }

        #endregion

        #endregion
    }
}

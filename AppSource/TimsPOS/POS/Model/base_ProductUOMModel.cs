//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using CPC.POS.Database;
using CPC.Toolkit.Base;

namespace CPC.POS.Model
{
    /// <summary>
    /// Model for table base_ProductUOM
    /// </summary>
    [Serializable]
    public partial class base_ProductUOMModel : ModelBase, IDataErrorInfo
    {
        #region Constructor

        // Default constructor
        public base_ProductUOMModel()
        {
            this.IsNew = true;
            this.base_ProductUOM = new base_ProductUOM();
        }

        // Default constructor that set entity to field
        public base_ProductUOMModel(base_ProductUOM base_productuom, bool isRaiseProperties = false)
        {
            this.base_ProductUOM = base_productuom;
            if (!isRaiseProperties)
                this.ToModel();
            else
                this.ToModelAndRaise();
            this.IsDirty = false;
        }

        #endregion

        #region Entity Properties

        public base_ProductUOM base_ProductUOM { get; private set; }

        #endregion

        #region Primitive Properties

        protected long _id;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the Id</para>
        /// </summary>
        public long Id
        {
            get { return this._id; }
            set
            {
                if (this._id != value)
                {
                    this.IsDirty = true;
                    this._id = value;
                    OnPropertyChanged(() => Id);
                    PropertyChangedCompleted(() => Id);
                }
            }
        }

        protected Nullable<long> _productStoreId;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the ProductStoreId</para>
        /// </summary>
        public Nullable<long> ProductStoreId
        {
            get { return this._productStoreId; }
            set
            {
                if (this._productStoreId != value)
                {
                    this.IsDirty = true;
                    this._productStoreId = value;
                    OnPropertyChanged(() => ProductStoreId);
                    PropertyChangedCompleted(() => ProductStoreId);
                }
            }
        }

        protected long _productId;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the ProductId</para>
        /// </summary>
        public long ProductId
        {
            get { return this._productId; }
            set
            {
                if (this._productId != value)
                {
                    this.IsDirty = true;
                    this._productId = value;
                    OnPropertyChanged(() => ProductId);
                    PropertyChangedCompleted(() => ProductId);
                }
            }
        }

        protected int _uOMId;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the UOMId</para>
        /// </summary>
        public int UOMId
        {
            get { return this._uOMId; }
            set
            {
                if (this._uOMId != value)
                {
                    this.IsDirty = true;
                    this._uOMId = value;
                    OnPropertyChanged(() => UOMId);
                    PropertyChangedCompleted(() => UOMId);
                }
            }
        }

        protected int _baseUnitNumber;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the BaseUnitNumber</para>
        /// </summary>
        public int BaseUnitNumber
        {
            get { return this._baseUnitNumber; }
            set
            {
                if (this._baseUnitNumber != value)
                {
                    this.IsDirty = true;
                    this._baseUnitNumber = value;
                    OnPropertyChanged(() => BaseUnitNumber);
                    PropertyChangedCompleted(() => BaseUnitNumber);
                }
            }
        }

        protected decimal _regularPrice;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the RegularPrice</para>
        /// </summary>
        public decimal RegularPrice
        {
            get { return this._regularPrice; }
            set
            {
                if (this._regularPrice != value)
                {
                    this.IsDirty = true;
                    this._regularPrice = value;
                    OnPropertyChanged(() => RegularPrice);
                    PropertyChangedCompleted(() => RegularPrice);
                }
            }
        }

        protected int _quantityOnHand;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the QuantityOnHand</para>
        /// </summary>
        public int QuantityOnHand
        {
            get { return this._quantityOnHand; }
            set
            {
                if (this._quantityOnHand != value)
                {
                    this.IsDirty = true;
                    this._quantityOnHand = value;
                    OnPropertyChanged(() => QuantityOnHand);
                    PropertyChangedCompleted(() => QuantityOnHand);
                }
            }
        }

        protected decimal _averageCost;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the AverageCost</para>
        /// </summary>
        public decimal AverageCost
        {
            get { return this._averageCost; }
            set
            {
                if (this._averageCost != value)
                {
                    this.IsDirty = true;
                    this._averageCost = value;
                    OnPropertyChanged(() => AverageCost);
                    PropertyChangedCompleted(() => AverageCost);
                }
            }
        }

        protected decimal _price1;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the Price1</para>
        /// </summary>
        public decimal Price1
        {
            get { return this._price1; }
            set
            {
                if (this._price1 != value)
                {
                    this.IsDirty = true;
                    this._price1 = value;
                    OnPropertyChanged(() => Price1);
                    PropertyChangedCompleted(() => Price1);
                }
            }
        }

        protected decimal _price2;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the Price2</para>
        /// </summary>
        public decimal Price2
        {
            get { return this._price2; }
            set
            {
                if (this._price2 != value)
                {
                    this.IsDirty = true;
                    this._price2 = value;
                    OnPropertyChanged(() => Price2);
                    PropertyChangedCompleted(() => Price2);
                }
            }
        }

        protected decimal _price3;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the Price3</para>
        /// </summary>
        public decimal Price3
        {
            get { return this._price3; }
            set
            {
                if (this._price3 != value)
                {
                    this.IsDirty = true;
                    this._price3 = value;
                    OnPropertyChanged(() => Price3);
                    PropertyChangedCompleted(() => Price3);
                }
            }
        }

        protected decimal _price4;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the Price4</para>
        /// </summary>
        public decimal Price4
        {
            get { return this._price4; }
            set
            {
                if (this._price4 != value)
                {
                    this.IsDirty = true;
                    this._price4 = value;
                    OnPropertyChanged(() => Price4);
                    PropertyChangedCompleted(() => Price4);
                }
            }
        }

        protected decimal _markDownPercent1;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the MarkDownPercent1</para>
        /// </summary>
        public decimal MarkDownPercent1
        {
            get { return this._markDownPercent1; }
            set
            {
                if (this._markDownPercent1 != value)
                {
                    this.IsDirty = true;
                    this._markDownPercent1 = value;
                    OnPropertyChanged(() => MarkDownPercent1);
                    PropertyChangedCompleted(() => MarkDownPercent1);
                }
            }
        }

        protected decimal _markDownPercent2;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the MarkDownPercent2</para>
        /// </summary>
        public decimal MarkDownPercent2
        {
            get { return this._markDownPercent2; }
            set
            {
                if (this._markDownPercent2 != value)
                {
                    this.IsDirty = true;
                    this._markDownPercent2 = value;
                    OnPropertyChanged(() => MarkDownPercent2);
                    PropertyChangedCompleted(() => MarkDownPercent2);
                }
            }
        }

        protected decimal _markDownPercent3;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the MarkDownPercent3</para>
        /// </summary>
        public decimal MarkDownPercent3
        {
            get { return this._markDownPercent3; }
            set
            {
                if (this._markDownPercent3 != value)
                {
                    this.IsDirty = true;
                    this._markDownPercent3 = value;
                    OnPropertyChanged(() => MarkDownPercent3);
                    PropertyChangedCompleted(() => MarkDownPercent3);
                }
            }
        }

        protected decimal _markDownPercent4;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the MarkDownPercent4</para>
        /// </summary>
        public decimal MarkDownPercent4
        {
            get { return this._markDownPercent4; }
            set
            {
                if (this._markDownPercent4 != value)
                {
                    this.IsDirty = true;
                    this._markDownPercent4 = value;
                    OnPropertyChanged(() => MarkDownPercent4);
                    PropertyChangedCompleted(() => MarkDownPercent4);
                }
            }
        }

        protected decimal _marginPercent;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the MarginPercent</para>
        /// </summary>
        public decimal MarginPercent
        {
            get { return this._marginPercent; }
            set
            {
                if (this._marginPercent != value)
                {
                    this.IsDirty = true;
                    this._marginPercent = value;
                    OnPropertyChanged(() => MarginPercent);
                    PropertyChangedCompleted(() => MarginPercent);
                }
            }
        }

        protected decimal _markupPercent;
        /// <summary>
        /// Property Model
        /// <para>Gets or sets the MarkupPercent</para>
        /// </summary>
        public decimal MarkupPercent
        {
            get { return this._markupPercent; }
            set
            {
                if (this._markupPercent != value)
                {
                    this.IsDirty = true;
                    this._markupPercent = value;
                    OnPropertyChanged(() => MarkupPercent);
                    PropertyChangedCompleted(() => MarkupPercent);
                }
            }
        }

        #endregion

        #region Public Methods

        /// <summary>
        /// <para>Public Method</para>
        /// Method for set IsNew & IsDirty = false;
        /// </summary>
        public void EndUpdate()
        {
            this.IsNew = false;
            this.IsDirty = false;
        }

        /// <summary>
        /// Public Method
        /// <para>Method for set PropertyModel to Entity</para>
        /// </summary>
        public void ToEntity()
        {
            if (IsNew)
                this.base_ProductUOM.Id = this.Id;
            this.base_ProductUOM.ProductStoreId = this.ProductStoreId;
            this.base_ProductUOM.ProductId = this.ProductId;
            this.base_ProductUOM.UOMId = this.UOMId;
            this.base_ProductUOM.BaseUnitNumber = this.BaseUnitNumber;
            this.base_ProductUOM.RegularPrice = this.RegularPrice;
            this.base_ProductUOM.QuantityOnHand = this.QuantityOnHand;
            this.base_ProductUOM.AverageCost = this.AverageCost;
            this.base_ProductUOM.Price1 = this.Price1;
            this.base_ProductUOM.Price2 = this.Price2;
            this.base_ProductUOM.Price3 = this.Price3;
            this.base_ProductUOM.Price4 = this.Price4;
            this.base_ProductUOM.MarkDownPercent1 = this.MarkDownPercent1;
            this.base_ProductUOM.MarkDownPercent2 = this.MarkDownPercent2;
            this.base_ProductUOM.MarkDownPercent3 = this.MarkDownPercent3;
            this.base_ProductUOM.MarkDownPercent4 = this.MarkDownPercent4;
            this.base_ProductUOM.MarginPercent = this.MarginPercent;
            this.base_ProductUOM.MarkupPercent = this.MarkupPercent;
        }

        /// <summary>
        /// Public Method
        /// <para>Method for set Entity to PropertyModel</para>
        /// </summary
        public void ToModel()
        {
            this._id = this.base_ProductUOM.Id;
            this._productStoreId = this.base_ProductUOM.ProductStoreId;
            this._productId = this.base_ProductUOM.ProductId;
            this._uOMId = this.base_ProductUOM.UOMId;
            this._baseUnitNumber = this.base_ProductUOM.BaseUnitNumber;
            this._regularPrice = this.base_ProductUOM.RegularPrice;
            this._quantityOnHand = this.base_ProductUOM.QuantityOnHand;
            this._averageCost = this.base_ProductUOM.AverageCost;
            this._price1 = this.base_ProductUOM.Price1;
            this._price2 = this.base_ProductUOM.Price2;
            this._price3 = this.base_ProductUOM.Price3;
            this._price4 = this.base_ProductUOM.Price4;
            this._markDownPercent1 = this.base_ProductUOM.MarkDownPercent1;
            this._markDownPercent2 = this.base_ProductUOM.MarkDownPercent2;
            this._markDownPercent3 = this.base_ProductUOM.MarkDownPercent3;
            this._markDownPercent4 = this.base_ProductUOM.MarkDownPercent4;
            this._marginPercent = this.base_ProductUOM.MarginPercent;
            this._markupPercent = this.base_ProductUOM.MarkupPercent;
        }

        /// <summary>
        /// Public Method
        /// <para>Method for set Entity to PropertyModel</para>
        /// </summary
        public void ToModelAndRaise()
        {
            this.Id = this.base_ProductUOM.Id;
            this.ProductStoreId = this.base_ProductUOM.ProductStoreId;
            this.ProductId = this.base_ProductUOM.ProductId;
            this.UOMId = this.base_ProductUOM.UOMId;
            this.BaseUnitNumber = this.base_ProductUOM.BaseUnitNumber;
            this.RegularPrice = this.base_ProductUOM.RegularPrice;
            this.QuantityOnHand = this.base_ProductUOM.QuantityOnHand;
            this.AverageCost = this.base_ProductUOM.AverageCost;
            this.Price1 = this.base_ProductUOM.Price1;
            this.Price2 = this.base_ProductUOM.Price2;
            this.Price3 = this.base_ProductUOM.Price3;
            this.Price4 = this.base_ProductUOM.Price4;
            this.MarkDownPercent1 = this.base_ProductUOM.MarkDownPercent1;
            this.MarkDownPercent2 = this.base_ProductUOM.MarkDownPercent2;
            this.MarkDownPercent3 = this.base_ProductUOM.MarkDownPercent3;
            this.MarkDownPercent4 = this.base_ProductUOM.MarkDownPercent4;
            this.MarginPercent = this.base_ProductUOM.MarginPercent;
            this.MarkupPercent = this.base_ProductUOM.MarkupPercent;
        }

        #endregion

        #region Custom Code

        #region Properties

        #region Code

        private string _code;
        /// <summary>
        /// Gets or sets unit's code.
        /// </summary>
        public string Code
        {
            get
            {
                return _code;
            }
            set
            {
                if (_code != value)
                {
                    _isDirty = true;
                    _code = value;
                    OnPropertyChanged(() => Code);
                }
            }
        }

        #endregion

        #region Name

        private string _name;
        /// <summary>
        /// Gets or sets unit's name.
        /// </summary>
        public string Name
        {
            get
            {
                return _name;
            }
            set
            {
                if (_name != value)
                {
                    _isDirty = true;
                    _name = value;
                    OnPropertyChanged(() => Name);
                }
            }
        }

        #endregion

        #endregion

        #region Public Methods

        /// <summary>
        /// Create new entity
        /// </summary>
        public void ClearEntity()
        {
            base_ProductUOM = new base_ProductUOM();
        }

        /// <summary>
        /// Copy value from other product UOM model
        /// </summary>
        /// <param name="productUOMModel">Other product UOM model</param>
        public void ToModel(base_ProductUOMModel productUOMModel)
        {
            //this.Id = this.base_ProductUOM.Id;
            //this.ProductId = this.base_ProductUOM.ProductId;
            this.UOMId = productUOMModel.UOMId;
            this.BaseUnitNumber = productUOMModel.BaseUnitNumber;
            this.RegularPrice = productUOMModel.RegularPrice;
            this.QuantityOnHand = productUOMModel.QuantityOnHand;
            this.AverageCost = productUOMModel.AverageCost;
            this.Price1 = productUOMModel.Price1;
            this.Price2 = productUOMModel.Price2;
            this.Price3 = productUOMModel.Price3;
            this.Price4 = productUOMModel.Price4;
            this.MarkDownPercent1 = productUOMModel.MarkDownPercent1;
            this.MarkDownPercent2 = productUOMModel.MarkDownPercent2;
            this.MarkDownPercent3 = productUOMModel.MarkDownPercent3;
            this.MarkDownPercent4 = productUOMModel.MarkDownPercent4;
            this.MarginPercent = productUOMModel.MarginPercent;
            this.MarkupPercent = productUOMModel.MarkupPercent;
        }

        /// <summary>
        /// Calculator price when markdown changed
        /// </summary>
        /// <param name="markDown">Markdown value</param>
        /// <returns>Price value</returns>
        public decimal CalcPrice(decimal markDown)
        {
            return Math.Round(RegularPrice * (1 - markDown / 100), 2);
        }

        /// <summary>
        /// Calculator markdown when price changed
        /// </summary>
        /// <param name="price">Price value</param>
        /// <returns>Markdown value</returns>
        public decimal CalcMarkDown(decimal price)
        {
            if (RegularPrice == 0)
                return 0;
            return Math.Round(100 * (1 - price / RegularPrice), 2);
        }

        /// <summary>
        /// Calculator margin, markup and price
        /// </summary>
        public void UpdateMarginMarkupAndPrice()
        {
            CalcMarginPercent();
            CalcMarkupPercent();

            Price1 = CalcPrice(MarkDownPercent1);
            Price2 = CalcPrice(MarkDownPercent2);
            Price3 = CalcPrice(MarkDownPercent3);
            Price4 = CalcPrice(MarkDownPercent4);
        }

        /// <summary>
        /// Update average cost value by average unit
        /// </summary>
        /// <param name="averageUnitCost"></param>
        public void UpdateAverageCost(decimal averageUnitCost)
        {
            if (BaseUnitNumber != 0)
                AverageCost = averageUnitCost * BaseUnitNumber;
        }

        /// <summary>
        /// Update quantity on hand by base on hand store 
        /// </summary>
        /// <param name="onHandStore"></param>
        public void UpdateQuantityOnHand(int onHandStore)
        {
            if (BaseUnitNumber != 0)
                QuantityOnHand = onHandStore / BaseUnitNumber;
        }

        #endregion

        #region Private Methods

        /// <summary>
        /// Calculator margin percent
        /// </summary>
        private void CalcMarginPercent()
        {
            if (RegularPrice > 0)
            {
                _marginPercent = Math.Round(100 * (1 - AverageCost / RegularPrice), 2);
                OnPropertyChanged(() => MarginPercent);
            }
        }

        /// <summary>
        /// Calculator markup percent
        /// </summary>
        private void CalcMarkupPercent()
        {
            if (AverageCost > 0)
            {
                _markupPercent = Math.Round(100 * (RegularPrice / AverageCost - 1), 2);
                OnPropertyChanged(() => MarkupPercent);
            }
        }

        #endregion

        #endregion

        #region IDataErrorInfo Members

        public string Error
        {
            get { throw new NotImplementedException(); }
        }

        public string this[string columnName]
        {
            get
            {
                string message = string.Empty;

                switch (columnName)
                {
                    case "Id":
                        break;
                }

                if (!string.IsNullOrWhiteSpace(message))
                    return message;
                return null;
            }
        }

        #endregion
    }
}

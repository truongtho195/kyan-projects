//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using FlashCard.Models;


namespace FlashCard.Database
{
    /// <summary>
    /// Model for table BackSide 
    /// </summary>
    public partial class BackSideModel : ViewModelBase, IDataErrorInfo
    {
        #region Ctor

        // Default contructor
        public BackSideModel()
        {
            this.IsNew = true;
            this.BackSide = new BackSide();
        }

        // Default contructor that set entity to field
        public BackSideModel(BackSide backside)
        {
            this.BackSide = backside;
            ToModel();
            this.IsDirty = false;
        }

        #endregion

        #region Entity Properties

        public BackSide BackSide { get; private set; }

        protected bool _isNew;
        /// <summary>
        /// Gets or sets the IsNew
        /// </summary>
        public bool IsNew
        {
            get { return _isNew; }
            set
            {
                if (_isNew != value)
                {
                    _isNew = value;
                    RaisePropertyChanged(() => IsNew);
                }
            }
        }

        protected bool _isDirty;
        /// <summary>
        /// Gets or sets the IsDirty
        /// </summary>
        public bool IsDirty
        {
            get { return _isDirty; }
            set
            {
                if (_isDirty != value)
                {
                    _isDirty = value;
                    RaisePropertyChanged(() => IsDirty);
                }
            }
        }

        protected bool _isDeleted;
        /// <summary>
        /// Gets or sets the IsDeleted
        /// </summary>
        public bool IsDeleted
        {
            get { return _isDeleted; }
            set
            {
                if (_isDeleted != value)
                {
                    _isDeleted = value;
                    RaisePropertyChanged(() => IsDeleted);
                }
            }
        }

        protected bool _isChecked;
        /// <summary>
        /// Gets or sets the IsChecked
        /// </summary>
        public bool IsChecked
        {
            get { return _isChecked; }
            set
            {
                if (_isChecked != value)
                {
                    _isChecked = value;
                    RaisePropertyChanged(() => IsChecked);
                }
            }
        }

        public void EndUpdate()
        {
            this.IsNew = false;
            this.IsDirty = false;
        }

        public void ToEntity()
        {
            if (IsNew)
                this.BackSide.BackSideID = this.BackSideID;
            this.BackSide.LessonID = this.LessonID;
            this.BackSide.Content = this.Content;
            this.BackSide.BackSideName = this.BackSideName;
            this.BackSide.IsMain = this.IsMain;
        }

        public void ToModel()
        {
            this.BackSideID = this.BackSide.BackSideID;
            this.LessonID = this.BackSide.LessonID;
            this.Content = this.BackSide.Content;
            this.BackSideName = this.BackSide.BackSideName;
            this.IsMain = this.BackSide.IsMain;
        }

        #endregion

        #region Primitive Properties

        protected string _backSideID;
        /// <summary>
        /// Gets or sets the BackSideID.
        /// </summary>
        public string BackSideID
        {
            get { return this._backSideID; }
            set
            {
                if (this._backSideID != value)
                {
                    this.IsDirty = true;
                    this._backSideID = value;
                    RaisePropertyChanged(() => BackSideID);
                }
            }
        }

        protected string _lessonID;
        /// <summary>
        /// Gets or sets the LessonID.
        /// </summary>
        public string LessonID
        {
            get { return this._lessonID; }
            set
            {
                if (this._lessonID != value)
                {
                    this.IsDirty = true;
                    this._lessonID = value;
                    RaisePropertyChanged(() => LessonID);
                }
            }
        }

        protected string _content;
        /// <summary>
        /// Gets or sets the Content.
        /// </summary>
        public string Content
        {
            get { return this._content; }
            set
            {
                if (this._content != value)
                {
                    this.IsDirty = true;
                    this._content = value;
                    RaisePropertyChanged(() => Content);
                }
            }
        }

        protected string _backSideName;
        /// <summary>
        /// Gets or sets the BackSideName.
        /// </summary>
        public string BackSideName
        {
            get { return this._backSideName; }
            set
            {
                if (this._backSideName != value)
                {
                    this.IsDirty = true;
                    this._backSideName = value;
                    RaisePropertyChanged(() => BackSideName);
                }
            }
        }

        protected Nullable<byte> _isMain;
        /// <summary>
        /// Gets or sets the IsMain.
        /// </summary>
        public Nullable<byte> IsMain
        {
            get { return this._isMain; }
            set
            {
                if (this._isMain != value)
                {
                    this.IsDirty = true;
                    this._isMain = value;
                    RaisePropertyChanged(() => IsMain);
                }
            }
        }


        #endregion

        #region Custom Code

        #region DataErrorInfo
        public string Error
        {
            get { throw new NotImplementedException(); }
        }
        private Dictionary<string, string> _errors = new Dictionary<string, string>();
        public Dictionary<string, string> Errors
        {
            get
            {
                return _errors;
            }
            set
            {
                if (_errors != value)
                {
                    _errors = value;
                    RaisePropertyChanged(() => Errors);
                }
            }
        }
        public string this[string columnName]
        {
            get
            {
                string message = String.Empty;
                this.Errors.Remove(columnName);
                switch (columnName)
                {
                    case "BackSideName":
                        if (string.IsNullOrWhiteSpace(this.BackSideName))
                            message = "Back side name is required!";
                        break;
                    case "Content":
                        if (string.IsNullOrWhiteSpace(this.Content))
                            message = "Content is require";
                        break;
                }
                if (!String.IsNullOrEmpty(message))
                {
                    this.Errors.Add(columnName, message);
                }
                return message;
            }
        }
        #endregion
        #endregion
    }
}
